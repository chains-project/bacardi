38a39
> import org.tinspin.index.kdtree.KDTreeResult;
168,169c169,170
<                         Vertex near = tree.query1NN(midpoint).value();
<                         if (near != edge.getA() && near != edge.getB()) {
---
>                         KDTreeResult<Vertex> near = tree.query1NN(midpoint);
>                         if (near.value() != edge.getA() && near.value() != edge.getB()) {
606c607,644
<                 final RandomGenerator random = new XoRoShiRo128PlusRandomGenerator(seed);
---
>                 final RandomGenerator random = new RandomGenerator() {
>                         @Override
>                         public void setSeed(long seed) {
>                         }
> 
>                         @Override
>                         public void nextBytes(byte[] bytes) {
>                         }
> 
>                         @Override
>                         public int nextInt(int n) {
>                                 return 0;
>                         }
> 
>                         @Override
>                         public int nextInt() {
>                                 return 0;
>                         }
> 
>                         @Override
>                         public long nextLong() {
>                                 return 0;
>                         }
> 
>                         @Override
>                         public double nextDouble() {
>                                 return 0;
>                         }
> 
>                         @Override
>                         public float nextFloat() {
>                                 return 0;
>                         }
> 
>                         @Override
>                         public void nextGaussians(double[] values) {
>                         }
>                 };
