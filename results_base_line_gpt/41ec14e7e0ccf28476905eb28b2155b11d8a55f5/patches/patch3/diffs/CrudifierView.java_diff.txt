21a22
> import java.lang.reflect.Method;
40,41d40
< import org.apache.commons.beanutils.BeanUtils; // Updated import
< 
105c104
<                 for(PropertyDescriptor descriptor : BeanUtils.getPropertyDescriptors(modelClass)){ // Updated method
---
>                 for(PropertyDescriptor descriptor : getPropertyDescriptors(modelClass)) {
112a112,125
>         }
> 
>         private PropertyDescriptor[] getPropertyDescriptors(Class<?> modelClass) {
>                 Method[] methods = modelClass.getMethods();
>                 Set<PropertyDescriptor> descriptors = new LinkedHashSet<>();
>                 for (Method method : methods) {
>                         if (method.getName().startsWith("get") || method.getName().startsWith("is")) {
>                                 String propertyName = method.getName().startsWith("get") ? 
>                                         method.getName().substring(3) : method.getName().substring(2);
>                                 propertyName = Character.toLowerCase(propertyName.charAt(0)) + propertyName.substring(1);
>                                 descriptors.add(new PropertyDescriptor(propertyName, method, null));
>                         }
>                 }
>                 return descriptors.toArray(new PropertyDescriptor[0]);
