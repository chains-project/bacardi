 Act as an Automatic Program Repair (APR) tool, reply only with code, without explanation.
You are specialized in breaking dependency updates, in which the failure is caused by an external dependency.
To solve the failure you can only work on the client code.
 the following client code fails:
package com.wire.lithium.server.monitoring;

import io.dropwizard.util.Strings;
import org.slf4j.MDC;

import javax.annotation.Nullable;
import javax.ws.rs.container.ContainerRequestContext;
import javax.ws.rs.container.ContainerRequestFilter;
import javax.ws.rs.ext.Provider;
import java.util.UUID;

/**
 * Filter that sets MDC.
 */
@Provider
public class RequestMdcFactoryFilter implements ContainerRequestFilter {
    @Override
    public void filter(ContainerRequestContext requestContext) {
        // save id generated by the Nginx
        addIfNotNull("forwardedFor", requestContext.getHeaderString("X-Request-Id"));
        // generate unique id for each request in the application
        addIfNotNull("appRequest", UUID.randomUUID().toString());
        // header from proxy
        addIfNotNull("forwardedFor", requestContext.getHeaderString("X-Forwarded-For"));
        addIfNotNull("realIp", requestContext.getHeaderString("X-Real-IP"));
    }

    private void addIfNotNull(final String key, @Nullable String value) {
        if (!Strings.isNullOrEmpty(value)) {
            MDC.put(key, value);
        }
    }
}


 with the following error information:
[ERROR] /lithium/src/main/java/com/wire/lithium/server/monitoring/RequestMdcFactoryFilter.java:[8,29] package javax.ws.rs.container does not exist

[ERROR] /lithium/src/main/java/com/wire/lithium/server/monitoring/RequestMdcFactoryFilter.java:[3,26] cannot find symbol
  symbol:   class Strings
  location: package io.dropwizard.util

[ERROR] /lithium/src/main/java/com/wire/lithium/server/monitoring/RequestMdcFactoryFilter.java:[18,24] cannot find symbol
  symbol:   class ContainerRequestContext
  location: class com.wire.lithium.server.monitoring.RequestMdcFactoryFilter

[ERROR] /lithium/src/main/java/com/wire/lithium/server/monitoring/RequestMdcFactoryFilter.java:[15,2] cannot find symbol
  symbol: class Provider

[ERROR] /lithium/src/main/java/com/wire/lithium/server/monitoring/RequestMdcFactoryFilter.java:[9,23] package javax.ws.rs.ext does not exist

[ERROR] /lithium/src/main/java/com/wire/lithium/server/monitoring/RequestMdcFactoryFilter.java:[16,49] cannot find symbol
  symbol: class ContainerRequestFilter

[ERROR] /lithium/src/main/java/com/wire/lithium/server/monitoring/RequestMdcFactoryFilter.java:[7,29] package javax.ws.rs.container does not exist




 propose a patch that can be applied to the code to fix the issue.
 Return only a complete and compilable class in a fenced code block.
 Do not remove any code that you don't want to update keep it in the code block. Do not use "// ... (rest of the code remains unchanged)" in your response.
 You CANNOT change the function signature of any method but may create variables if it simplifies the code.
 You CAN remove the @Override annotation IF AND ONLY IF the method no longer overrides a method in the updated dependency version.
 If fixing the issue requires addressing missing imports, ensure the correct package or class is used in accordance with the newer dependency version.
 Avoid removing any existing code unless it directly causes a compilation or functionality error.
 Return only the fixed class, ensuring it fully compiles and adheres to these constraints.
 