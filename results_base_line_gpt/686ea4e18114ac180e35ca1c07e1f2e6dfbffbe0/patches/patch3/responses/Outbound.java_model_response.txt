```java
package com.wire.lithium.healthchecks;

import com.codahale.metrics.health.HealthCheck;
import com.wire.lithium.API;
import com.wire.lithium.server.monitoring.MDCUtils;
import com.wire.xenon.tools.Logger;

import java.net.HttpURLConnection; // updated import
import java.net.URL; // updated import

public class Outbound extends HealthCheck {
    private final HttpURLConnection connection; // updated type

    public Outbound(HttpURLConnection connection) { // updated type
        this.connection = connection;
    }

    protected Result check() {
        MDCUtils.put("healthCheck", "Outbound"); // tag the logs with health check
        Logger.debug("Starting Outbound healthcheck");
        API api = new API(connection, null); // updated to work with HttpURLConnection

        try {
            connection.setRequestMethod("GET"); // updated to work with HttpURLConnection
            connection.setURL(new URL(api.getWireHost() + "/status")); // updated to work with HttpURLConnection
            int status = connection.getResponseCode(); // updated to work with HttpURLConnection
            String s = connection.getResponseMessage(); // updated to work with HttpURLConnection
            return status == 200 ? Result.healthy() : Result.unhealthy(String.format("%s. status: %d", s, status));
        } catch (Exception e) {
            final String message = String.format("Unable to reach: %s, error: %s", api.getWireHost(), e.getMessage());
            Logger.exception(message, e);
            return Result.unhealthy(message);
        } finally {
            Logger.debug("Finished Outbound healthcheck");
        }
    }
}
```
