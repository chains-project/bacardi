23a24
> import com.google.api.client.json.JsonFactory;
25,28d25
< import com.google.api.services.translate.Translate;
< import com.google.api.services.translate.model.DetectionsResourceItems;
< import com.google.api.services.translate.model.LanguagesResource;
< import com.google.api.services.translate.model.TranslationsResource;
31a29,33
> import com.google.cloud.translate.Translation;
> import com.google.cloud.translate.Translations;
> import com.google.cloud.translate.Detection;
> import com.google.cloud.translate.Languages;
> import com.google.cloud.translate.Translate;
50,51c52,56
<         new Translate.Builder(transport, new JacksonFactory(), initializer)
<             .setRootUrl(options.getHost())
---
>         TranslateOptions.newBuilder()
>             .setHttpTransport(transport)
>             .setJsonFactory(new JacksonFactory())
>             .setCredentials(initializer)
>             .setHost(options.getHost())
53c58,59
<             .build();
---
>             .build()
>             .getService();
69c75
<   public List<List<DetectionsResourceItems>> detect(List<String> texts) {
---
>   public List<List<Detection>> detect(List<String> texts) {
71c77
<       List<List<DetectionsResourceItems>> detections =
---
>       List<List<Detection>> detections =
73c79
<       return detections != null ? detections : ImmutableList.<List<DetectionsResourceItems>>of();
---
>       return detections != null ? detections : ImmutableList.<List<Detection>>of();
80c86
<   public List<LanguagesResource> listSupportedLanguages(Map<Option, ?> optionMap) {
---
>   public List<Languages> listSupportedLanguages(Map<Option, ?> optionMap) {
82c88
<       List<LanguagesResource> languages =
---
>       List<Languages> languages =
92c98
<       return languages != null ? languages : ImmutableList.<LanguagesResource>of();
---
>       return languages != null ? languages : ImmutableList.<Languages>of();
99c105
<   public List<TranslationsResource> translate(List<String> texts, Map<Option, ?> optionMap) {
---
>   public List<Translation> translate(List<String> texts, Map<Option, ?> optionMap) {
104c110
<       List<TranslationsResource> translations =
---
>       List<Translation> translations =
106,113c112,116
<               .translations()
<               .list(texts, targetLanguage)
<               .setSource(sourceLanguage)
<               .setKey(options.getApiKey())
<               .setModel(Option.MODEL.getString(optionMap))
<               .setFormat(Option.FORMAT.getString(optionMap))
<               .execute()
<               .getTranslations();
---
>               .translate(texts, Translate.TranslateOption.targetLanguage(targetLanguage),
>                   Translate.TranslateOption.sourceLanguage(sourceLanguage),
>                   Translate.TranslateOption.apiKey(options.getApiKey()),
>                   Translate.TranslateOption.model(Option.MODEL.getString(optionMap)),
>                   Translate.TranslateOption.format(Option.FORMAT.getString(optionMap)));
115,116c118,119
<           translations != null ? translations : ImmutableList.<TranslationsResource>of(),
<           new Function<TranslationsResource, TranslationsResource>() {
---
>           translations != null ? translations : ImmutableList.<Translation>of(),
>           new Function<Translation, Translation>() {
118,120c121,123
<             public TranslationsResource apply(TranslationsResource translationsResource) {
<               if (translationsResource.getDetectedSourceLanguage() == null) {
<                 translationsResource.setDetectedSourceLanguage(sourceLanguage);
---
>             public Translation apply(Translation translation) {
>               if (translation.getDetectedSourceLanguage() == null) {
>                 translation.setDetectedSourceLanguage(sourceLanguage);
122c125
<               return translationsResource;
---
>               return translation;
