 Act as an Automatic Program Repair (APR) tool, reply only with code, without explanation.
You are specialized in breaking dependency updates, in which the failure is caused by an external dependency.
To solve the failure you can only work on the client code.
 the following client code fails:
package com.premiumminds.billy.portugal.webservices.series;

import java.math.BigInteger;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.ws.rs.core.Response;
import jakarta.jws.Action;
import jakarta.jws.RequestWrapper;
import jakarta.jws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SeriesWS", targetNamespace = "http://at.gov.pt/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SeriesWS {


    /**
     * 
     *                 Esta funcionalidade tem como objetivo, permitir a comunicação das séries à AT, através do 
     *                 registo das mesmas, de modo a que seja atribuído um código único de validação da série.
     *             
     * 
     * @param numInicialSeq
     * @param meioProcessamento
     * @param numCertSWFatur
     * @param serie
     * @param classeDoc
     * @param tipoDoc
     * @param tipoSerie
     * @param dataInicioPrevUtiliz
     * @return
     *     returns com.premiumminds.billy.portugal.webservices.series.SeriesResp
     */
    @WebMethod
    @WebResult(name = "registarSerieResp", targetNamespace = "")
    @RequestWrapper(localName = "registarSerie", targetNamespace = "http://at.gov.pt/", className = "com.premiumminds.billy.portugal.webservices.series.RegistarSerie")
    @ResponseWrapper(localName = "registarSerieResponse", targetNamespace = "http://at.gov.pt/", className = "com.premiumminds.billy.portugal.webservices.series.RegistarSerieResponse")
    @Action(input = "http://at.gov.pt/SeriesWS/registarSerieRequest", output = "http://at.gov.pt/SeriesWS/registarSerieResponse")
    public SeriesResp registarSerie(
        @WebParam(name = "serie", targetNamespace = "")
        String serie,
        @WebParam(name = "tipoSerie", targetNamespace = "")
        String tipoSerie,
        @WebParam(name = "classeDoc", targetNamespace = "")
        String classeDoc,
        @WebParam(name = "tipoDoc", targetNamespace = "")
        String tipoDoc,
        @WebParam(name = "numInicialSeq", targetNamespace = "")
        BigInteger numInicialSeq,
        @WebParam(name = "dataInicioPrevUtiliz", targetNamespace = "")
        XMLGregorianCalendar dataInicioPrevUtiliz,
        @WebParam(name = "numCertSWFatur", targetNamespace = "")
        BigInteger numCertSWFatur,
        @WebParam(name = "meioProcessamento", targetNamespace = "")
        String meioProcessamento);

    /**
     * 
     *                 Esta funcionalidade tem como objetivo, indicar que uma série foi válida para um conjunto 
     *                 de documentos, mas que a mesma já não será usada a partir do último documento comunicado.
     *             
     * 
     * @param serie
     * @param classeDoc
     * @param tipoDoc
     * @param justificacao
     * @param seqUltimoDocEmitido
     * @param codValidacaoSerie
     * @return
     *     returns com.premiumminds.billy.portugal.webservices.series.SeriesResp
     */
    @WebMethod
    @WebResult(name = "finalizarSerieResp", targetNamespace = "")
    @RequestWrapper(localName = "finalizarSerie", targetNamespace = "http://at.gov.pt/", className = "com.premiumminds.billy.portugal.webservices.series.FinalizarSerie")
    @ResponseWrapper(localName = "finalizarSerieResponse", targetNamespace = "http://at.gov.pt/", className = "com.premiumminds.billy.portugal.webservices.series.FinalizarSerieResponse")
    @Action(input = "http://at.gov.pt/SeriesWS/finalizarSerieRequest", output = "http://at.gov.pt/SeriesWS/finalizarSerieResponse")
    public SeriesResp finalizarSerie(
        @WebParam(name = "serie", targetNamespace = "")
        String serie,
        @WebParam(name = "classeDoc", targetNamespace = "")
        String classeDoc,
        @WebParam(name = "tipoDoc", targetNamespace = "")
        String tipoDoc,
        @WebParam(name = "codValidacaoSerie", targetNamespace = "")
        String codValidacaoSerie,
        @WebParam(name = "seqUltimoDocEmitido", targetNamespace = "")
        BigInteger seqUltimoDocEmitido,
        @WebParam(name = "justificacao", targetNamespace = "")
        String justificacao);

    /**
     * 
     *                 Esta funcionalidade tem como objetivo, disponibilizar a consulta das séries comunicadas.
     *             
     * 
     * @param meioProcessamento
     * @param estado
     * @param serie
     * @param classeDoc
     * @param tipoDoc
     * @param tipoSerie
     * @param dataRegistoAte
     * @param codValidacaoSerie
     * @param dataRegistoDe
     * @return
     *     returns com.premiumminds.billy.portugal.webservices.series.ConsultSeriesResp
     */
    @WebMethod
    @WebResult(name = "consultarSeriesResp", targetNamespace = "")
    @RequestWrapper(localName = "consultarSeries", targetNamespace = "http://at.gov.pt/", className = "com.premiumminds.billy.portugal.webservices.series.ConsultarSeries")
    @ResponseWrapper(localName = "consultarSeriesResponse", targetNamespace = "http://at.gov.pt/", className = "com.premiumminds.billy.portugal.webservices.series.ConsultarSeriesResponse")
    @Action(input = "http://at.gov.pt/SeriesWS/consultarSeriesRequest", output = "http://at.gov.pt/SeriesWS/consultarSeriesResponse")
    public ConsultSeriesResp consultarSeries(
        @WebParam(name = "serie", targetNamespace = "")
        String serie,
        @WebParam(name = "tipoSerie", targetNamespace = "")
        String tipoSerie,
        @WebParam(name = "classeDoc", targetNamespace = "")
        String classeDoc,
        @WebParam(name = "tipoDoc", targetNamespace = "")
        String tipoDoc,
        @WebParam(name = "codValidacaoSerie", targetNamespace = "")
        String codValidacaoSerie,
        @WebParam(name = "dataRegistoDe", targetNamespace = "")
        XMLGregorianCalendar dataRegistoDe,
        @WebParam(name = "dataRegistoAte", targetNamespace = "")
        XMLGregorianCalendar dataRegistoAte,
        @WebParam(name = "estado", targetNamespace = "")
        String estado,
        @WebParam(name = "meioProcessamento", targetNamespace = "")
        String meioProcessamento);

    /**
     * 
     *                 Esta funcionalidade tem como objetivo, disponibilizar a ação de anular a comunicação 
     *                 de uma série anteriormente comunicada, por erro.
     *             
     * 
     * @param motivo
     * @param declaracaoNaoEmissao
     * @param serie
     * @param classeDoc
     * @param tipoDoc
     * @param codValidacaoSerie
     * @return
     *     returns com.premiumminds.billy.portugal.webservices.series.SeriesResp
     */
    @WebMethod
    @WebResult(name = "anularSerieResp", targetNamespace = "")
    @RequestWrapper(localName = "anularSerie", targetNamespace = "http://at.gov.pt/", className = "com.premiumminds.billy.portugal.webservices.series.AnularSerie")
    @ResponseWrapper(localName = "anularSerieResponse", targetNamespace = "http://at.gov.pt/", className = "com.premiumminds.billy.portugal.webservices.series.AnularSerieResponse")
    @Action(input = "http://at.gov.pt/SeriesWS/anularSerieRequest", output = "http://at.gov.pt/SeriesWS/anularSerieResponse")
    public SeriesResp anularSerie(
        @WebParam(name = "serie", targetNamespace = "")
        String serie,
        @WebParam(name = "classeDoc", targetNamespace = "")
        String classeDoc,
        @WebParam(name = "tipoDoc", targetNamespace = "")
        String tipoDoc,
        @WebParam(name = "codValidacaoSerie", targetNamespace = "")
        String codValidacaoSerie,
        @WebParam(name = "motivo", targetNamespace = "")
        String motivo,
        @WebParam(name = "declaracaoNaoEmissao", targetNamespace = "")
        boolean declaracaoNaoEmissao);

}

 with the following error information:
[ERROR] /billy/billy-portugal/src-generated/main/java/com/premiumminds/billy/portugal/webservices/series/SeriesWS.java:[50,6] cannot find symbol
  symbol:   class Action
  location: interface com.premiumminds.billy.portugal.webservices.series.SeriesWS

[ERROR] /billy/billy-portugal/src-generated/main/java/com/premiumminds/billy/portugal/webservices/series/SeriesWS.java:[10,26] package jakarta.ws.rs.core does not exist

[ERROR] /billy/billy-portugal/src-generated/main/java/com/premiumminds/billy/portugal/webservices/series/SeriesWS.java:[49,6] cannot find symbol
  symbol:   class ResponseWrapper
  location: interface com.premiumminds.billy.portugal.webservices.series.SeriesWS

[ERROR] /billy/billy-portugal/src-generated/main/java/com/premiumminds/billy/portugal/webservices/series/SeriesWS.java:[86,6] cannot find symbol
  symbol:   class RequestWrapper
  location: interface com.premiumminds.billy.portugal.webservices.series.SeriesWS

[ERROR] /billy/billy-portugal/src-generated/main/java/com/premiumminds/billy/portugal/webservices/series/SeriesWS.java:[122,6] cannot find symbol
  symbol:   class RequestWrapper
  location: interface com.premiumminds.billy.portugal.webservices.series.SeriesWS

[ERROR] /billy/billy-portugal/src-generated/main/java/com/premiumminds/billy/portugal/webservices/series/SeriesWS.java:[163,6] cannot find symbol
  symbol:   class ResponseWrapper
  location: interface com.premiumminds.billy.portugal.webservices.series.SeriesWS

[ERROR] /billy/billy-portugal/src-generated/main/java/com/premiumminds/billy/portugal/webservices/series/SeriesWS.java:[88,6] cannot find symbol
  symbol:   class Action
  location: interface com.premiumminds.billy.portugal.webservices.series.SeriesWS

[ERROR] /billy/billy-portugal/src-generated/main/java/com/premiumminds/billy/portugal/webservices/series/SeriesWS.java:[11,19] cannot find symbol
  symbol:   class Action
  location: package jakarta.jws

[ERROR] /billy/billy-portugal/src-generated/main/java/com/premiumminds/billy/portugal/webservices/series/SeriesWS.java:[124,6] cannot find symbol
  symbol:   class Action
  location: interface com.premiumminds.billy.portugal.webservices.series.SeriesWS

[ERROR] /billy/billy-portugal/src-generated/main/java/com/premiumminds/billy/portugal/webservices/series/SeriesWS.java:[13,19] cannot find symbol
  symbol:   class ResponseWrapper
  location: package jakarta.jws

[ERROR] /billy/billy-portugal/src-generated/main/java/com/premiumminds/billy/portugal/webservices/series/SeriesWS.java:[164,6] cannot find symbol
  symbol:   class Action
  location: interface com.premiumminds.billy.portugal.webservices.series.SeriesWS

[ERROR] /billy/billy-portugal/src-generated/main/java/com/premiumminds/billy/portugal/webservices/series/SeriesWS.java:[123,6] cannot find symbol
  symbol:   class ResponseWrapper
  location: interface com.premiumminds.billy.portugal.webservices.series.SeriesWS

[ERROR] /billy/billy-portugal/src-generated/main/java/com/premiumminds/billy/portugal/webservices/series/SeriesWS.java:[162,6] cannot find symbol
  symbol:   class RequestWrapper
  location: interface com.premiumminds.billy.portugal.webservices.series.SeriesWS

[ERROR] /billy/billy-portugal/src-generated/main/java/com/premiumminds/billy/portugal/webservices/series/SeriesWS.java:[87,6] cannot find symbol
  symbol:   class ResponseWrapper
  location: interface com.premiumminds.billy.portugal.webservices.series.SeriesWS

[ERROR] /billy/billy-portugal/src-generated/main/java/com/premiumminds/billy/portugal/webservices/series/SeriesWS.java:[48,6] cannot find symbol
  symbol:   class RequestWrapper
  location: interface com.premiumminds.billy.portugal.webservices.series.SeriesWS

[ERROR] /billy/billy-portugal/src-generated/main/java/com/premiumminds/billy/portugal/webservices/series/SeriesWS.java:[12,19] cannot find symbol
  symbol:   class RequestWrapper
  location: package jakarta.jws




 propose a patch that can be applied to the code to fix the issue.
 Return only a complete and compilable class in a fenced code block.
 Do not remove any code that you don't want to update keep it in the code block. Do not use "// ... (rest of the code remains unchanged)" in your response.
 You CANNOT change the function signature of any method but may create variables if it simplifies the code.
 You CAN remove the @Override annotation IF AND ONLY IF the method no longer overrides a method in the updated dependency version.
 If fixing the issue requires addressing missing imports, ensure the correct package or class is used in accordance with the newer dependency version.
 Avoid removing any existing code unless it directly causes a compilation or functionality error.
 Return only the fixed class, ensuring it fully compiles and adheres to these constraints.
 