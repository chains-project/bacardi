25,31d24
< import com.google.api.services.cloudresourcemanager.model.Binding;
< import com.google.api.services.cloudresourcemanager.model.Operation;
< import com.google.api.services.cloudresourcemanager.model.Policy;
< import com.google.api.services.cloudresourcemanager.model.Project;
< import com.google.api.services.cloudresourcemanager.model.SetIamPolicyRequest;
< import com.google.api.services.cloudresourcemanager.model.TestIamPermissionsRequest;
< import com.google.api.services.cloudresourcemanager.model.TestIamPermissionsResponse;
68a62,69
> import com.google.cloud.resourcemanager.v3.Project;
> import com.google.cloud.resourcemanager.v3.Policy;
> import com.google.cloud.resourcemanager.v3.Binding;
> import com.google.cloud.resourcemanager.v3.SetIamPolicyRequest;
> import com.google.cloud.resourcemanager.v3.TestIamPermissionsRequest;
> import com.google.cloud.resourcemanager.v3.TestIamPermissionsResponse;
> import com.google.cloud.resourcemanager.v3.Operation;
> 
401,402c402,403
<     if (project.getName() != null) {
<       for (char c : project.getName().toCharArray()) {
---
>     if (project.getDisplayName() != null) {
>       for (char c : project.getDisplayName().toCharArray()) {
449,451c450,452
<       project.setLifecycleState("ACTIVE");
<       project.setProjectNumber(Math.abs(PROJECT_NUMBER_GENERATOR.nextLong() % Long.MAX_VALUE));
<       project.setCreateTime(
---
>       project = project.toBuilder().setState(Project.State.ACTIVE).build();
>       project = project.toBuilder().setProjectNumber(Math.abs(PROJECT_NUMBER_GENERATOR.nextLong() % Long.MAX_VALUE)).build();
>       project = project.toBuilder().setCreateTime(
454c455
<               .format(Instant.ofEpochMilli(System.currentTimeMillis())));
---
>               .format(Instant.ofEpochMilli(System.currentTimeMillis()))).build();
459,461c460,461
<       Policy emptyPolicy =
<           new Policy()
<               .setBindings(Collections.<Binding>emptyList())
---
>       Policy emptyPolicy = Policy.newBuilder()
>               .addAllBindings(Collections.<Binding>emptyList())
463c463,464
<               .setVersion(0);
---
>               .setVersion(0)
>               .build();
483c484
<     if (!project.getLifecycleState().equals("ACTIVE")) {
---
>     if (!project.getState().equals(Project.State.ACTIVE)) {
487c488,489
<       project.setLifecycleState("DELETE_REQUESTED");
---
>       project = project.toBuilder().setState(Project.State.DELETE_REQUESTED).build();
>       projects.replace(projectId, project);
581c583
<         if (!satisfiesFilter(project.getName(), filterEntry[1])) {
---
>         if (!satisfiesFilter(project.getDisplayName(), filterEntry[1])) {
608c610,611
<     Project project = new Project();
---
>     Project.Builder projectBuilder = fullProject.toBuilder();
>     Project project;
612d614
<           project.setCreateTime(fullProject.getCreateTime());
615d616
<           project.setLabels(fullProject.getLabels());
618d618
<           project.setLifecycleState(fullProject.getLifecycleState());
621d620
<           project.setName(fullProject.getName());
624d622
<           project.setParent(fullProject.getParent());
627d624
<           project.setProjectId(fullProject.getProjectId());
630d626
<           project.setProjectNumber(fullProject.getProjectNumber());
633a630
>     project = projectBuilder.build();
642c639
<     } else if (!originalProject.getLifecycleState().equals("ACTIVE")) {
---
>     } else if (!originalProject.getState().equals(Project.State.ACTIVE)) {
650,653c647,650
<     project.setProjectId(projectId);
<     project.setLifecycleState(originalProject.getLifecycleState());
<     project.setCreateTime(originalProject.getCreateTime());
<     project.setProjectNumber(originalProject.getProjectNumber());
---
>     project = project.toBuilder().setProjectId(projectId).build();
>     project = project.toBuilder().setState(originalProject.getState()).build();
>     project = project.toBuilder().setCreateTime(originalProject.getCreateTime()).build();
>     project = project.toBuilder().setProjectNumber(originalProject.getProjectNumber()).build();
670c667
<     } else if (!project.getLifecycleState().equals("DELETE_REQUESTED")) {
---
>     } else if (!project.getState().equals(Project.State.DELETE_REQUESTED)) {
677c674,675
<       project.setLifecycleState("ACTIVE");
---
>       project = project.toBuilder().setState(Project.State.ACTIVE).build();
>       projects.replace(projectId, project);
711,712c709,710
<     policy.setEtag(UUID.randomUUID().toString());
<     policy.setVersion(originalPolicy.getVersion());
---
>     policy = policy.toBuilder().setEtag(UUID.randomUUID().toString()).build();
>     policy = policy.toBuilder().setVersion(originalPolicy.getVersion()).build();
787c785,794
<       project.setLifecycleState(lifecycleState);
---
>         Project.State state;
>         if ("ACTIVE".equals(lifecycleState)) {
>             state = Project.State.ACTIVE;
>         } else if ("DELETE_REQUESTED".equals(lifecycleState)) {
>             state = Project.State.DELETE_REQUESTED;
>         } else {
>             state = Project.State.DELETE_IN_PROGRESS;
>         }
>         project = project.toBuilder().setState(state).build();
>         projects.replace(projectId, project);
