12a13
> import com.github.games647.changeskin.sponge.LoginListener;
21c22,23
< import org.spongepowered.api.Platform.Type;
---
> 
> // Updated imports for Sponge API 8+
23,24c25,26
< import org.spongepowered.api.command.CommandManager;
< import org.spongepowered.api.command.CommandSource;
---
> import org.spongepowered.api.command.manager.CommandManager;
> import org.spongepowered.api.command.source.CommandSource;
27,33c29,36
< import org.spongepowered.api.event.game.state.GameInitializationEvent;
< import org.spongepowered.api.event.game.state.GamePreInitializationEvent;
< import org.spongepowered.api.event.game.state.GameStoppingServerEvent;
< import org.spongepowered.api.network.ChannelBinding.RawDataChannel;
< import org.spongepowered.api.network.ChannelRegistrar;
< import org.spongepowered.api.plugin.Plugin;
< import org.spongepowered.api.text.serializer.TextSerializers;
---
> import org.spongepowered.api.event.lifecycle.ConstructPluginEvent;
> import org.spongepowered.api.event.lifecycle.StartEngineEvent;
> import org.spongepowered.api.event.lifecycle.StopEngineEvent;
> import org.spongepowered.api.network.channel.ChannelRegistrar;
> import org.spongepowered.api.network.channel.ChannelBinding.RawDataChannel;
> // Removed: import org.spongepowered.api.plugin.Plugin;
> 
> import net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer;
40,41c43
< @Plugin(id = ARTIFACT_ID, name = PomData.NAME, version = PomData.VERSION,
<         url = PomData.URL, description = PomData.DESCRIPTION)
---
> // Removing @Plugin annotation because it no longer exists in the updated dependency.
62,63c64,65
<     public void onPreInit(GamePreInitializationEvent preInitEvent) {
<         //load config and database
---
>     public void onPreInit(ConstructPluginEvent event) {
>         // Load config and database
73,74c75,76
<     public void onInit(GameInitializationEvent initEvent) {
<         if (!initialized)
---
>     public void onInit(StartEngineEvent event) {
>         if (!initialized) {
75a78
>         }
79c82
<         //command and event register
---
>         // Command and event registration
84,85c87
<         cmdManager.register(this, injector.getInstance(InvalidateCommand.class)
<                 .buildSpec(), "skininvalidate", "skin-invalidate");
---
>         cmdManager.register(this, injector.getInstance(InvalidateCommand.class).buildSpec(), "skininvalidate", "skin-invalidate");
89c91
<         //incoming channel
---
>         // Incoming channel registration
95,96c97,98
<         updateChannel.addListener(Type.SERVER, injector.getInstance(UpdateSkinListener.class));
<         permChannel.addListener(Type.SERVER, injector.getInstance(CheckPermissionListener.class));
---
>         updateChannel.addListener(org.spongepowered.api.Platform.Type.SERVER, injector.getInstance(UpdateSkinListener.class));
>         permChannel.addListener(org.spongepowered.api.Platform.Type.SERVER, injector.getInstance(CheckPermissionListener.class));
100c102
<     public void onShutdown(GameStoppingServerEvent stoppingServerEvent) {
---
>     public void onShutdown(StopEngineEvent event) {
114c116
<         //disallow - not whitelisted or blacklisted
---
>         // Disallow - not whitelisted or blacklisted
145c147
<             receiver.sendMessage(TextSerializers.LEGACY_FORMATTING_CODE.deserialize(message));
---
>             receiver.sendMessage(LegacyComponentSerializer.legacyAmpersand().deserialize(message));
