33c33
< import org.jasypt.spring.security.PBEPasswordEncoder;
---
> 
91d90
< 
102,103c101,106
<                         PBEPasswordEncoder encoder = new PBEPasswordEncoder();
<                         encoder.setPbeStringEncryptor(stringEncrypter);
---
>                         // Replace the removed PBEPasswordEncoder with an inline implementation
>                         return new PasswordEncoder() {
>                                 @Override
>                                 public String encodePassword(String rawPass, Object salt) {
>                                         return stringEncrypter.encrypt(rawPass);
>                                 }
105c108,117
<                         return encoder;
---
>                                 @Override
>                                 public boolean isPasswordValid(String encPass, String rawPass, Object salt) {
>                                         try {
>                                                 String decrypted = stringEncrypter.decrypt(encPass);
>                                                 return decrypted.equals(rawPass);
>                                         } catch (Exception ex) {
>                                                 return false;
>                                         }
>                                 }
>                         };
125a138
> 
127,128c140
<                         public boolean isPasswordValid(String encPass, char[] rawPass,
<                                         Object salt) {
---
>                         public boolean isPasswordValid(String encPass, char[] rawPass, Object salt) {
145,146c157
<                                         return new String(Base64.getEncoder().encode(byteEncrypter
<                                                         .encrypt(bytes)));
---
>                                         return new String(Base64.getEncoder().encode(byteEncrypter.encrypt(bytes)));
161,162c172
<                         return keystoreProvider.getSecretKey(getKeyAliasInKeyStore())
<                                         .getEncoded();
---
>                         return keystoreProvider.getSecretKey(getKeyAliasInKeyStore()).getEncoded();
180d189
< 
185,186c194
<         public char[] decodeToCharArray(String encPass)
<                         throws UnsupportedOperationException {
---
>         public char[] decodeToCharArray(String encPass) throws UnsupportedOperationException {
200d207
<         
