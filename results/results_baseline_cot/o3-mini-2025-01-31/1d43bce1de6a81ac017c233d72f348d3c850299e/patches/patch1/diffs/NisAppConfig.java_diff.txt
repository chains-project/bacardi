39a40
> import java.io.InputStream;
89c90,92
<                 prop.load(NisAppConfig.class.getClassLoader().getResourceAsStream("db.properties"));
---
>                 try (InputStream in = NisAppConfig.class.getClassLoader().getResourceAsStream("db.properties")) {
>                         prop.load(in);
>                 }
106,113c109,117
<                 prop.load(NisAppConfig.class.getClassLoader().getResourceAsStream("db.properties"));
< 
<                 final org.flywaydb.core.Flyway flyway = new Flyway();
<                 flyway.setDataSource(this.dataSource());
<                 flyway.setClassLoader(NisAppConfig.class.getClassLoader());
<                 flyway.setLocations(prop.getProperty("flyway.locations"));
<                 flyway.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
<                 return flyway;
---
>                 try (InputStream in = NisAppConfig.class.getClassLoader().getResourceAsStream("db.properties")) {
>                         prop.load(in);
>                 }
>                 return Flyway.configure()
>                                 .dataSource(this.dataSource())
>                                 .classLoader(NisAppConfig.class.getClassLoader())
>                                 .locations(prop.getProperty("flyway.locations"))
>                                 .validateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")))
>                                 .load();
