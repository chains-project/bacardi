15,17c15
< import com.pubnub.api.models.consumer.pubsub.objects.PNMembershipResult;
< import com.pubnub.api.models.consumer.pubsub.objects.PNSpaceResult;
< import com.pubnub.api.models.consumer.pubsub.objects.PNUserResult;
---
> import com.pubnub.api.models.consumer.pubsub.files.PNFileEventResult;
40,41c38,39
<     PNConfiguration pnConfiguration = new PNConfiguration();
<     pnConfiguration.setSubscribeKey(publicKey);
---
>     // Updated PNConfiguration instantiation: using the constructor that accepts the subscribe key.
>     PNConfiguration pnConfiguration = new PNConfiguration(publicKey);
92a91
>                 // Implementation for the new abstract method from SubscribeCallback.
94,105c93,94
<                 public void user(PubNub pubnub, PNUserResult pnUserResult) {
<                   LOG.debug("PubNub user: {}", pnUserResult.toString());
<                 }
< 
<                 @Override
<                 public void space(PubNub pubnub, PNSpaceResult pnSpaceResult) {
<                   LOG.debug("PubNub space: {}", pnSpaceResult.toString());
<                 }
< 
<                 @Override
<                 public void membership(PubNub pubnub, PNMembershipResult pnMembershipResult) {
<                   LOG.debug("PubNub membership: {}", pnMembershipResult.toString());
---
>                 public void file(PubNub pubnub, PNFileEventResult pnFileEventResult) {
>                   LOG.debug("PubNub file: {}", pnFileEventResult.toString());
