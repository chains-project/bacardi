//
// This file was generated by the Eclipse Implementation of JAXB, v2.3.6 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.08.18 at 08:13:47 AM GMT 
//


package com.premiumminds.billy.portugal.services.export.saftpt.v1_02_01.schema;

import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;


/**
 * <p>Java class for WithholdingTax complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="WithholdingTax"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}WithholdingTaxType" minOccurs="0"/&gt;
 *         &lt;element name="WithholdingTaxDescription" type="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SAFPTtextTypeMandatoryMax60Car" minOccurs="0"/&gt;
 *         &lt;element name="WithholdingTaxAmount" type="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SAFmonetaryType"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "WithholdingTax", propOrder = {
    "withholdingTaxType",
    "withholdingTaxDescription",
    "withholdingTaxAmount"
})
public class WithholdingTax implements ToString2
{

    @XmlElement(name = "WithholdingTaxType")
    protected String withholdingTaxType;
    @XmlElement(name = "WithholdingTaxDescription")
    protected String withholdingTaxDescription;
    @XmlElement(name = "WithholdingTaxAmount", required = true)
    protected BigDecimal withholdingTaxAmount;

    /**
     * Gets the value of the withholdingTaxType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getWithholdingTaxType() {
        return withholdingTaxType;
    }

    /**
     * Sets the value of the withholdingTaxType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setWithholdingTaxType(String value) {
        this.withholdingTaxType = value;
    }

    /**
     * Gets the value of the withholdingTaxDescription property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getWithholdingTaxDescription() {
        return withholdingTaxDescription;
    }

    /**
     * Sets the value of the withholdingTaxDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setWithholdingTaxDescription(String value) {
        this.withholdingTaxDescription = value;
    }

    /**
     * Gets the value of the withholdingTaxAmount property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getWithholdingTaxAmount() {
        return withholdingTaxAmount;
    }

    /**
     * Sets the value of the withholdingTaxAmount property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setWithholdingTaxAmount(BigDecimal value) {
        this.withholdingTaxAmount = value;
    }

    @Override
    public String toString() {
        final ToStringStrategy2 strategy = new JAXBToStringStrategy();
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    @Override
    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    @Override
    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            String theWithholdingTaxType;
            theWithholdingTaxType = this.getWithholdingTaxType();
            strategy.appendField(locator, this, "withholdingTaxType", buffer, theWithholdingTaxType, (this.withholdingTaxType!= null));
        }
        {
            String theWithholdingTaxDescription;
            theWithholdingTaxDescription = this.getWithholdingTaxDescription();
            strategy.appendField(locator, this, "withholdingTaxDescription", buffer, theWithholdingTaxDescription, (this.withholdingTaxDescription!= null));
        }
        {
            BigDecimal theWithholdingTaxAmount;
            theWithholdingTaxAmount = this.getWithholdingTaxAmount();
            strategy.appendField(locator, this, "withholdingTaxAmount", buffer, theWithholdingTaxAmount, (this.withholdingTaxAmount!= null));
        }
        return buffer;
    }

}