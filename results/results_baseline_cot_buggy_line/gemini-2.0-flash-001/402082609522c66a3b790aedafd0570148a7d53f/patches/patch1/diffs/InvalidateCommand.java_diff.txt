7a8
> import org.spongepowered.api.command.Command;
9,12c10,11
< import org.spongepowered.api.command.CommandSource;
< import org.spongepowered.api.command.args.CommandContext;
< import org.spongepowered.api.command.spec.CommandExecutor;
< import org.spongepowered.api.command.spec.CommandSpec;
---
> import org.spongepowered.api.command.parameter.CommandContext;
> import org.spongepowered.api.command.parameter.Parameter;
14a14
> import org.spongepowered.api.command.CommandCause;
16c16,18
< public class InvalidateCommand implements CommandExecutor, ChangeSkinCommand {
---
> import java.util.Collections;
> 
> public class InvalidateCommand implements ChangeSkinCommand {
25,28c27,29
<     @Override
<     public CommandResult execute(CommandSource src, CommandContext args) {
<         if (!(src instanceof Player)) {
<             plugin.sendMessage(src, "no-console");
---
>     public CommandResult execute(CommandCause cause, CommandContext args) {
>         if (!(cause.root() instanceof Player)) {
>             plugin.sendMessage(cause, "no-console");
32c33
<         Player receiver = (Player) src;
---
>         Player receiver = (Player) cause.root();
38,42c39,42
<     public CommandSpec buildSpec() {
<         return CommandSpec.builder()
<                 .executor(this)
<                 .permission(PomData.ARTIFACT_ID + ".command.skinupdate.base")
<                 .build();
---
>     public Command.Builder buildSpec() {
>         return Command.builder()
>                 .executor(this::execute)
>                 .permission(PomData.ARTIFACT_ID + ".command.skinupdate.base");
