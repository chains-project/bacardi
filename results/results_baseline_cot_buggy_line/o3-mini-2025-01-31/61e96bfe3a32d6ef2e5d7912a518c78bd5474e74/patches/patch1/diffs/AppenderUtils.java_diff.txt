1,15d0
< /**
<  * Copyright 2019 Pinterest, Inc.
<  * 
<  * Licensed under the Apache License, Version 2.0 (the "License");
<  * you may not use this file except in compliance with the License.
<  * You may obtain a copy of the License at
<  * 
<  *    http://www.apache.org/licenses/LICENSE-2.0
<  * 
<  * Unless required by applicable law or agreed to in writing, software
<  * distributed under the License is distributed on an "AS IS" BASIS,
<  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
<  * See the License for the specific language governing permissions and
<  * limitations under the License.
<  */
33a19
> import java.io.ByteArrayOutputStream;
36d21
< import java.io.OutputStream;
53,56d37
<     private TTransport framedTransport;
<     private TProtocol protocol;
<     private OutputStream os;
< 
58,65c39,41
<     public void init(OutputStream os) {
<       this.os = os;
<       // Use the TFlushingFastFramedTransport to be compatible with singer_thrift
<       // log.
<       final int bufferCapacity = 10;
<       framedTransport = new TFastFramedTransport(new TIOStreamTransport(os),
<           bufferCapacity);
<       protocol = new TBinaryProtocol(framedTransport);
---
>     public byte[] headerBytes() {
>       // No header required.
>       return new byte[0];
69c45,49
<     public void doEncode(LogMessage logMessage) throws IOException {
---
>     public byte[] encode(LogMessage logMessage) throws IOException {
>       ByteArrayOutputStream baos = new ByteArrayOutputStream();
>       final int bufferCapacity = 10;
>       TTransport framedTransport = new TFastFramedTransport(new TIOStreamTransport(baos), bufferCapacity);
>       TProtocol protocol = new TBinaryProtocol(framedTransport);
70a51
>         // Serialize the log message using the Thrift binary protocol.
74a56,57
>       } finally {
>         framedTransport.close();
75a59
>       return baos.toByteArray();
79,80c63,65
<     public void close() throws IOException {
<       framedTransport.close();
---
>     public byte[] footerBytes() {
>       // No footer required.
>       return new byte[0];
91a77
>    * @param maxRetentionHours maximum number of hours to retain logs.
