20a21,28
> import jakarta.validation.Validator;
> import jakarta.validation.constraints.NotBlank;
> import jakarta.validation.constraints.NotEmpty;
> import jakarta.validation.constraints.NotNull;
> import jakarta.validation.metadata.BeanDescriptor;
> import jakarta.validation.metadata.ConstraintDescriptor;
> import jakarta.validation.metadata.ElementDescriptor;
> 
37,43d44
< import javax.validation.Validator;
< import javax.validation.constraints.NotBlank;
< import javax.validation.constraints.NotEmpty;
< import javax.validation.constraints.NotNull;
< import javax.validation.metadata.BeanDescriptor;
< import javax.validation.metadata.ConstraintDescriptor;
< import javax.validation.metadata.ElementDescriptor;
155,156c156,160
<                                                 if(objectProperty.type.isEnum()) typesControlGroup = EnumControlGroup.class;
<                                                 else typesControlGroup = ObjectChoiceControlGroup.class;
---
>                                                 if(objectProperty.type.isEnum()) {
>                                                         typesControlGroup = EnumControlGroup.class;
>                                                 } else {
>                                                         typesControlGroup = ObjectChoiceControlGroup.class;
>                                                 }
165d168
< 
183,187c186,189
<                                         controlGroup = controlGroupProviders
<                                                         .get(objectProperty.type)
<                                                         .createControlGroup(view.newChildId()
<                                                                         , new PropertyModel<Object>(ListControlGroups.this.getModel(), objectProperty.name)
<                                                                         , objectProperty.name, getResourceBase(), objectProperty.required, objectProperty.type, entitySettings);
---
>                                         controlGroup = controlGroupProviders.get(objectProperty.type)
>                                                         .createControlGroup(view.newChildId(),
>                                                                 new PropertyModel<Object>(ListControlGroups.this.getModel(), objectProperty.name),
>                                                                 objectProperty.name, getResourceBase(), objectProperty.required, objectProperty.type, entitySettings);
