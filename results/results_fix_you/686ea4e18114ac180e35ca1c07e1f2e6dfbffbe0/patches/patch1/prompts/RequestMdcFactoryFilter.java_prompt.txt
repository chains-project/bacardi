Due to an update of Library io.dropwizard from version 2.1.5 to version 4.0.0, the code in file RequestMdcFactoryFilter.java below is causing errors.

Here is the error message:
[ERROR] /lithium/src/main/java/com/wire/lithium/server/monitoring/RequestMdcFactoryFilter.java:[15,2] cannot find symbol
  symbol: class Provider

[ERROR] /lithium/src/main/java/com/wire/lithium/server/monitoring/RequestMdcFactoryFilter.java:[8,29] package javax.ws.rs.container does not exist

[ERROR] /lithium/src/main/java/com/wire/lithium/server/monitoring/RequestMdcFactoryFilter.java:[16,49] cannot find symbol
  symbol: class ContainerRequestFilter

[ERROR] /lithium/src/main/java/com/wire/lithium/server/monitoring/RequestMdcFactoryFilter.java:[3,26] cannot find symbol
  symbol:   class Strings
  location: package io.dropwizard.util

[ERROR] /lithium/src/main/java/com/wire/lithium/server/monitoring/RequestMdcFactoryFilter.java:[9,23] package javax.ws.rs.ext does not exist

[ERROR] /lithium/src/main/java/com/wire/lithium/server/monitoring/RequestMdcFactoryFilter.java:[18,24] cannot find symbol
  symbol:   class ContainerRequestContext
  location: class com.wire.lithium.server.monitoring.RequestMdcFactoryFilter

[ERROR] /lithium/src/main/java/com/wire/lithium/server/monitoring/RequestMdcFactoryFilter.java:[7,29] package javax.ws.rs.container does not exist



Update the provided code to fix this error.

Focus only on updates that do not change the code's functionality and are related to the version update of the library.

You must reply in the following exact numbered format.

1. `The full updated code in a fenced code block` do not remove any code that you don't want to update keep it in the code block. Do not use "// ... (rest of the code remains unchanged)" in your response.
2. Explanation of the changes you made.

Provided code:

```
package com.wire.lithium.server.monitoring;

import io.dropwizard.util.Strings;
import org.slf4j.MDC;

import javax.annotation.Nullable;
import javax.ws.rs.container.ContainerRequestContext;
import javax.ws.rs.container.ContainerRequestFilter;
import javax.ws.rs.ext.Provider;
import java.util.UUID;

/**
 * Filter that sets MDC.
 */
@Provider
public class RequestMdcFactoryFilter implements ContainerRequestFilter {
    @Override
    public void filter(ContainerRequestContext requestContext) {
        // save id generated by the Nginx
        addIfNotNull("forwardedFor", requestContext.getHeaderString("X-Request-Id"));
        // generate unique id for each request in the application
        addIfNotNull("appRequest", UUID.randomUUID().toString());
        // header from proxy
        addIfNotNull("forwardedFor", requestContext.getHeaderString("X-Forwarded-For"));
        addIfNotNull("realIp", requestContext.getHeaderString("X-Real-IP"));
    }

    private void addIfNotNull(final String key, @Nullable String value) {
        if (!Strings.isNullOrEmpty(value)) {
            MDC.put(key, value);
        }
    }
}


```

Your Response: