Due to an update of Library io.dropwizard from version 2.1.5 to version 4.0.0, the code in file AccessEventJsonLayout.java below is causing errors.

Here is the error message:
[ERROR] /lithium/src/main/java/com/wire/lithium/server/monitoring/AccessEventJsonLayout.java:[7,26] package javax.servlet.http does not exist



Update the provided code to fix this error.

Focus only on updates that do not change the code's functionality and are related to the version update of the library.

You must reply in the following exact numbered format.

1. `The full updated code in a fenced code block` do not remove any code that you don't want to update keep it in the code block. Do not use "// ... (rest of the code remains unchanged)" in your response.
2. Explanation of the changes you made.

Provided code:

```
package com.wire.lithium.server.monitoring;

import ch.qos.logback.access.spi.IAccessEvent;
import ch.qos.logback.classic.Level;
import ch.qos.logback.core.filter.Filter;

import javax.servlet.http.HttpServletResponse;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

/**
 * Layout used on Wire production services in the ELK stack - for access events - HTTP log.
 */
public class AccessEventJsonLayout extends AbstractJsonLayout<IAccessEvent> {


    public AccessEventJsonLayout(List<Filter<IAccessEvent>> filters) {
        super(filters);
    }

    @Override
    public String doLayout(IAccessEvent event) {
        if (shouldIgnoreEvent(event)) {
            return null;
        }
        final Map<String, Object> jsonMap = new LinkedHashMap<>(10);

        jsonMap.put("@timestamp", formatTime(event));
        jsonMap.put("type", "http");
        jsonMap.put("logger", "com.wire.HttpRequest");

        jsonMap.put("level", Level.INFO.levelStr);
        jsonMap.put("requestURI", event.getRequestURI());
        // put there query only if it is not empty
        final String query = event.getQueryString();
        if (query != null && !query.trim().isEmpty()) {
            jsonMap.put("query", query);
        }
        jsonMap.put("remoteHost", event.getRemoteHost());
        jsonMap.put("remoteAddr", event.getRemoteAddr());
        jsonMap.put("method", event.getMethod());
        jsonMap.put("elapsedMls", event.getElapsedTime());
        // we check for null, even though there shouldn't be null, better be safe then sorry
        final HttpServletResponse response = event.getResponse();
        if (response != null) {
            jsonMap.put("responseStatus", response.getStatus());
        }
        return finalizeLog(jsonMap);
    }
}


```

Your Response: