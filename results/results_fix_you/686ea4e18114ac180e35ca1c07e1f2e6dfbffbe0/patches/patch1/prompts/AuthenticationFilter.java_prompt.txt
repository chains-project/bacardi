Due to an update of Library io.dropwizard from version 2.1.5 to version 4.0.0, the code in file AuthenticationFilter.java below is causing errors.

Here is the error message:
[ERROR] /lithium/src/main/java/com/wire/lithium/server/filters/AuthenticationFilter.java:[12,23] package javax.ws.rs.ext does not exist

[ERROR] /lithium/src/main/java/com/wire/lithium/server/filters/AuthenticationFilter.java:[17,24] cannot find symbol
  symbol:   class ContainerRequestContext
  location: class com.wire.lithium.server.filters.AuthenticationFilter

[ERROR] /lithium/src/main/java/com/wire/lithium/server/filters/AuthenticationFilter.java:[11,24] package javax.ws.rs.core does not exist

[ERROR] /lithium/src/main/java/com/wire/lithium/server/filters/AuthenticationFilter.java:[8,29] package javax.ws.rs.container does not exist

[ERROR] /lithium/src/main/java/com/wire/lithium/server/filters/AuthenticationFilter.java:[7,19] package javax.ws.rs does not exist

[ERROR] /lithium/src/main/java/com/wire/lithium/server/filters/AuthenticationFilter.java:[10,24] package javax.ws.rs.core does not exist

[ERROR] /lithium/src/main/java/com/wire/lithium/server/filters/AuthenticationFilter.java:[9,29] package javax.ws.rs.container does not exist

[ERROR] /lithium/src/main/java/com/wire/lithium/server/filters/AuthenticationFilter.java:[15,46] cannot find symbol
  symbol: class ContainerRequestFilter

[ERROR] /lithium/src/main/java/com/wire/lithium/server/filters/AuthenticationFilter.java:[14,2] cannot find symbol
  symbol: class Provider



Update the provided code to fix this error.

Focus only on updates that do not change the code's functionality and are related to the version update of the library.

You must reply in the following exact numbered format.

1. `The full updated code in a fenced code block` do not remove any code that you don't want to update keep it in the code block. Do not use "// ... (rest of the code remains unchanged)" in your response.
2. Explanation of the changes you made.

Provided code:

```
package com.wire.lithium.server.filters;

import com.wire.xenon.Const;
import com.wire.xenon.tools.Logger;
import com.wire.xenon.tools.Util;

import javax.ws.rs.WebApplicationException;
import javax.ws.rs.container.ContainerRequestContext;
import javax.ws.rs.container.ContainerRequestFilter;
import javax.ws.rs.core.HttpHeaders;
import javax.ws.rs.core.Response;
import javax.ws.rs.ext.Provider;

@Provider
public class AuthenticationFilter implements ContainerRequestFilter {
    @Override
    public void filter(ContainerRequestContext requestContext) {
        String auth = requestContext.getHeaderString(HttpHeaders.AUTHORIZATION);
        if (auth == null) {
            Exception cause = new IllegalArgumentException("Missing Authorization");
            throw new WebApplicationException(cause, Response.Status.UNAUTHORIZED);
        }

        String serviceToken = System.getProperty(Const.WIRE_BOTS_SDK_TOKEN, System.getenv("SERVICE_TOKEN"));

        if (!Util.compareAuthorizations(auth, serviceToken)) {
            Logger.warning("Wrong service token");
            Exception cause = new IllegalArgumentException("Wrong service token");
            throw new WebApplicationException(cause, Response.Status.UNAUTHORIZED);
        }

        requestContext.setProperty("wire-auth", Util.extractToken(auth));
    }
}

```

Your Response: