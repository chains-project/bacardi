Due to an update of Library jakarta.mvc from version 1.1.0 to version 2.0.1, the code in file AlertMessage.java below is causing errors.

Here is the error message:
[ERROR] /jakartaee-mvc-sample/src/main/java/com/example/web/AlertMessage.java:[14,2] cannot find symbol
  symbol: class RedirectScoped

[ERROR] /jakartaee-mvc-sample/src/main/java/com/example/web/AlertMessage.java:[7,17] package javax.mvc does not exist



Update the provided code to fix this error.

Focus only on updates that do not change the code's functionality and are related to the version update of the library.

You must reply in the following exact numbered format.

1. `The full updated code in a fenced code block` do not remove any code that you don't want to update keep it in the code block. Do not use "// ... (rest of the code remains unchanged)" in your response.
2. Explanation of the changes you made.

Provided code:

```
package com.example.web;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.inject.Named;
import javax.mvc.RedirectScoped;

/**
 * Used to transport messages back to the client.
 *
 * @author Hantsy Bai<hantsy@gmail.com>
 */
@RedirectScoped
@Named("flashMessage")
public class AlertMessage implements Serializable {

    private static final long serialVersionUID = 1L;

    public enum Type {
        success, warning, danger, info;
    }

    private Type type = Type.info;
    private String text;
    private String code;

    public AlertMessage() {
    }

    public AlertMessage(Type type, String text) {
        this.type = type;
        this.text = text;
    }

    public AlertMessage(Type type, String code, String message) {
        this.type = type;
        this.code = code;
        this.text = message;
    }

    public String getText() {
        return text;
    }

    public Type getType() {
        return type;
    }

    public String getCode() {
        return code;
    }

    public void notify(Type type, String text) {
        this.type = type;
        this.text = text;
    }

    public static AlertMessage success(String text) {
        return new AlertMessage(Type.success, text);
    }

    public static AlertMessage warning(String text) {
        return new AlertMessage(Type.warning, text);
    }

    public static AlertMessage danger(String text) {
        return new AlertMessage(Type.danger, text);
    }

    public static AlertMessage info(String text) {
        return new AlertMessage(Type.info, text);
    }

    private List<Error> errors = new ArrayList<>();

    public List<Error> getErrors() {
        return errors;
    }

    public void setErrors(List<Error> errors) {
        this.errors = errors;
    }

    public void addError(String field, String code, String message) {
        this.errors.add(new Error(field, code, message));
    }

    public static class Error {

        private String code;
        private String message;
        private String field;
        
        public Error(){}

        private Error(String field, String code, String message) {
            this.field = field;
            this.code = code;
            this.message = message;
        }

        public String getCode() {
            return code;
        }

        public void setCode(String code) {
            this.code = code;
        }

        public String getMessage() {
            return message;
        }

        public void setMessage(String message) {
            this.message = message;
        }

        public String getField() {
            return field;
        }

        public void setField(String field) {
            this.field = field;
        }

    }

}


```

Your Response: