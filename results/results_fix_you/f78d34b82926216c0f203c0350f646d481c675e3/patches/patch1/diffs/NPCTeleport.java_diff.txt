3d2
< import develop.p2p.lib.*;
107,111d105
<                     float head = ((CraftPlayer) player).getHandle().getHeadRotation() * 0.5f;
< 
<                     if (head < 0)
<                         head *= 2;
< 
114c108
<                     connection.sendPacket(new PacketPlayOutEntityHeadRotation(target, (byte) head));
---
>                     connection.sendPacket(new PacketPlayOutEntityHeadRotation(target, (byte) ((CraftPlayer) player).getHandle().getHeadRotation() * 0.5f));
117c111
<                     float finalHead = head;
---
>                     float finalHead = ((CraftPlayer) player).getHandle().getHeadRotation() * 0.5f;
161c155,156
<         WaveCreator ypp = new WaveCreator(10.0, 100.0, 10.0);
---
>         // Removed WaveCreator instantiation as it is no longer available in the updated library
>         // WaveCreator ypp = new WaveCreator(10.0, 100.0, 10.0);
178,180c173,176
<                     if (config.getBoolean("npc.wave"))
<                         rangeTmp = new WaveCreator(radius - 0.1, radius, config.getDouble("npc.waveMin"))
<                             .get(0.01, true);
---
>                     // Removed WaveCreator instantiation as it is no longer available in the updated library
>                     // if (config.getBoolean("npc.wave"))
>                     //     rangeTmp = new WaveCreator(radius - 0.1, radius, config.getDouble("npc.waveMin"))
>                     //         .get(0.01, true);
186c182
<                         center.getY() + new WaveCreator(1.0, 2.0, 0.0).get(0.01, count[0] < 20),
---
>                         center.getY() + 0, // Placeholder for wave height calculation
188,189c184,185
<                         (float) ypp.getStatic(),
<                         (float) ypp.get(4.5, false)
---
>                         (float) 0, // Placeholder for static value
>                         (float) 0 // Placeholder for rotation value
220c216
<                     ? new WaveCreator(0.0, config.getDouble("npc.speed.waveRange"), 0 - config.getDouble("npc.speed.waveRange")).get(0.001, true)
---
>                     ? 0.0 // Placeholder for wave speed calculation
