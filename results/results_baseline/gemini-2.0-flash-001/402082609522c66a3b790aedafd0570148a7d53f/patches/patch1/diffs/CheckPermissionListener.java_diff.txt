15c15
< import org.spongepowered.api.Platform.Type;
---
> import org.spongepowered.api.Platform;
17,21c17,21
< import org.spongepowered.api.network.ChannelBinding.RawDataChannel;
< import org.spongepowered.api.network.ChannelBuf;
< import org.spongepowered.api.network.ChannelRegistrar;
< import org.spongepowered.api.network.RawDataListener;
< import org.spongepowered.api.network.RemoteConnection;
---
> import org.spongepowered.api.event.channel.RegisterChannelEvent;
> import org.spongepowered.api.network.Channel;
> import org.spongepowered.api.network.ChannelId;
> import org.spongepowered.api.network.EngineConnection;
> import org.spongepowered.api.network.MessageHandler;
26c26
< public class CheckPermissionListener implements RawDataListener {
---
> public class CheckPermissionListener implements MessageHandler<CheckPermMessage, EngineConnection> {
29c29
<     private final RawDataChannel permissionsResultChannel;
---
>     private final Channel permissionsResultChannel;
32c32
<     CheckPermissionListener(ChangeSkinSponge plugin, ChannelRegistrar channelRegistrar) {
---
>     CheckPermissionListener(ChangeSkinSponge plugin, RegisterChannelEvent event) {
36c36,37
<         permissionsResultChannel = channelRegistrar.getOrCreateRaw(plugin, combinedName);
---
>         ChannelId channelId = ChannelId.of(combinedName);
>         permissionsResultChannel = event.register(channelId);
40,48c41
<     public void handlePayload(ChannelBuf data, RemoteConnection connection, Type side) {
< 
<         ByteArrayDataInput dataInput = ByteStreams.newDataInput(data.array());
<         CheckPermMessage checkMessage = new CheckPermMessage();
<         checkMessage.readFrom(dataInput);
< 
<         CheckPermMessage message = new CheckPermMessage();
<         message.readFrom(dataInput);
< 
---
>     public void handleMessage(CheckPermMessage message, EngineConnection connection, Platform.Type side) {
83c76
<         permissionsResultChannel.sendTo(receiver, buf -> buf.writeByteArray(dataOutput.toByteArray()));
---
>         permissionsResultChannel.send(receiver, resultMessage);
