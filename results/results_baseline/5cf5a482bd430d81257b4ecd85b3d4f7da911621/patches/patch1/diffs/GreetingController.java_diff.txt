6,13d5
< import javax.mvc.Controller;
< import javax.mvc.Models;
< import javax.mvc.UriRef;
< import javax.mvc.binding.BindingResult;
< import javax.mvc.binding.MvcBinding;
< import javax.mvc.binding.ParamError;
< import javax.mvc.security.CsrfProtected;
< import javax.validation.constraints.NotBlank;
17a10
> import javax.ws.rs.core.Response;
24d16
< @Controller
29,37d20
<     BindingResult bindingResult;
< 
<     @Inject
<     Models models;
< 
<     @Inject
<     AlertMessage flashMessage;
< 
<     @Inject
46,60c29,34
<     @UriRef("greeting-post")
<     public String post(
<             @FormParam("greeting")
<             @MvcBinding
<             @NotBlank String greeting) {
<         if (bindingResult.isFailed()) {
<             AlertMessage alert = AlertMessage.danger("Validation voilations!");
<             bindingResult.getAllErrors()
<                     .stream()
<                     .forEach((ParamError t) -> {
<                         alert.addError(t.getParamName(), "", t.getMessage());
<                     });
<             models.put("errors", alert);
<             log.info("mvc binding failed.");
<             return "greeting.xhtml";
---
>     public Response post(
>             @FormParam("greeting") String greeting) {
>         if (greeting == null || greeting.trim().isEmpty()) {
>             log.info("Validation violations!");
>             return Response.status(Response.Status.BAD_REQUEST)
>                     .entity("Validation violations!").build();
64,65c38
<         flashMessage.notify(AlertMessage.Type.success, "Message:" + greeting);
<         return "redirect:greeting";
---
>         return Response.seeOther(javax.ws.rs.core.UriBuilder.fromPath("greeting").build()).build();
