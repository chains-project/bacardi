```java
package de.hilling.junit.cdi.annotations;

import de.hilling.junit.cdi.scope.TestScoped;
import org.immutables.value.Value;

import javax.enterprise.inject.Alternative;
import javax.enterprise.inject.Stereotype;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

// Importing the correct Priority class from the javax.annotation.Priority package
import javax.annotation.Priority;

/**
 * Use this annotation to mark Alternatives that should globally replace
 * production implementations.
 * <p>
 *     These services cannot be disabled or enabled on a per test basis
 *     because the container is only started once.
 * </p>
 */
@Alternative
@TestScoped
@Stereotype
@Target({ElementType.TYPE, ElementType.FIELD, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Priority(100)
@Value.Immutable
public @interface GlobalTestImplementation {
}
``` 

In this patch, I have added the correct import statement for the `Priority` class from the `javax.annotation` package, which resolves the compilation error related to the missing package. The rest of the class remains unchanged and adheres to the provided guidelines.
