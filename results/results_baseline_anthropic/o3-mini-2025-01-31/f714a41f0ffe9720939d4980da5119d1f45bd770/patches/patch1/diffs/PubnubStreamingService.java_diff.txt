13a14
> import com.pubnub.api.models.consumer.pubsub.files.PNFileEventResult;
15,17d15
< import com.pubnub.api.models.consumer.pubsub.objects.PNMembershipResult;
< import com.pubnub.api.models.consumer.pubsub.objects.PNSpaceResult;
< import com.pubnub.api.models.consumer.pubsub.objects.PNUserResult;
40,41c38,39
<     PNConfiguration pnConfiguration = new PNConfiguration();
<     pnConfiguration.setSubscribeKey(publicKey);
---
>     // Use the new constructor that accepts a String to set the subscribe key.
>     PNConfiguration pnConfiguration = new PNConfiguration(publicKey);
59c57
<                     //              e.onComplete();
---
>                     // e.onComplete(); // Uncomment if needed in your implementation.
61c59
<                     //              e.onError(pnStatus.getErrorData().getThrowable());
---
>                     // e.onError(pnStatus.getErrorData().getThrowable()); // Uncomment if needed.
92a91
>                 // Implement the new abstract method from the updated dependency.
94,105c93,94
<                 public void user(PubNub pubnub, PNUserResult pnUserResult) {
<                   LOG.debug("PubNub user: {}", pnUserResult.toString());
<                 }
< 
<                 @Override
<                 public void space(PubNub pubnub, PNSpaceResult pnSpaceResult) {
<                   LOG.debug("PubNub space: {}", pnSpaceResult.toString());
<                 }
< 
<                 @Override
<                 public void membership(PubNub pubnub, PNMembershipResult pnMembershipResult) {
<                   LOG.debug("PubNub membership: {}", pnMembershipResult.toString());
---
>                 public void file(PubNub pubnub, PNFileEventResult pnFileEventResult) {
>                   LOG.debug("PubNub file event: {}", pnFileEventResult.toString());
