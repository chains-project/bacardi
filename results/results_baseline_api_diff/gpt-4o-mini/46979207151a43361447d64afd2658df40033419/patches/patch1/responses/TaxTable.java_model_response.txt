```java
package com.premiumminds.billy.portugal.services.export.saftpt.v1_03_01.schema;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}TaxTableEntry" maxOccurs="unbounded"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "taxTableEntry"
})
@XmlRootElement(name = "TaxTable")
public class TaxTable implements ToString2
{

    @XmlElement(name = "TaxTableEntry", required = true)
    protected List<TaxTableEntry> taxTableEntry;

    /**
     * Gets the value of the taxTableEntry property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the taxTableEntry property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTaxTableEntry().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TaxTableEntry }
     * 
     * 
     */
    public List<TaxTableEntry> getTaxTableEntry() {
        if (taxTableEntry == null) {
            taxTableEntry = new ArrayList<TaxTableEntry>();
        }
        return this.taxTableEntry;
    }

    @Override
    public String toString() {
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, null);
        return buffer.toString();
    }

    @Override
    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    @Override
    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            List<TaxTableEntry> theTaxTableEntry;
            theTaxTableEntry = (((this.taxTableEntry!= null)&&(!this.taxTableEntry.isEmpty()))?this.getTaxTableEntry():null);
            strategy.appendField(locator, this, "taxTableEntry", buffer, theTaxTableEntry, ((this.taxTableEntry!= null)&&(!this.taxTableEntry.isEmpty())));
        }
        return buffer;
    }

}
```
