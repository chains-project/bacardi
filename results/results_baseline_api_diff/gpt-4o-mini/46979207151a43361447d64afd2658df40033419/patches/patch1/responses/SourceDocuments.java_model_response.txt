```java
//
// This file was generated by the Eclipse Implementation of JAXB, v2.3.6 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.08.18 at 08:13:47 AM GMT 
//


package com.premiumminds.billy.portugal.services.export.saftpt.v1_04_01.schema;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="SalesInvoices" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;sequence&gt;
 *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}NumberOfEntries"/&gt;
 *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TotalDebit"/&gt;
 *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TotalCredit"/&gt;
 *                   &lt;element name="Invoice" maxOccurs="unbounded" minOccurs="0"&gt;
 *                     &lt;complexType&gt;
 *                       &lt;complexContent&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                           &lt;sequence&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}InvoiceNo"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ATCUD"/&gt;
 *                             &lt;element name="DocumentStatus"&gt;
 *                               &lt;complexType&gt;
 *                                 &lt;complexContent&gt;
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                                     &lt;sequence&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}InvoiceStatus"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}InvoiceStatusDate"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Reason" minOccurs="0"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SourceID"/&gt;
 *                                       &lt;element name="SourceBilling" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SAFTPTSourceBilling"/&gt;
 *                                     &lt;/sequence&gt;
 *                                   &lt;/restriction&gt;
 *                                 &lt;/complexContent&gt;
 *                               &lt;/complexType&gt;
 *                             &lt;/element&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Hash"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}HashControl"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Period" minOccurs="0"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}InvoiceDate"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}InvoiceType"/&gt;
 *                             &lt;element name="SpecialRegimes" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SpecialRegimes"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SourceID"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}EACCode" minOccurs="0"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SystemEntryDate"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TransactionID" minOccurs="0"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}CustomerID"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ShipTo" minOccurs="0"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ShipFrom" minOccurs="0"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}MovementEndTime" minOccurs="0"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}MovementStartTime" minOccurs="0"/&gt;
 *                             &lt;element name="Line" maxOccurs="unbounded"&gt;
 *                               &lt;complexType&gt;
 *                                 &lt;complexContent&gt;
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                                     &lt;sequence&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}LineNumber"/&gt;
 *                                       &lt;element name="OrderReferences" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}OrderReferences" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ProductCode"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ProductDescription"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Quantity"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}UnitOfMeasure"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}UnitPrice"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TaxBase" minOccurs="0"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TaxPointDate"/&gt;
 *                                       &lt;element name="References" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}References" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Description"/&gt;
 *                                       &lt;element name="ProductSerialNumber" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ProductSerialNumber" minOccurs="0"/&gt;
 *                                       &lt;choice&gt;
 *                                         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}DebitAmount"/&gt;
 *                                         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}CreditAmount"/&gt;
 *                                       &lt;/choice&gt;
 *                                       &lt;element name="Tax" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Tax"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TaxExemptionReason" minOccurs="0"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TaxExemptionCode" minOccurs="0"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SettlementAmount" minOccurs="0"/&gt;
 *                                       &lt;element name="CustomsInformation" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}CustomsInformation" minOccurs="0"/&gt;
 *                                     &lt;/sequence&gt;
 *                                   &lt;/restriction&gt;
 *                                 &lt;/complexContent&gt;
 *                               &lt;/complexType&gt;
 *                             &lt;/element&gt;
 *                             &lt;element name="DocumentTotals"&gt;
 *                               &lt;complexType&gt;
 *                                 &lt;complexContent&gt;
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                                     &lt;sequence&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TaxPayable"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}NetTotal"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}GrossTotal"/&gt;
 *                                       &lt;element name="Currency" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Currency" minOccurs="0"/&gt;
 *                                     &lt;/sequence&gt;
 *                                   &lt;/restriction&gt;
 *                                 &lt;/complexContent&gt;
 *                               &lt;/complexType&gt;
 *                             &lt;/element&gt;
 *                             &lt;element name="WithholdingTax" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}WithholdingTax" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                           &lt;/sequence&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/complexContent&gt;
 *                     &lt;/complexType&gt;
 *                   &lt;/element&gt;
 *                 &lt;/sequence&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "salesInvoices",
    "movementOfGoods",
    "workingDocuments",
    "payments"
})
@XmlRootElement(name = "SourceDocuments")
public class SourceDocuments implements ToString2
{

    @XmlElement(name = "SalesInvoices")
    protected SourceDocuments.SalesInvoices salesInvoices;
    @XmlElement(name = "MovementOfGoods")
    protected SourceDocuments.MovementOfGoods movementOfGoods;
    @XmlElement(name = "WorkingDocuments")
    protected SourceDocuments.WorkingDocuments workingDocuments;
    @XmlElement(name = "Payments")
    protected SourceDocuments.Payments payments;

    /**
     * Gets the value of the salesInvoices property.
     * 
     * @return
     *     possible object is
     *     {@link SourceDocuments.SalesInvoices }
     *     
     */
    public SourceDocuments.SalesInvoices getSalesInvoices() {
        return salesInvoices;
    }

    /**
     * Sets the value of the salesInvoices property.
     * 
     * @param value
     *     allowed object is
     *     {@link SourceDocuments.SalesInvoices }
     *     
     */
    public void setSalesInvoices(SourceDocuments.SalesInvoices value) {
        this.salesInvoices = value;
    }

    /**
     * Gets the value of the movementOfGoods property.
     * 
     * @return
     *     possible object is
     *     {@link SourceDocuments.MovementOfGoods }
     *     
     */
    public SourceDocuments.MovementOfGoods getMovementOfGoods() {
        return movementOfGoods;
    }

    /**
     * Sets the value of the movementOfGoods property.
     * 
     * @param value
     *     allowed object is
     *     {@link SourceDocuments.MovementOfGoods }
     *     
     */
    public void setMovementOfGoods(SourceDocuments.MovementOfGoods value) {
        this.movementOfGoods = value;
    }

    /**
     * Gets the value of the workingDocuments property.
     * 
     * @return
     *     possible object is
     *     {@link SourceDocuments.WorkingDocuments }
     *     
     */
    public SourceDocuments.WorkingDocuments getWorkingDocuments() {
        return workingDocuments;
    }

    /**
     * Sets the value of the workingDocuments property.
     * 
     * @param value
     *     allowed object is
     *     {@link SourceDocuments.WorkingDocuments }
     *     
     */
    public void setWorkingDocuments(SourceDocuments.WorkingDocuments value) {
        this.workingDocuments = value;
    }

    /**
     * Gets the value of the payments property.
     * 
     * @return
     *     possible object is
     *     {@link SourceDocuments.Payments }
     *     
     */
    public SourceDocuments.Payments getPayments() {
        return payments;
    }

    /**
     * Sets the value of the payments property.
     * 
     * @param value
     *     allowed object is
     *     {@link SourceDocuments.Payments }
     *     
     */
    public void setPayments(SourceDocuments.Payments value) {
        this.payments = value;
    }

    @Override
    public String toString() {
        final ToStringStrategy2 strategy = new ToStringStrategy2() {
            @Override
            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }
        };
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    @Override
    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    @Override
    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            SourceDocuments.SalesInvoices theSalesInvoices;
            theSalesInvoices = this.getSalesInvoices();
            strategy.appendField(locator, this, "salesInvoices", buffer, theSalesInvoices, (this.salesInvoices!= null));
        }
        {
            SourceDocuments.MovementOfGoods theMovementOfGoods;
            theMovementOfGoods = this.getMovementOfGoods();
            strategy.appendField(locator, this, "movementOfGoods", buffer, theMovementOfGoods, (this.movementOfGoods!= null));
        }
        {
            SourceDocuments.WorkingDocuments theWorkingDocuments;
            theWorkingDocuments = this.getWorkingDocuments();
            strategy.appendField(locator, this, "workingDocuments", buffer, theWorkingDocuments, (this.workingDocuments!= null));
        }
        {
            SourceDocuments.Payments thePayments;
            thePayments = this.getPayments();
            strategy.appendField(locator, this, "payments", buffer, thePayments, (this.payments!= null));
        }
        return buffer;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;sequence&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}NumberOfMovementLines"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TotalQuantityIssued"/&gt;
     *         &lt;element name="StockMovement" maxOccurs="unbounded" minOccurs="0"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;sequence&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}DocumentNumber"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ATCUD"/&gt;
     *                   &lt;element name="DocumentStatus"&gt;
     *                     &lt;complexType&gt;
     *                       &lt;complexContent&gt;
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                           &lt;sequence&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}MovementStatus"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}MovementStatusDate"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Reason" minOccurs="0"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SourceID"/&gt;
     *                             &lt;element name="SourceBilling" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SAFTPTSourceBilling"/&gt;
     *                           &lt;/sequence&gt;
     *                         &lt;/restriction&gt;
     *                       &lt;/complexContent&gt;
     *                     &lt;/complexType&gt;
     *                   &lt;/element&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Hash"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}HashControl"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Period" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}MovementDate"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}MovementType"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SystemEntryDate"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TransactionID" minOccurs="0"/&gt;
     *                   &lt;choice&gt;
     *                     &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}CustomerID"/&gt;
     *                     &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SupplierID"/&gt;
     *                   &lt;/choice&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SourceID"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}EACCode" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}MovementComments" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ShipTo" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ShipFrom" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}MovementEndTime" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}MovementStartTime"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ATDocCodeID" minOccurs="0"/&gt;
     *                   &lt;element name="Line" maxOccurs="unbounded"&gt;
     *                     &lt;complexType&gt;
     *                       &lt;complexContent&gt;
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                           &lt;sequence&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}LineNumber"/&gt;
     *                             &lt;element name="OrderReferences" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}OrderReferences" maxOccurs="unbounded" minOccurs="0"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ProductCode"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ProductDescription"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Quantity"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}UnitOfMeasure"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}UnitPrice"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Description"/&gt;
     *                             &lt;element name="ProductSerialNumber" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ProductSerialNumber" minOccurs="0"/&gt;
     *                             &lt;choice&gt;
     *                               &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}DebitAmount"/&gt;
     *                               &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}CreditAmount"/&gt;
     *                             &lt;/choice&gt;
     *                             &lt;element name="Tax" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Tax"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TaxExemptionReason" minOccurs="0"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TaxExemptionCode" minOccurs="0"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SettlementAmount" minOccurs="0"/&gt;
     *                             &lt;element name="CustomsInformation" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}CustomsInformation" minOccurs="0"/&gt;
     *                           &lt;/sequence&gt;
     *                         &lt;/restriction&gt;
     *                       &lt;/complexContent&gt;
     *                     &lt;/complexType&gt;
     *                   &lt;/element&gt;
     *                   &lt;element name="DocumentTotals"&gt;
     *                     &lt;complexType&gt;
     *                       &lt;complexContent&gt;
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                           &lt;sequence&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TaxPayable"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}NetTotal"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}GrossTotal"/&gt;
     *                             &lt;element name="Currency" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Currency" minOccurs="0"/&gt;
     *                           &lt;/sequence&gt;
     *                         &lt;/restriction&gt;
     *                       &lt;/complexContent&gt;
     *                     &lt;/complexType&gt;
     *                   &lt;/element&gt;
     *                 &lt;/sequence&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *       &lt;/sequence&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "numberOfEntries",
    "totalDebit",
    "totalCredit",
    "workDocument"
})
public static class WorkingDocuments implements ToString2
{

    @XmlElement(name = "NumberOfEntries", required = true)
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger numberOfEntries;
    @XmlElement(name = "TotalDebit", required = true)
    protected BigDecimal totalDebit;
    @XmlElement(name = "TotalCredit", required = true)
    protected BigDecimal totalCredit;
    @XmlElement(name = "WorkDocument")
    protected List<SourceDocuments.WorkingDocuments.WorkDocument> workDocument;

    /**
     * Gets the value of the numberOfEntries property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNumberOfEntries() {
        return numberOfEntries;
    }

    /**
     * Sets the value of the numberOfEntries property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNumberOfEntries(BigInteger value) {
        this.numberOfEntries = value;
    }

    /**
     * Gets the value of the totalDebit property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getTotalDebit() {
        return totalDebit;
    }

    /**
     * Sets the value of the totalDebit property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTotalDebit(BigDecimal value) {
        this.totalDebit = value;
    }

    /**
     * Gets the value of the totalCredit property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getTotalCredit() {
        return totalCredit;
    }

    /**
     * Sets the value of the totalCredit property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTotalCredit(BigDecimal value) {
        this.totalCredit = value;
    }

    /**
     * Gets the value of the workDocument property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the workDocument property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getWorkDocument().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SourceDocuments.WorkingDocuments.WorkDocument }
     * 
     * 
     */
    public List<SourceDocuments.WorkingDocuments.WorkDocument> getWorkDocument() {
        if (workDocument == null) {
            workDocument = new ArrayList<SourceDocuments.WorkingDocuments.WorkDocument>();
        }
        return this.workDocument;
    }

    @Override
    public String toString() {
        final ToStringStrategy2 strategy = new ToStringStrategy2() {
            @Override
            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }
        };
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    @Override
    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    @Override
    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            BigInteger theNumberOfEntries;
            theNumberOfEntries = this.getNumberOfEntries();
            strategy.appendField(locator, this, "numberOfEntries", buffer, theNumberOfEntries, (this.numberOfEntries!= null));
        }
        {
            BigDecimal theTotalDebit;
            theTotalDebit = this.getTotalDebit();
            strategy.appendField(locator, this, "totalDebit", buffer, theTotalDebit, (this.totalDebit!= null));
        }
        {
            BigDecimal theTotalCredit;
            theTotalCredit = this.getTotalCredit();
            strategy.appendField(locator, this, "totalCredit", buffer, theTotalCredit, (this.totalCredit!= null));
        }
        {
            List<SourceDocuments.WorkingDocuments.WorkDocument> theWorkDocument;
            theWorkDocument = (((this.workDocument!= null)&&(!this.workDocument.isEmpty()))?this.getWorkDocument():null);
            strategy.appendField(locator, this, "workDocument", buffer, theWorkDocument, ((this.workDocument!= null)&&(!this.workDocument.isEmpty())));
        }
        return buffer;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;sequence&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}DocumentNumber"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ATCUD"/&gt;
     *         &lt;element name="DocumentStatus"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;sequence&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}WorkStatus"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}WorkStatusDate"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Reason" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SourceID"/&gt;
     *                   &lt;element name="SourceBilling" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SAFTPTSourceBilling"/&gt;
     *                 &lt;/sequence&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Hash"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}HashControl"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Period" minOccurs="0"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}WorkDate"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}WorkType"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SourceID"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}EACCode" minOccurs="0"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SystemEntryDate"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TransactionID" minOccurs="0"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}CustomerID"/&gt;
     *         &lt;element name="Line" maxOccurs="unbounded"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;sequence&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}LineNumber"/&gt;
     *                   &lt;element name="OrderReferences" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}OrderReferences" maxOccurs="unbounded" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ProductCode"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ProductDescription"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Quantity"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}UnitOfMeasure"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}UnitPrice"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TaxBase" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TaxPointDate"/&gt;
     *                   &lt;element name="References" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}References" maxOccurs="unbounded" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Description"/&gt;
     *                   &lt;element name="ProductSerialNumber" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ProductSerialNumber" minOccurs="0"/&gt;
     *                   &lt;choice&gt;
     *                     &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}DebitAmount"/&gt;
     *                     &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}CreditAmount"/&gt;
     *                   &lt;/choice&gt;
     *                   &lt;element name="Tax" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Tax" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TaxExemptionReason" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TaxExemptionCode" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SettlementAmount" minOccurs="0"/&gt;
     *                   &lt;element name="CustomsInformation" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}CustomsInformation" minOccurs="0"/&gt;
     *                 &lt;/sequence&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *         &lt;element name="DocumentTotals"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;sequence&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TaxPayable"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}NetTotal"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}GrossTotal"/&gt;
     *                   &lt;element name="Currency" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Currency" minOccurs="0"/&gt;
     *                 &lt;/sequence&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *       &lt;/sequence&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "numberOfEntries",
    "totalDebit",
    "totalCredit",
    "workDocument"
})
public static class WorkingDocuments implements ToString2
{

    @XmlElement(name = "NumberOfEntries", required = true)
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger numberOfEntries;
    @XmlElement(name = "TotalDebit", required = true)
    protected BigDecimal totalDebit;
    @XmlElement(name = "TotalCredit", required = true)
    protected BigDecimal totalCredit;
    @XmlElement(name = "WorkDocument")
    protected List<SourceDocuments.WorkingDocuments.WorkDocument> workDocument;

    /**
     * Gets the value of the numberOfEntries property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNumberOfEntries() {
        return numberOfEntries;
    }

    /**
     * Sets the value of the numberOfEntries property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNumberOfEntries(BigInteger value) {
        this.numberOfEntries = value;
    }

    /**
     * Gets the value of the totalDebit property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getTotalDebit() {
        return totalDebit;
    }

    /**
     * Sets the value of the totalDebit property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTotalDebit(BigDecimal value) {
        this.totalDebit = value;
    }

    /**
     * Gets the value of the totalCredit property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getTotalCredit() {
        return totalCredit;
    }

    /**
     * Sets the value of the totalCredit property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTotalCredit(BigDecimal value) {
        this.totalCredit = value;
    }

    /**
     * Gets the value of the workDocument property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the workDocument property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getWorkDocument().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SourceDocuments.WorkingDocuments.WorkDocument }
     * 
     * 
     */
    public List<SourceDocuments.WorkingDocuments.WorkDocument> getWorkDocument() {
        if (workDocument == null) {
            workDocument = new ArrayList<SourceDocuments.WorkingDocuments.WorkDocument>();
        }
        return this.workDocument;
    }

    @Override
    public String toString() {
        final ToStringStrategy2 strategy = new ToStringStrategy2() {
            @Override
            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }
        };
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    @Override
    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    @Override
    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            BigInteger theNumberOfEntries;
            theNumberOfEntries = this.getNumberOfEntries();
            strategy.appendField(locator, this, "numberOfEntries", buffer, theNumberOfEntries, (this.numberOfEntries!= null));
        }
        {
            BigDecimal theTotalDebit;
            theTotalDebit = this.getTotalDebit();
            strategy.appendField(locator, this, "totalDebit", buffer, theTotalDebit, (this.totalDebit!= null));
        }
        {
            BigDecimal theTotalCredit;
            theTotalCredit = this.getTotalCredit();
            strategy.appendField(locator, this, "totalCredit", buffer, theTotalCredit, (this.totalCredit!= null));
        }
        {
            List<SourceDocuments.WorkingDocuments.WorkDocument> theWorkDocument;
            theWorkDocument = (((this.workDocument!= null)&&(!this.workDocument.isEmpty()))?this.getWorkDocument():null);
            strategy.appendField(locator, this, "workDocument", buffer, theWorkDocument, ((this.workDocument!= null)&&(!this.workDocument.isEmpty())));
        }
        return buffer;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;sequence&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}DocumentNumber"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ATCUD"/&gt;
     *         &lt;element name="DocumentStatus"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;sequence&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}WorkStatus"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}WorkStatusDate"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Reason" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SourceID"/&gt;
     *                   &lt;element name="SourceBilling" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SAFTPTSourceBilling"/&gt;
     *                 &lt;/sequence&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Hash"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}HashControl"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Period" minOccurs="0"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}WorkDate"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}WorkType"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SourceID"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}EACCode" minOccurs="0"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SystemEntryDate"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TransactionID" minOccurs="0"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}CustomerID"/&gt;
     *         &lt;element name="Line" maxOccurs="unbounded"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;sequence&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}LineNumber"/&gt;
     *                   &lt;element name="OrderReferences" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}OrderReferences" maxOccurs="unbounded" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ProductCode"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ProductDescription"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Quantity"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}UnitOfMeasure"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}UnitPrice"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TaxBase" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TaxPointDate"/&gt;
     *                   &lt;element name="References" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}References" maxOccurs="unbounded" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Description"/&gt;
     *                   &lt;element name="ProductSerialNumber" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ProductSerialNumber" minOccurs="0"/&gt;
     *                   &lt;choice&gt;
     *                     &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}DebitAmount"/&gt;
     *                     &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}CreditAmount"/&gt;
     *                   &lt;/choice&gt;
     *                   &lt;element name="Tax" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Tax" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TaxExemptionReason" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TaxExemptionCode" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SettlementAmount" minOccurs="0"/&gt;
     *                   &lt;element name="CustomsInformation" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}CustomsInformation" minOccurs="0"/&gt;
     *                 &lt;/sequence&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *         &lt;element name="DocumentTotals"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;sequence&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TaxPayable"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}NetTotal"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}GrossTotal"/&gt;
     *                   &lt;element name="Currency" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Currency" minOccurs="0"/&gt;
     *                 &lt;/sequence&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *       &lt;/sequence&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "numberOfEntries",
    "totalDebit",
    "totalCredit",
    "workDocument"
})
public static class WorkingDocuments implements ToString2
{

    @XmlElement(name = "NumberOfEntries", required = true)
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger numberOfEntries;
    @XmlElement(name = "TotalDebit", required = true)
    protected BigDecimal totalDebit;
    @XmlElement(name = "TotalCredit", required = true)
    protected BigDecimal totalCredit;
    @XmlElement(name = "WorkDocument")
    protected List<SourceDocuments.WorkingDocuments.WorkDocument> workDocument;

    /**
     * Gets the value of the numberOfEntries property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNumberOfEntries() {
        return numberOfEntries;
    }

    /**
     * Sets the value of the numberOfEntries property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNumberOfEntries(BigInteger value) {
        this.numberOfEntries = value;
    }

    /**
     * Gets the value of the totalDebit property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getTotalDebit() {
        return totalDebit;
    }

    /**
     * Sets the value of the totalDebit property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTotalDebit(BigDecimal value) {
        this.totalDebit = value;
    }

    /**
     * Gets the value of the totalCredit property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getTotalCredit() {
        return totalCredit;
    }

    /**
     * Sets the value of the totalCredit property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTotalCredit(BigDecimal value) {
        this.totalCredit = value;
    }

    /**
     * Gets the value of the workDocument property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the workDocument property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getWorkDocument().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SourceDocuments.WorkingDocuments.WorkDocument }
     * 
     * 
     */
    public List<SourceDocuments.WorkingDocuments.WorkDocument> getWorkDocument() {
        if (workDocument == null) {
            workDocument = new ArrayList<SourceDocuments.WorkingDocuments.WorkDocument>();
        }
        return this.workDocument;
    }

    @Override
    public String toString() {
        final ToStringStrategy2 strategy = new ToStringStrategy2() {
            @Override
            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }
        };
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    @Override
    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    @Override
    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            BigInteger theNumberOfEntries;
            theNumberOfEntries = this.getNumberOfEntries();
            strategy.appendField(locator, this, "numberOfEntries", buffer, theNumberOfEntries, (this.numberOfEntries!= null));
        }
        {
            BigDecimal theTotalDebit;
            theTotalDebit = this.getTotalDebit();
            strategy.appendField(locator, this, "totalDebit", buffer, theTotalDebit, (this.totalDebit!= null));
        }
        {
            BigDecimal theTotalCredit;
            theTotalCredit = this.getTotalCredit();
            strategy.appendField(locator, this, "totalCredit", buffer, theTotalCredit, (this.totalCredit!= null));
        }
        {
            List<SourceDocuments.WorkingDocuments.WorkDocument> theWorkDocument;
            theWorkDocument = (((this.workDocument!= null)&&(!this.workDocument.isEmpty()))?this.getWorkDocument():null);
            strategy.appendField(locator, this, "workDocument", buffer, theWorkDocument, ((this.workDocument!= null)&&(!this.workDocument.isEmpty())));
        }
        return buffer;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;sequence&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}DocumentNumber"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ATCUD"/&gt;
     *         &lt;element name="DocumentStatus"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;sequence&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}WorkStatus"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}WorkStatusDate"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Reason" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SourceID"/&gt;
     *                   &lt;element name="SourceBilling" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SAFTPTSourceBilling"/&gt;
     *                 &lt;/sequence&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Hash"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}HashControl"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Period" minOccurs="0"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}WorkDate"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}WorkType"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SourceID"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}EACCode" minOccurs="0"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SystemEntryDate"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TransactionID" minOccurs="0"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}CustomerID"/&gt;
     *         &lt;element name="Line" maxOccurs="unbounded"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;sequence&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}LineNumber"/&gt;
     *                   &lt;element name="OrderReferences" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}OrderReferences" maxOccurs="unbounded" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ProductCode"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ProductDescription"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Quantity"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}UnitOfMeasure"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}UnitPrice"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TaxBase" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TaxPointDate"/&gt;
     *                   &lt;element name="References" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}References" maxOccurs="unbounded" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Description"/&gt;
     *                   &lt;element name="ProductSerialNumber" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}ProductSerialNumber" minOccurs="0"/&gt;
     *                   &lt;choice&gt;
     *                     &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}DebitAmount"/&gt;
     *                     &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}CreditAmount"/&gt;
     *                   &lt;/choice&gt;
     *                   &lt;element name="Tax" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Tax" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TaxExemptionReason" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TaxExemptionCode" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}SettlementAmount" minOccurs="0"/&gt;
     *                   &lt;element name="CustomsInformation" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}CustomsInformation" minOccurs="0"/&gt;
     *                 &lt;/sequence&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *         &lt;element name="DocumentTotals"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;sequence&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}TaxPayable"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}NetTotal"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}GrossTotal"/&gt;
     *                   &lt;element name="Currency" type="{urn:OECD:StandardAuditFile-Tax:PT_1.04_01}Currency" minOccurs="0"/&gt;
     *                 &lt;/sequence&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *       &lt;/sequence&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "numberOfEntries",
    "totalDebit",
    "totalCredit",
    "workDocument"
})
public static class WorkingDocuments implements ToString2
{

    @XmlElement(name = "NumberOfEntries", required = true)
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger numberOfEntries;
    @XmlElement(name = "TotalDebit", required = true)
    protected BigDecimal totalDebit;
    @XmlElement(name = "TotalCredit", required = true)
    protected BigDecimal totalCredit;
    @XmlElement(name = "WorkDocument")
    protected List<SourceDocuments.WorkingDocuments.WorkDocument> workDocument;

    /**
     * Gets the value of the numberOfEntries property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNumberOfEntries() {
        return numberOfEntries;
    }

    /**
     * Sets the value of the numberOfEntries property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNumberOfEntries(BigInteger value) {
        this.numberOfEntries = value;
    }

    /**
     * Gets the value of the totalDebit property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getTotalDebit() {
        return totalDebit;
    }

    /**
     * Sets the value of the totalDebit property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTotalDebit(BigDecimal value) {
        this.totalDebit = value;
    }

    /**
     * Gets the value of the totalCredit property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getTotalCredit() {
        return totalCredit;
    }

    /**
     * Sets the value of the totalCredit property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTotalCredit(BigDecimal value) {
        this.totalCredit = value;
    }

    /**
     * Gets the value of the workDocument property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the workDocument property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getWorkDocument().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SourceDocuments.WorkingDocuments.WorkDocument }
     * 
     * 
    
