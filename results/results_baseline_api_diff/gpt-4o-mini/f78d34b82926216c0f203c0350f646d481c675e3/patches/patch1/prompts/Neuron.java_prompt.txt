 Act as an Automatic Program Repair (APR) tool, reply only with code, without explanation.
You are specialized in breaking dependency updates, in which the failure is caused by an external dependency.
To solve the failure you can only work on the client code.
 the following client code fails:

```java
package ml.peya.plugins.Learn;

import java.util.ArrayList;

import static develop.p2p.lib.LearnMath.sigmoid;

/**
 * 重みを突っ込む器。
 */
public class Neuron
{
    /**
     * 加算したWeight。
     */
    private double sum;

    /**
     * 入力用値。
     */
    private double value = 0.0;

    /**
     * ゲッター。
     *
     * @return value参照。
     */
    public double getValue()
    {
        return value;
    }

    /**
     * セッター。
     *
     * @param value value参照。
     */
    public void setValue(double value)
    {
        this.value = value;
    }

    /**
     * ReLU関数で値を強めて出力系に入れる。
     *
     * @param inputData InputクラスのArrayListデータ。
     */
    public void input(ArrayList<Input> inputData)
    {
        inputData.parallelStream().forEachOrdered(input -> input(input.getWeightingValue()));
        setValue(sigmoid(sum));
    }

    /**
     * input(ArrayList)のオーバーロード。
     *
     * @param value sumに加算する値。
     */
    public void input(double value)
    {
        sum += value;
    }
}

```

 with the following error information:
[ERROR] /PeyangSuperbAntiCheat/src/main/java/ml/peya/plugins/Learn/Neuron.java:[50,18] cannot find symbol
  symbol:   method sigmoid(double)
  location: class ml.peya.plugins.Learn.Neuron

[ERROR] /PeyangSuperbAntiCheat/src/main/java/ml/peya/plugins/Learn/Neuron.java:[5,30] package develop.p2p.lib does not exist

[ERROR] /PeyangSuperbAntiCheat/src/main/java/ml/peya/plugins/Learn/Neuron.java:[5,30] package develop.p2p.lib does not exist

[ERROR] /PeyangSuperbAntiCheat/src/main/java/ml/peya/plugins/Learn/Neuron.java:[50,18] cannot find symbol
  symbol:   method sigmoid(double)
  location: class ml.peya.plugins.Learn.Neuron


The error is caused by a change in the API of the dependency. The new library version includes the following changes:
     Class develop.p2p.lib.LearnMath has been removed in the new version of the dependency.
     Constructor develop.p2p.lib.LearnMath() has been removed in the new version of the dependency.
     Type reference tokyo.peya.lib.LearnMath() has been added in the new version of the dependency.
     Method develop.p2p.lib.LearnMath.sigmoid(double) has been removed in the new version of the dependency.
     METHOD_ADDED_TO_PUBLIC_CLASS tokyo.peya.lib.LearnMath.sigmoid(double) has been added in the new version of the dependency.




 propose a patch that can be applied to the code to fix the issue.
 Return only a complete and compilable class in a fenced code block.
 Do not remove any code that you don't want to update keep it in the code block. Do not use "// ... (rest of the code remains unchanged)" in your response.
 You CANNOT change the function signature of any method but may create variables if it simplifies the code.
 You CAN remove the @Oxverride annotation IF AND ONLY IF the method no longer overrides a method in the updated dependency version.
 If fixing the issue requires addressing missing imports, ensure the correct package or class is used in accordance with the newer dependency version.
 Avoid removing any existing code unless it directly causes a compilation or functionality error. Don't use the comment "// ... (rest of the class remains unchanged)".
 Return only the fixed class, ensuring it fully compiles and adheres to these constraints.
 