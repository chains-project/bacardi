//
// This file was generated by the Eclipse Implementation of JAXB, v2.3.6 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.08.18 at 08:13:47 AM GMT 
//

package com.premiumminds.billy.portugal.services.export.saftpt.v1_04_01.schema;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy; // Ensure this import is valid based on the new dependency

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "salesInvoices",
    "movementOfGoods",
    "workingDocuments",
    "payments"
})
@XmlRootElement(name = "SourceDocuments")
public class SourceDocuments implements ToString2 {

    @XmlElement(name = "SalesInvoices")
    protected SourceDocuments.SalesInvoices salesInvoices;
    @XmlElement(name = "MovementOfGoods")
    protected SourceDocuments.MovementOfGoods movementOfGoods;
    @XmlElement(name = "WorkingDocuments")
    protected SourceDocuments.WorkingDocuments workingDocuments;
    @XmlElement(name = "Payments")
    protected SourceDocuments.Payments payments;

    public SourceDocuments.SalesInvoices getSalesInvoices() {
        return salesInvoices;
    }

    public void setSalesInvoices(SourceDocuments.SalesInvoices value) {
        this.salesInvoices = value;
    }

    public SourceDocuments.MovementOfGoods getMovementOfGoods() {
        return movementOfGoods;
    }

    public void setMovementOfGoods(SourceDocuments.MovementOfGoods value) {
        this.movementOfGoods = value;
    }

    public SourceDocuments.WorkingDocuments getWorkingDocuments() {
        return workingDocuments;
    }

    public void setWorkingDocuments(SourceDocuments.WorkingDocuments value) {
        this.workingDocuments = value;
    }

    public SourceDocuments.Payments getPayments() {
        return payments;
    }

    public void setPayments(SourceDocuments.Payments value) {
        this.payments = value;
    }

    @Override
    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.getInstance();
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    @Override
    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    @Override
    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            SourceDocuments.SalesInvoices theSalesInvoices;
            theSalesInvoices = this.getSalesInvoices();
            strategy.appendField(locator, this, "salesInvoices", buffer, theSalesInvoices, (this.salesInvoices != null));
        }
        {
            SourceDocuments.MovementOfGoods theMovementOfGoods;
            theMovementOfGoods = this.getMovementOfGoods();
            strategy.appendField(locator, this, "movementOfGoods", buffer, theMovementOfGoods, (this.movementOfGoods != null));
        }
        {
            SourceDocuments.WorkingDocuments theWorkingDocuments;
            theWorkingDocuments = this.getWorkingDocuments();
            strategy.appendField(locator, this, "workingDocuments", buffer, theWorkingDocuments, (this.workingDocuments != null));
        }
        {
            SourceDocuments.Payments thePayments;
            thePayments = this.getPayments();
            strategy.appendField(locator, this, "payments", buffer, thePayments, (this.payments != null));
        }
        return buffer;
    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "numberOfMovementLines",
        "totalQuantityIssued",
        "stockMovement"
    })
    public static class MovementOfGoods implements ToString2 {

        @XmlElement(name = "NumberOfMovementLines", required = true)
        @XmlSchemaType(name = "nonNegativeInteger")
        protected BigInteger numberOfMovementLines;
        @XmlElement(name = "TotalQuantityIssued", required = true)
        protected BigDecimal totalQuantityIssued;
        @XmlElement(name = "StockMovement")
        protected List<SourceDocuments.MovementOfGoods.StockMovement> stockMovement;

        public BigInteger getNumberOfMovementLines() {
            return numberOfMovementLines;
        }

        public void setNumberOfMovementLines(BigInteger value) {
            this.numberOfMovementLines = value;
        }

        public BigDecimal getTotalQuantityIssued() {
            return totalQuantityIssued;
        }

        public void setTotalQuantityIssued(BigDecimal value) {
            this.totalQuantityIssued = value;
        }

        public List<SourceDocuments.MovementOfGoods.StockMovement> getStockMovement() {
            if (stockMovement == null) {
                stockMovement = new ArrayList<>();
            }
            return this.stockMovement;
        }

        @Override
        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.getInstance();
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        @Override
        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        @Override
        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                BigInteger theNumberOfMovementLines;
                theNumberOfMovementLines = this.getNumberOfMovementLines();
                strategy.appendField(locator, this, "numberOfMovementLines", buffer, theNumberOfMovementLines, (this.numberOfMovementLines != null));
            }
            {
                BigDecimal theTotalQuantityIssued;
                theTotalQuantityIssued = this.getTotalQuantityIssued();
                strategy.appendField(locator, this, "totalQuantityIssued", buffer, theTotalQuantityIssued, (this.totalQuantityIssued != null));
            }
            {
                List<SourceDocuments.MovementOfGoods.StockMovement> theStockMovement;
                theStockMovement = (((this.stockMovement != null) && (!this.stockMovement.isEmpty())) ? this.getStockMovement() : null);
                strategy.appendField(locator, this, "stockMovement", buffer, theStockMovement, ((this.stockMovement != null) && (!this.stockMovement.isEmpty())));
            }
            return buffer;
        }

        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "documentNumber",
            "atcud",
            "documentStatus",
            "hash",
            "hashControl",
            "period",
            "movementDate",
            "movementType",
            "systemEntryDate",
            "transactionID",
            "customerID",
            "supplierID",
            "sourceID",
            "eacCode",
            "movementComments",
            "shipTo",
            "shipFrom",
            "movementEndTime",
            "movementStartTime",
            "atDocCodeID",
            "line",
            "documentTotals"
        })
        public static class StockMovement implements ToString2 {

            @XmlElement(name = "DocumentNumber", required = true)
            protected String documentNumber;
            @XmlElement(name = "ATCUD", required = true)
            protected String atcud;
            @XmlElement(name = "DocumentStatus", required = true)
            protected SourceDocuments.MovementOfGoods.StockMovement.DocumentStatus documentStatus;
            @XmlElement(name = "Hash", required = true)
            protected String hash;
            @XmlElement(name = "HashControl", required = true)
            protected String hashControl;
            @XmlElement(name = "Period")
            protected Integer period;
            @XmlElement(name = "MovementDate", required = true)
            @XmlSchemaType(name = "date")
            protected XMLGregorianCalendar movementDate;
            @XmlElement(name = "MovementType", required = true)
            protected String movementType;
            @XmlElement(name = "SystemEntryDate", required = true)
            @XmlSchemaType(name = "dateTime")
            protected XMLGregorianCalendar systemEntryDate;
            @XmlElement(name = "TransactionID")
            protected String transactionID;
            @XmlElement(name = "CustomerID")
            protected String customerID;
            @XmlElement(name = "SupplierID")
            protected String supplierID;
            @XmlElement(name = "SourceID", required = true)
            protected String sourceID;
            @XmlElement(name = "EACCode")
            protected String eacCode;
            @XmlElement(name = "MovementComments")
            protected String movementComments;
            @XmlElement(name = "ShipTo")
            protected ShippingPointStructure shipTo;
            @XmlElement(name = "ShipFrom")
            protected ShippingPointStructure shipFrom;
            @XmlElement(name = "MovementEndTime")
            @XmlSchemaType(name = "dateTime")
            protected XMLGregorianCalendar movementEndTime;
            @XmlElement(name = "MovementStartTime", required = true)
            @XmlSchemaType(name = "dateTime")
            protected XMLGregorianCalendar movementStartTime;
            @XmlElement(name = "ATDocCodeID")
            protected String atDocCodeID;
            @XmlElement(name = "Line", required = true)
            protected List<SourceDocuments.MovementOfGoods.StockMovement.Line> line;
            @XmlElement(name = "DocumentTotals", required = true)
            protected SourceDocuments.MovementOfGoods.StockMovement.DocumentTotals documentTotals;

            public String getDocumentNumber() {
                return documentNumber;
            }

            public void setDocumentNumber(String value) {
                this.documentNumber = value;
            }

            public String getATCUD() {
                return atcud;
            }

            public void setATCUD(String value) {
                this.atcud = value;
            }

            public SourceDocuments.MovementOfGoods.StockMovement.DocumentStatus getDocumentStatus() {
                return documentStatus;
            }

            public void setDocumentStatus(SourceDocuments.MovementOfGoods.StockMovement.DocumentStatus value) {
                this.documentStatus = value;
            }

            public String getHash() {
                return hash;
            }

            public void setHash(String value) {
                this.hash = value;
            }

            public String getHashControl() {
                return hashControl;
            }

            public void setHashControl(String value) {
                this.hashControl = value;
            }

            public Integer getPeriod() {
                return period;
            }

            public void setPeriod(Integer value) {
                this.period = value;
            }

            public XMLGregorianCalendar getMovementDate() {
                return movementDate;
            }

            public void setMovementDate(XMLGregorianCalendar value) {
                this.movementDate = value;
            }

            public String getMovementType() {
                return movementType;
            }

            public void setMovementType(String value) {
                this.movementType = value;
            }

            public XMLGregorianCalendar getSystemEntryDate() {
                return systemEntryDate;
            }

            public void setSystemEntryDate(XMLGregorianCalendar value) {
                this.systemEntryDate = value;
            }

            public String getTransactionID() {
                return transactionID;
            }

            public void setTransactionID(String value) {
                this.transactionID = value;
            }

            public String getCustomerID() {
                return customerID;
            }

            public void setCustomerID(String value) {
                this.customerID = value;
            }

            public String getSupplierID() {
                return supplierID;
            }

            public void setSupplierID(String value) {
                this.supplierID = value;
            }

            public String getSourceID() {
                return sourceID;
            }

            public void setSourceID(String value) {
                this.sourceID = value;
            }

            public String getEACCode() {
                return eacCode;
            }

            public void setEACCode(String value) {
                this.eacCode = value;
            }

            public String getMovementComments() {
                return movementComments;
            }

            public void setMovementComments(String value) {
                this.movementComments = value;
            }

            public ShippingPointStructure getShipTo() {
                return shipTo;
            }

            public void setShipTo(ShippingPointStructure value) {
                this.shipTo = value;
            }

            public ShippingPointStructure getShipFrom() {
                return shipFrom;
            }

            public void setShipFrom(ShippingPointStructure value) {
                this.shipFrom = value;
            }

            public XMLGregorianCalendar getMovementEndTime() {
                return movementEndTime;
            }

            public void setMovementEndTime(XMLGregorianCalendar value) {
                this.movementEndTime = value;
            }

            public XMLGregorianCalendar getMovementStartTime() {
                return movementStartTime;
            }

            public void setMovementStartTime(XMLGregorianCalendar value) {
                this.movementStartTime = value;
            }

            public String getATDocCodeID() {
                return atDocCodeID;
            }

            public void setATDocCodeID(String value) {
                this.atDocCodeID = value;
            }

            public List<SourceDocuments.MovementOfGoods.StockMovement.Line> getLine() {
                if (line == null) {
                    line = new ArrayList<>();
                }
                return this.line;
            }

            public SourceDocuments.MovementOfGoods.StockMovement.DocumentTotals getDocumentTotals() {
                return documentTotals;
            }

            public void setDocumentTotals(SourceDocuments.MovementOfGoods.StockMovement.DocumentTotals value) {
                this.documentTotals = value;
            }

            @Override
            public String toString() {
                final ToStringStrategy2 strategy = JAXBToStringStrategy.getInstance();
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            @Override
            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            @Override
            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                {
                    String theDocumentNumber;
                    theDocumentNumber = this.getDocumentNumber();
                    strategy.appendField(locator, this, "documentNumber", buffer, theDocumentNumber, (this.documentNumber != null));
                }
                {
                    String theATCUD;
                    theATCUD = this.getATCUD();
                    strategy.appendField(locator, this, "atcud", buffer, theATCUD, (this.atcud != null));
                }
                {
                    SourceDocuments.MovementOfGoods.StockMovement.DocumentStatus theDocumentStatus;
                    theDocumentStatus = this.getDocumentStatus();
                    strategy.appendField(locator, this, "documentStatus", buffer, theDocumentStatus, (this.documentStatus != null));
                }
                {
                    String theHash;
                    theHash = this.getHash();
                    strategy.appendField(locator, this, "hash", buffer, theHash, (this.hash != null));
                }
                {
                    String theHashControl;
                    theHashControl = this.getHashControl();
                    strategy.appendField(locator, this, "hashControl", buffer, theHashControl, (this.hashControl != null));
                }
                {
                    Integer thePeriod;
                    thePeriod = this.getPeriod();
                    strategy.appendField(locator, this, "period", buffer, thePeriod, (this.period != null));
                }
                {
                    XMLGregorianCalendar theWorkDate;
                    theWorkDate = this.getWorkDate();
                    strategy.appendField(locator, this, "workDate", buffer, theWorkDate, (this.workDate != null));
                }
                {
                    String theWorkType;
                    theWorkType = this.getWorkType();
                    strategy.appendField(locator, this, "workType", buffer, theWorkType, (this.workType != null));
                }
                {
                    String theSourceID;
                    theSourceID = this.getSourceID();
                    strategy.appendField(locator, this, "sourceID", buffer, theSourceID, (this.sourceID != null));
                }
                {
                    String theEACCode;
                    theEACCode = this.getEACCode();
                    strategy.appendField(locator, this, "eacCode", buffer, theEACCode, (this.eacCode != null));
                }
                {
                    XMLGregorianCalendar theSystemEntryDate;
                    theSystemEntryDate = this.getSystemEntryDate();
                    strategy.appendField(locator, this, "systemEntryDate", buffer, theSystemEntryDate, (this.systemEntryDate != null));
                }
                {
                    String theTransactionID;
                    theTransactionID = this.getTransactionID();
                    strategy.appendField(locator, this, "transactionID", buffer, theTransactionID, (this.transactionID != null));
                }
                {
                    String theCustomerID;
                    theCustomerID = this.getCustomerID();
                    strategy.appendField(locator, this, "customerID", buffer, theCustomerID, (this.customerID != null));
                }
                {
                    List<SourceDocuments.MovementOfGoods.StockMovement.Line> theLine;
                    theLine = (((this.line != null) && (!this.line.isEmpty())) ? this.getLine() : null);
                    strategy.appendField(locator, this, "line", buffer, theLine, ((this.line != null) && (!this.line.isEmpty())));
                }
                {
                    SourceDocuments.MovementOfGoods.StockMovement.DocumentTotals theDocumentTotals;
                    theDocumentTotals = this.getDocumentTotals();
                    strategy.appendField(locator, this, "documentTotals", buffer, theDocumentTotals, (this.documentTotals != null));
                }
                return buffer;
            }

            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "taxPayable",
                "netTotal",
                "grossTotal",
                "currency"
            })
            public static class DocumentTotals implements ToString2 {

                @XmlElement(name = "TaxPayable", required = true)
                protected BigDecimal taxPayable;
                @XmlElement(name = "NetTotal", required = true)
                protected BigDecimal netTotal;
                @XmlElement(name = "GrossTotal", required = true)
                protected BigDecimal grossTotal;
                @XmlElement(name = "Currency")
                protected Currency currency;

                public BigDecimal getTaxPayable() {
                    return taxPayable;
                }

                public void setTaxPayable(BigDecimal value) {
                    this.taxPayable = value;
                }

                public BigDecimal getNetTotal() {
                    return netTotal;
                }

                public void setNetTotal(BigDecimal value) {
                    this.netTotal = value;
                }

                public BigDecimal getGrossTotal() {
                    return grossTotal;
                }

                public void setGrossTotal(BigDecimal value) {
                    this.grossTotal = value;
                }

                public Currency getCurrency() {
                    return currency;
                }

                public void setCurrency(Currency value) {
                    this.currency = value;
                }

                @Override
                public String toString() {
                    final ToStringStrategy2 strategy = JAXBToStringStrategy.getInstance();
                    final StringBuilder buffer = new StringBuilder();
                    append(null, buffer, strategy);
                    return buffer.toString();
                }

                @Override
                public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                    strategy.appendStart(locator, this, buffer);
                    appendFields(locator, buffer, strategy);
                    strategy.appendEnd(locator, this, buffer);
                    return buffer;
                }

                @Override
                public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                    {
                        BigDecimal theTaxPayable;
                        theTaxPayable = this.getTaxPayable();
                        strategy.appendField(locator, this, "taxPayable", buffer, theTaxPayable, (this.taxPayable != null));
                    }
                    {
                        BigDecimal theNetTotal;
                        theNetTotal = this.getNetTotal();
                        strategy.appendField(locator, this, "netTotal", buffer, theNetTotal, (this.netTotal != null));
                    }
                    {
                        BigDecimal theGrossTotal;
                        theGrossTotal = this.getGrossTotal();
                        strategy.appendField(locator, this, "grossTotal", buffer, theGrossTotal, (this.grossTotal != null));
                    }
                    {
                        Currency theCurrency;
                        theCurrency = this.getCurrency();
                        strategy.appendField(locator, this, "currency", buffer, theCurrency, (this.currency != null));
                    }
                    return buffer;
                }

            }

        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "numberOfEntries",
        "totalDebit",
        "totalCredit",
        "payment"
    })
    public static class Payments implements ToString2 {

        @XmlElement(name = "NumberOfEntries", required = true)
        @XmlSchemaType(name = "nonNegativeInteger")
        protected BigInteger numberOfEntries;
        @XmlElement(name = "TotalDebit", required = true)
        protected BigDecimal totalDebit;
        @XmlElement(name = "TotalCredit", required = true)
        protected BigDecimal totalCredit;
        @XmlElement(name = "Payment")
        protected List<SourceDocuments.Payments.Payment> payment;

        public BigInteger getNumberOfEntries() {
            return numberOfEntries;
        }

        public void setNumberOfEntries(BigInteger value) {
            this.numberOfEntries = value;
        }

        public BigDecimal getTotalDebit() {
            return totalDebit;
        }

        public void setTotalDebit(BigDecimal value) {
            this.totalDebit = value;
        }

        public BigDecimal getTotalCredit() {
            return totalCredit;
        }

        public void setTotalCredit(BigDecimal value) {
            this.totalCredit = value;
        }

        public List<SourceDocuments.Payments.Payment> getPayment() {
            if (payment == null) {
                payment = new ArrayList<>();
            }
            return this.payment;
        }

        @Override
        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.getInstance();
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        @Override
        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        @Override
        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                BigInteger theNumberOfEntries;
                theNumberOfEntries = this.getNumberOfEntries();
                strategy.appendField(locator, this, "numberOfEntries", buffer, theNumberOfEntries, (this.numberOfEntries != null));
            }
            {
                BigDecimal theTotalDebit;
                theTotalDebit = this.getTotalDebit();
                strategy.appendField(locator, this, "totalDebit", buffer, theTotalDebit, (this.totalDebit != null));
            }
            {
                BigDecimal theTotalCredit;
                theTotalCredit = this.getTotalCredit();
                strategy.appendField(locator, this, "totalCredit", buffer, theTotalCredit, (this.totalCredit != null));
            }
            {
                List<SourceDocuments.Payments.Payment> thePayment;
                thePayment = (((this.payment != null) && (!this.payment.isEmpty())) ? this.getPayment() : null);
                strategy.appendField(locator, this, "payment", buffer, thePayment, ((this.payment != null) && (!this.payment.isEmpty())));
            }
            return buffer;
        }

        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "paymentRefNo",
            "atcud",
            "period",
            "transactionID",
            "transactionDate",
            "paymentType",
            "description",
            "systemID",
            "documentStatus",
            "paymentMethod",
            "sourceID",
            "systemEntryDate",
            "customerID",
            "line",
            "documentTotals",
            "withholdingTax"
        })
        public static class Payment implements ToString2 {

            @XmlElement(name = "PaymentRefNo", required = true)
            protected String paymentRefNo;
            @XmlElement(name = "ATCUD", required = true)
            protected String atcud;
            @XmlElement(name = "Period")
            protected Integer period;
            @XmlElement(name = "TransactionID")
            protected String transactionID;
            @XmlElement(name = "TransactionDate", required = true)
            @XmlSchemaType(name = "date")
            protected XMLGregorianCalendar transactionDate;
            @XmlElement(name = "PaymentType", required = true)
            @XmlSchemaType(name = "string")
            protected SAFTPTPaymentType paymentType;
            @XmlElement(name = "Description")
            protected String description;
            @XmlElement(name = "SystemID")
            protected String systemID;
            @XmlElement(name = "DocumentStatus", required = true)
            protected SourceDocuments.Payments.Payment.DocumentStatus documentStatus;
            @XmlElement(name = "PaymentMethod")
            protected List<PaymentMethod> paymentMethod;
            @XmlElement(name = "SourceID", required = true)
            protected String sourceID;
            @XmlElement(name = "SystemEntryDate", required = true)
            @XmlSchemaType(name = "dateTime")
            protected XMLGregorianCalendar systemEntryDate;
            @XmlElement(name = "CustomerID", required = true)
            protected String customerID;
            @XmlElement(name = "Line", required = true)
            protected List<SourceDocuments.Payments.Payment.Line> line;
            @XmlElement(name = "DocumentTotals", required = true)
            protected SourceDocuments.Payments.Payment.DocumentTotals documentTotals;
            @XmlElement(name = "WithholdingTax")
            protected List<WithholdingTax> withholdingTax;

            public String getPaymentRefNo() {
                return paymentRefNo;
            }

            public void setPaymentRefNo(String value) {
                this.paymentRefNo = value;
            }

            public String getATCUD() {
                return atcud;
            }

            public void setATCUD(String value) {
                this.atcud = value;
            }

            public Integer getPeriod() {
                return period;
            }

            public void setPeriod(Integer value) {
                this.period = value;
            }

            public String getTransactionID() {
                return transactionID;
            }

            public void setTransactionID(String value) {
                this.transactionID = value;
            }

            public XMLGregorianCalendar getTransactionDate() {
                return transactionDate;
            }

            public void setTransactionDate(XMLGregorianCalendar value) {
                this.transactionDate = value;
            }

            public SAFTPTPaymentType getPaymentType() {
                return paymentType;
            }

            public void setPaymentType(SAFTPTPaymentType value) {
                this.paymentType = value;
            }

            public String getDescription() {
                return description;
            }

            public void setDescription(String value) {
                this.description = value;
            }

            public String getSystemID() {
                return systemID;
            }

            public void setSystemID(String value) {
                this.systemID = value;
            }

            public SourceDocuments.Payments.Payment.DocumentStatus getDocumentStatus() {
                return documentStatus;
            }

            public void setDocumentStatus(SourceDocuments.Payments.Payment.DocumentStatus value) {
                this.documentStatus = value;
            }

            public List<PaymentMethod> getPaymentMethod() {
                if (paymentMethod == null) {
                    paymentMethod = new ArrayList<>();
                }
                return this.paymentMethod;
            }

            public String getSourceID() {
                return sourceID;
            }

            public void setSourceID(String value) {
                this.sourceID = value;
            }

            public XMLGregorianCalendar getSystemEntryDate() {
                return systemEntryDate;
            }

            public void setSystemEntryDate(XMLGregorianCalendar value) {
                this.systemEntryDate = value;
            }

            public String getCustomerID() {
                return customerID;
            }

            public void setCustomerID(String value) {
                this.customerID = value;
            }

            public List<SourceDocuments.Payments.Payment.Line> getLine() {
                if (line == null) {
                    line = new ArrayList<>();
                }
                return this.line;
            }

            public SourceDocuments.Payments.Payment.DocumentTotals getDocumentTotals() {
                return documentTotals;
            }

            public void setDocumentTotals(SourceDocuments.Payments.Payment.DocumentTotals value) {
                this.documentTotals = value;
            }

            public List<WithholdingTax> getWithholdingTax() {
                if (withholdingTax == null) {
                    withholdingTax = new ArrayList<>();
                }
                return this.withholdingTax;
            }

            @Override
            public String toString() {
                final ToStringStrategy2 strategy = JAXBToStringStrategy.getInstance();
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            @Override
            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            @Override
            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                {
                    String thePaymentRefNo;
                    thePaymentRefNo = this.getPaymentRefNo();
                    strategy.appendField(locator, this, "paymentRefNo", buffer, thePaymentRefNo, (this.paymentRefNo != null));
                }
                {
                    String theATCUD;
                    theATCUD = this.getATCUD();
                    strategy.appendField(locator, this, "atcud", buffer, theATCUD, (this.atcud != null));
                }
                {
                    Integer thePeriod;
                    thePeriod = this.getPeriod();
                    strategy.appendField(locator, this, "period", buffer, thePeriod, (this.period != null));
                }
                {
                    String theTransactionID;
                    theTransactionID = this.getTransactionID();
                    strategy.appendField(locator, this, "transactionID", buffer, theTransactionID, (this.transactionID != null));
                }
                {
                    XMLGregorianCalendar theTransactionDate;
                    theTransactionDate = this.getTransactionDate();
                    strategy.appendField(locator, this, "transactionDate", buffer, theTransactionDate, (this.transactionDate != null));
                }
                {
                    SAFTPTPaymentType thePaymentType;
                    thePaymentType = this.getPaymentType();
                    strategy.appendField(locator, this, "paymentType", buffer, thePaymentType, (this.paymentType != null));
                }
                {
                    String theDescription;
                    theDescription = this.getDescription();
                    strategy.appendField(locator, this, "description", buffer, theDescription, (this.description != null));
                }
                {
                    String theSystemID;
                    theSystemID = this.getSystemID();
                    strategy.appendField(locator, this, "systemID", buffer, theSystemID, (this.systemID != null));
                }
                {
                    SourceDocuments.Payments.Payment.DocumentStatus theDocumentStatus;
                    theDocumentStatus = this.getDocumentStatus();
                    strategy.appendField(locator, this, "documentStatus", buffer, theDocumentStatus, (this.documentStatus != null));
                }
                {
                    List<PaymentMethod> thePaymentMethod;
                    thePaymentMethod = (((this.paymentMethod != null) && (!this.paymentMethod.isEmpty())) ? this.getPaymentMethod() : null);
                    strategy.appendField(locator, this, "paymentMethod", buffer, thePaymentMethod, ((this.paymentMethod != null) && (!this.paymentMethod.isEmpty())));
                }
                {
                    String theSourceID;
                    theSourceID = this.getSourceID();
                    strategy.appendField(locator, this, "sourceID", buffer, theSourceID, (this.sourceID != null));
                }
                {
                    XMLGregorianCalendar theSystemEntryDate;
                    theSystemEntryDate = this.getSystemEntryDate();
                    strategy.appendField(locator, this, "systemEntryDate", buffer, theSystemEntryDate, (this.systemEntryDate != null));
                }
                {
                    String theCustomerID;
                    theCustomerID = this.getCustomerID();
                    strategy.appendField(locator, this, "customerID", buffer, theCustomerID, (this.customerID != null));
                }
                {
                    List<SourceDocuments.Payments.Payment.Line> theLine;
                    theLine = (((this.line != null) && (!this.line.isEmpty())) ? this.getLine() : null);
                    strategy.appendField(locator, this, "line", buffer, theLine, ((this.line != null) && (!this.line.isEmpty())));
                }
                {
                    SourceDocuments.Payments.Payment.DocumentTotals theDocumentTotals;
                    theDocumentTotals = this.getDocumentTotals();
                    strategy.appendField(locator, this, "documentTotals", buffer, theDocumentTotals, (this.documentTotals != null));
                }
                {
                    List<WithholdingTax> theWithholdingTax;
                    theWithholdingTax = (((this.withholdingTax != null) && (!this.withholdingTax.isEmpty())) ? this.getWithholdingTax() : null);
                    strategy.appendField(locator, this, "withholdingTax", buffer, theWithholdingTax, ((this.withholdingTax != null) && (!this.withholdingTax.isEmpty())));
                }
                return buffer;
            }

            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "paymentStatus",
                "paymentStatusDate",
                "reason",
                "sourceID",
                "sourcePayment"
            })
            public static class DocumentStatus implements ToString2 {

                @XmlElement(name = "PaymentStatus", required = true)
                protected String paymentStatus;
                @XmlElement(name = "PaymentStatusDate", required = true)
                @XmlSchemaType(name = "dateTime")
                protected XMLGregorianCalendar paymentStatusDate;
                @XmlElement(name = "Reason")
                protected String reason;
                @XmlElement(name = "SourceID", required = true)
                protected String sourceID;
                @XmlElement(name = "SourcePayment", required = true)
                @XmlSchemaType(name = "string")
                protected SAFTPTSourcePayment sourcePayment;

                public String getPaymentStatus() {
                    return paymentStatus;
                }

                public void setPaymentStatus(String value) {
                    this.paymentStatus = value;
                }

                public XMLGregorianCalendar getPaymentStatusDate() {
                    return paymentStatusDate;
                }

                public void setPaymentStatusDate(XMLGregorianCalendar value) {
                    this.paymentStatusDate = value;
                }

                public String getReason() {
                    return reason;
                }

                public void setReason(String value) {
                    this.reason = value;
                }

                public String getSourceID() {
                    return sourceID;
                }

                public void setSourceID(String value) {
                    this.sourceID = value;
                }

                public SAFTPTSourcePayment getSourcePayment() {
                    return sourcePayment;
                }

                public void setSourcePayment(SAFTPTSourcePayment value) {
                    this.sourcePayment = value;
                }

                @Override
                public String toString() {
                    final ToStringStrategy2 strategy = JAXBToStringStrategy.getInstance();
                    final StringBuilder buffer = new StringBuilder();
                    append(null, buffer, strategy);
                    return buffer.toString();
                }

                @Override
                public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                    strategy.appendStart(locator, this, buffer);
                    appendFields(locator, buffer, strategy);
                    strategy.appendEnd(locator, this, buffer);
                    return buffer;
                }

                @Override
                public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                    {
                        String thePaymentStatus;
                        thePaymentStatus = this.getPaymentStatus();
                        strategy.appendField(locator, this, "paymentStatus", buffer, thePaymentStatus, (this.paymentStatus != null));
                    }
                    {
                        XMLGregorianCalendar thePaymentStatusDate;
                        thePaymentStatusDate = this.getPaymentStatusDate();
                        strategy.appendField(locator, this, "paymentStatusDate", buffer, thePaymentStatusDate, (this.paymentStatusDate != null));
                    }
                    {
                        String theReason;
                        theReason = this.getReason();
                        strategy.appendField(locator, this, "reason", buffer, theReason, (this.reason != null));
                    }
                    {
                        String theSourceID;
                        theSourceID = this.getSourceID();
                        strategy.appendField(locator, this, "sourceID", buffer, theSourceID, (this.sourceID != null));
                    }
                    {
                        SAFTPTSourcePayment theSourcePayment;
                        theSourcePayment = this.getSourcePayment();
                        strategy.appendField(locator, this, "sourcePayment", buffer, theSourcePayment, (this.sourcePayment != null));
                    }
                    return buffer;
                }

            }


            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "lineNumber",
                "sourceDocumentID",
                "settlementAmount",
                "debitAmount",
                "creditAmount",
                "tax",
                "taxExemptionReason",
                "taxExemptionCode"
            })
            public static class Line implements ToString2 {

                @XmlElement(name = "LineNumber", required = true)
                @XmlSchemaType(name = "nonNegativeInteger")
                protected BigInteger lineNumber;
                @XmlElement(name = "SourceDocumentID", required = true)
                protected List<SourceDocuments.Payments.Payment.Line.SourceDocumentID> sourceDocumentID;
                @XmlElement(name = "SettlementAmount")
                protected BigDecimal settlementAmount;
                @XmlElement(name = "DebitAmount")
                protected BigDecimal debitAmount;
                @XmlElement(name = "CreditAmount")
                protected BigDecimal creditAmount;
                @XmlElement(name = "Tax")
                protected PaymentTax tax;
                @XmlElement(name = "TaxExemptionReason")
                protected String taxExemptionReason;
                @XmlElement(name = "TaxExemptionCode")
                protected String taxExemptionCode;

                public BigInteger getLineNumber() {
                    return lineNumber;
                }

                public void setLineNumber(BigInteger value) {
                    this.lineNumber = value;
                }

                public List<SourceDocuments.Payments.Payment.Line.SourceDocumentID> getSourceDocumentID() {
                    if (sourceDocumentID == null) {
                        sourceDocumentID = new ArrayList<>();
                    }
                    return this.sourceDocumentID;
                }

                public BigDecimal getSettlementAmount() {
                    return settlementAmount;
                }

                public void setSettlementAmount(BigDecimal value) {
                    this.settlementAmount = value;
                }

                public BigDecimal getDebitAmount() {
                    return debitAmount;
                }

                public void setDebitAmount(BigDecimal value) {
                    this.debitAmount = value;
                }

                public BigDecimal getCreditAmount() {
                    return creditAmount;
                }

                public void setCreditAmount(BigDecimal value) {
                    this.creditAmount = value;
                }

                public PaymentTax getTax() {
                    return tax;
                }

                public void setTax(PaymentTax value) {
                    this.tax = value;
                }

                public String getTaxExemptionReason() {
                    return taxExemptionReason;
                }

                public void setTaxExemptionReason(String value) {
                    this.taxExemptionReason = value;
                }

                public String getTaxExemptionCode() {
                    return taxExemptionCode;
                }

                public void setTaxExemptionCode(String value) {
                    this.taxExemptionCode = value;
                }

                @Override
                public String toString() {
                    final ToStringStrategy2 strategy = JAXBToStringStrategy.getInstance();
                    final StringBuilder buffer = new StringBuilder();
                    append(null, buffer, strategy);
                    return buffer.toString();
                }

                @Override
                public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                    strategy.appendStart(locator, this, buffer);
                    appendFields(locator, buffer, strategy);
                    strategy.appendEnd(locator, this, buffer);
                    return buffer;
                }

                @Override
                public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                    {
                        BigInteger theLineNumber;
                        theLineNumber = this.getLineNumber();
                        strategy.appendField(locator, this, "lineNumber", buffer, theLineNumber, (this.lineNumber != null));
                    }
                    {
                        List<SourceDocuments.Payments.Payment.Line.SourceDocumentID> theSourceDocumentID;
                        theSourceDocumentID = (((this.sourceDocumentID != null) && (!this.sourceDocumentID.isEmpty())) ? this.getSourceDocumentID() : null);
                        strategy.appendField(locator, this, "sourceDocumentID", buffer, theSourceDocumentID, ((this.sourceDocumentID != null) && (!this.sourceDocumentID.isEmpty())));
                    }
                    {
                        BigDecimal theSettlementAmount;
                        theSettlementAmount = this.getSettlementAmount();
                        strategy.appendField(locator, this, "settlementAmount", buffer, theSettlementAmount, (this.settlementAmount != null));
                    }
                    {
                        BigDecimal theDebitAmount;
                        theDebitAmount = this.getDebitAmount();
                        strategy.appendField(locator, this, "debitAmount", buffer, theDebitAmount, (this.debitAmount != null));
                    }
                    {
                        BigDecimal theCreditAmount;
                        theCreditAmount = this.getCreditAmount();
                        strategy.appendField(locator, this, "creditAmount", buffer, theCreditAmount, (this.creditAmount != null));
                    }
                    {
                        PaymentTax theTax;
                        theTax = this.getTax();
                        strategy.appendField(locator, this, "tax", buffer, theTax, (this.tax != null));
                    }
                    {
                        String theTaxExemptionReason;
                        theTaxExemptionReason = this.getTaxExemptionReason();
                        strategy.appendField(locator, this, "taxExemptionReason", buffer, theTaxExemptionReason, (this.taxExemptionReason != null));
                    }
                    {
                        String theTaxExemptionCode;
                        theTaxExemptionCode = this.getTaxExemptionCode();
                        strategy.appendField(locator, this, "taxExemptionCode", buffer, theTaxExemptionCode, (this.taxExemptionCode != null));
                    }
                    return buffer;
                }

                @XmlAccessorType(XmlAccessType.FIELD)
                @XmlType(name = "", propOrder = {
                    "originatingON",
                    "invoiceDate",
                    "description"
                })
                public static class SourceDocumentID implements ToString2 {

                    @XmlElement(name = "OriginatingON", required = true)
                    protected String originatingON;
                    @XmlElement(name = "InvoiceDate", required = true)
                    @XmlSchemaType(name = "date")
                    protected XMLGregorianCalendar invoiceDate;
                    @XmlElement(name = "Description")
                    protected String description;

                    public String getOriginatingON() {
                        return originatingON;
                    }

                    public void setOriginatingON(String value) {
                        this.originatingON = value;
                    }

                    public XMLGregorianCalendar getInvoiceDate() {
                        return invoiceDate;
                    }

                    public void setInvoiceDate(XMLGregorianCalendar value) {
                        this.invoiceDate = value;
                    }

                    public String getDescription() {
                        return description;
                    }

                    public void setDescription(String value) {
                        this.description = value;
                    }

                    @Override
                    public String toString() {
                        final ToStringStrategy2 strategy = JAXBToStringStrategy.getInstance();
                        final StringBuilder buffer = new StringBuilder();
                        append(null, buffer, strategy);
                        return buffer.toString();
                    }

                    @Override
                    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                        strategy.appendStart(locator, this, buffer);
                        appendFields(locator, buffer, strategy);
                        strategy.appendEnd(locator, this, buffer);
                        return buffer;
                    }

                    @Override
                    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                        {
                            String theOriginatingON;
                            theOriginatingON = this.getOriginatingON();
                            strategy.appendField(locator, this, "originatingON", buffer, theOriginatingON, (this.originatingON != null));
                        }
                        {
                            XMLGregorianCalendar theInvoiceDate;
                            theInvoiceDate = this.getInvoiceDate();
                            strategy.appendField(locator, this, "invoiceDate", buffer, theInvoiceDate, (this.invoiceDate != null));
                        }
                        {
                            String theDescription;
                            theDescription = this.getDescription();
                            strategy.appendField(locator, this, "description", buffer, theDescription, (this.description != null));
                        }
                        return buffer;
                    }

                }

            }

        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "numberOfEntries",
        "totalDebit",
        "totalCredit",
        "workDocument"
    })
    public static class WorkingDocuments implements ToString2 {

        @XmlElement(name = "NumberOfEntries", required = true)
        @XmlSchemaType(name = "nonNegativeInteger")
        protected BigInteger numberOfEntries;
        @XmlElement(name = "TotalDebit", required = true)
        protected BigDecimal totalDebit;
        @XmlElement(name = "TotalCredit", required = true)
        protected BigDecimal totalCredit;
        @XmlElement(name = "WorkDocument")
        protected List<SourceDocuments.WorkingDocuments.WorkDocument> workDocument;

        public BigInteger getNumberOfEntries() {
            return numberOfEntries;
        }

        public void setNumberOfEntries(BigInteger value) {
            this.numberOfEntries = value;
        }

        public BigDecimal getTotalDebit() {
            return totalDebit;
        }

        public void setTotalDebit(BigDecimal value) {
            this.totalDebit = value;
        }

        public BigDecimal getTotalCredit() {
            return totalCredit;
        }

        public void setTotalCredit(BigDecimal value) {
            this.totalCredit = value;
        }

        public List<SourceDocuments.WorkingDocuments.WorkDocument> getWorkDocument() {
            if (workDocument == null) {
                workDocument = new ArrayList<>();
            }
            return this.workDocument;
        }

        @Override
        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.getInstance();
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        @Override
        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        @Override
        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                BigInteger theNumberOfEntries;
                theNumberOfEntries = this.getNumberOfEntries();
                strategy.appendField(locator, this, "numberOfEntries", buffer, theNumberOfEntries, (this.numberOfEntries != null));
            }
            {
                BigDecimal theTotalDebit;
                theTotalDebit = this.getTotalDebit();
                strategy.appendField(locator, this, "totalDebit", buffer, theTotalDebit, (this.totalDebit != null));
            }
            {
                BigDecimal theTotalCredit;
                theTotalCredit = this.getTotalCredit();
                strategy.appendField(locator, this, "totalCredit", buffer, theTotalCredit, (this.totalCredit != null));
            }
            {
                List<SourceDocuments.WorkingDocuments.WorkDocument> theWorkDocument;
                theWorkDocument = (((this.workDocument != null) && (!this.workDocument.isEmpty())) ? this.getWorkDocument() : null);
                strategy.appendField(locator, this, "workDocument", buffer, theWorkDocument, ((this.workDocument != null) && (!this.workDocument.isEmpty())));
            }
            return buffer;
        }

        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "documentNumber",
            "atcud",
            "documentStatus",
            "hash",
            "hashControl",
            "period",
            "workDate",
            "workType",
            "sourceID",
            "eacCode",
            "systemEntryDate",
            "transactionID",
            "customerID",
            "line",
            "documentTotals"
        })
        public static class WorkDocument implements ToString2 {

            @XmlElement(name = "DocumentNumber", required = true)
            protected String documentNumber;
            @XmlElement(name = "ATCUD", required = true)
            protected String atcud;
            @XmlElement(name = "DocumentStatus", required = true)
            protected SourceDocuments.WorkingDocuments.WorkDocument.DocumentStatus documentStatus;
            @XmlElement(name = "Hash", required = true)
            protected String hash;
            @XmlElement(name = "HashControl", required = true)
            protected String hashControl;
            @XmlElement(name = "Period")
            protected Integer period;
            @XmlElement(name = "WorkDate", required = true)
            @XmlSchemaType(name = "date")
            protected XMLGregorianCalendar workDate;
            @XmlElement(name = "WorkType", required = true)
            protected String workType;
            @XmlElement(name = "SourceID", required = true)
            protected String sourceID;
            @XmlElement(name = "EACCode")
            protected String eacCode;
            @XmlElement(name = "SystemEntryDate", required = true)
            @XmlSchemaType(name = "dateTime")
            protected XMLGregorianCalendar systemEntryDate;
            @XmlElement(name = "TransactionID")
            protected String transactionID;
            @XmlElement(name = "CustomerID", required = true)
            protected String customerID;
            @XmlElement(name = "Line", required = true)
            protected List<SourceDocuments.WorkingDocuments.WorkDocument.Line> line;
            @XmlElement(name = "DocumentTotals", required = true)
            protected SourceDocuments.WorkingDocuments.WorkDocument.DocumentTotals documentTotals;

            public String getDocumentNumber() {
                return documentNumber;
            }

            public void setDocumentNumber(String value) {
                this.documentNumber = value;
            }

            public String getATCUD() {
                return atcud;
            }

            public void setATCUD(String value) {
                this.atcud = value;
            }

            public SourceDocuments.WorkingDocuments.WorkDocument.DocumentStatus getDocumentStatus() {
                return documentStatus;
            }

            public void setDocumentStatus(SourceDocuments.WorkingDocuments.WorkDocument.DocumentStatus value) {
                this.documentStatus = value;
            }

            public String getHash() {
                return hash;
            }

            public void setHash(String value) {
                this.hash = value;
            }

            public String getHashControl() {
                return hashControl;
            }

            public void setHashControl(String value) {
                this.hashControl = value;
            }

            public Integer getPeriod() {
                return period;
            }

            public void setPeriod(Integer value) {
                this.period = value;
            }

            public XMLGregorianCalendar getWorkDate() {
                return workDate;
            }

            public void setWorkDate(XMLGregorianCalendar value) {
                this.workDate = value;
            }

            public String getWorkType() {
                return workType;
            }

            public void setWorkType(String value) {
                this.workType = value;
            }

            public String getSourceID() {
                return sourceID;
            }

            public void setSourceID(String value) {
                this.sourceID = value;
            }

            public String getEACCode() {
                return eacCode;
            }

            public void setEACCode(String value) {
                this.eacCode = value;
            }

            public XMLGregorianCalendar getSystemEntryDate() {
                return systemEntryDate;
            }

            public void setSystemEntryDate(XMLGregorianCalendar value) {
                this.systemEntryDate = value;
            }

            public String getTransactionID() {
                return transactionID;
            }

            public void setTransactionID(String value) {
                this.transactionID = value;
            }

            public String getCustomerID() {
                return customerID;
            }

            public void setCustomerID(String value) {
                this.customerID = value;
            }

            public List<SourceDocuments.WorkingDocuments.WorkDocument.Line> getLine() {
                if (line == null) {
                    line = new ArrayList<>();
                }
                return this.line;
            }

            public SourceDocuments.WorkingDocuments.WorkDocument.DocumentTotals getDocumentTotals() {
                return documentTotals;
            }

            public void setDocumentTotals(SourceDocuments.WorkingDocuments.WorkDocument.DocumentTotals value) {
                this.documentTotals = value;
            }

            @Override
            public String toString() {
                final ToStringStrategy2 strategy = JAXBToStringStrategy.getInstance();
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            @Override
            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            @Override
            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                {
                    String theDocumentNumber;
                    theDocumentNumber = this.getDocumentNumber();
                    strategy.appendField(locator, this, "documentNumber", buffer, theDocumentNumber, (this.documentNumber != null));
                }
                {
                    String theATCUD;
                    theATCUD = this.getATCUD();
                    strategy.appendField(locator, this, "atcud", buffer, theATCUD, (this.atcud != null));
                }
                {
                    SourceDocuments.WorkingDocuments.WorkDocument.DocumentStatus theDocumentStatus;
                    theDocumentStatus = this.getDocumentStatus();
                    strategy.appendField(locator, this, "documentStatus", buffer, theDocumentStatus, (this.documentStatus != null));
                }
                {
                    String theHash;
                    theHash = this.getHash();
                    strategy.appendField(locator, this, "hash", buffer, theHash, (this.hash != null));
                }
                {
                    String theHashControl;
                    theHashControl = this.getHashControl();
                    strategy.appendField(locator, this, "hashControl", buffer, theHashControl, (this.hashControl != null));
                }
                {
                    Integer thePeriod;
                    thePeriod = this.getPeriod();
                    strategy.appendField(locator, this, "period", buffer, thePeriod, (this.period != null));
                }
                {
                    XMLGregorianCalendar theWorkDate;
                    theWorkDate = this.getWorkDate();
                    strategy.appendField(locator, this, "workDate", buffer, theWorkDate, (this.workDate != null));
                }
                {
                    String theWorkType;
                    theWorkType = this.getWorkType();
                    strategy.appendField(locator, this, "workType", buffer, theWorkType, (this.workType != null));
                }
                {
                    String theSourceID;
                    theSourceID = this.getSourceID();
                    strategy.appendField(locator, this, "sourceID", buffer, theSourceID, (this.sourceID != null));
                }
                {
                    String theEACCode;
                    theEACCode = this.getEACCode();
                    strategy.appendField(locator, this, "eacCode", buffer, theEACCode, (this.eacCode != null));
                }
                {
                    XMLGregorianCalendar theSystemEntryDate;
                    theSystemEntryDate = this.getSystemEntryDate();
                    strategy.appendField(locator, this, "systemEntryDate", buffer, theSystemEntryDate, (this.systemEntryDate != null));
                }
                {
                    String theTransactionID;
                    theTransactionID = this.getTransactionID();
                    strategy.appendField(locator, this, "transactionID", buffer, theTransactionID, (this.transactionID != null));
                }
                {
                    String theCustomerID;
                    theCustomerID = this.getCustomerID();
                    strategy.appendField(locator, this, "customerID", buffer, theCustomerID, (this.customerID != null));
                }
                {
                    List<SourceDocuments.WorkingDocuments.WorkDocument.Line> theLine;
                    theLine = (((this.line != null) && (!this.line.isEmpty())) ? this.getLine() : null);
                    strategy.appendField(locator, this, "line", buffer, theLine, ((this.line != null) && (!this.line.isEmpty())));
                }
                {
                    SourceDocuments.WorkingDocuments.WorkDocument.DocumentTotals theDocumentTotals;
                    theDocumentTotals = this.getDocumentTotals();
                    strategy.appendField(locator, this, "documentTotals", buffer, theDocumentTotals, (this.documentTotals != null));
                }
                return buffer;
            }

            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "taxPayable",
                "netTotal",
                "grossTotal",
                "currency"
            })
            public static class DocumentTotals implements ToString2 {

                @XmlElement(name = "TaxPayable", required = true)
                protected BigDecimal taxPayable;
                @XmlElement(name = "NetTotal", required = true)
                protected BigDecimal netTotal;
                @XmlElement(name = "GrossTotal", required = true)
                protected BigDecimal grossTotal;
                @XmlElement(name = "Currency")
                protected Currency currency;

                public BigDecimal getTaxPayable() {
                    return taxPayable;
                }

                public void setTaxPayable(BigDecimal value) {
                    this.taxPayable = value;
                }

                public BigDecimal getNetTotal() {
                    return netTotal;
                }

                public void setNetTotal(BigDecimal value) {
                    this.netTotal = value;
                }

                public BigDecimal getGrossTotal() {
                    return grossTotal;
                }

                public void setGrossTotal(BigDecimal value) {
                    this.grossTotal = value;
                }

                public Currency getCurrency() {
                    return currency;
                }

                public void setCurrency(Currency value) {
                    this.currency = value;
                }

                @Override
                public String toString() {
                    final ToStringStrategy2 strategy = JAXBToStringStrategy.getInstance();
                    final StringBuilder buffer = new StringBuilder();
                    append(null, buffer, strategy);
                    return buffer.toString();
                }

                @Override
                public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                    strategy.appendStart(locator, this, buffer);
                    appendFields(locator, buffer, strategy);
                    strategy.appendEnd(locator, this, buffer);
                    return buffer;
                }

                @Override
                public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                    {
                        BigDecimal theTaxPayable;
                        theTaxPayable = this.getTaxPayable();
                        strategy.appendField(locator, this, "taxPayable", buffer, theTaxPayable, (this.taxPayable != null));
                    }
                    {
                        BigDecimal theNetTotal;
                        theNetTotal = this.getNetTotal();
                        strategy.appendField(locator, this, "netTotal", buffer, theNetTotal, (this.netTotal != null));
                    }
                    {
                        BigDecimal theGrossTotal;
                        theGrossTotal = this.getGrossTotal();
                        strategy.appendField(locator, this, "grossTotal", buffer, theGrossTotal, (this.grossTotal != null));
                    }
                    {
                        Currency theCurrency;
                        theCurrency = this.getCurrency();
                        strategy.appendField(locator, this, "currency", buffer, theCurrency, (this.currency != null));
                    }
                    return buffer;
                }

            }

        }

    }

}