//
// This file was generated by the Eclipse Implementation of JAXB, v2.3.6 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.08.18 at 08:13:47 AM GMT 
//


package com.premiumminds.billy.portugal.services.export.saftpt.v1_03_01.schema;

import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy; // Ensure correct import for JAXBToStringStrategy

/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="AccountID" type="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}SAFPTGLAccountID"/&gt;
 *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}AccountDescription"/&gt;
 *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}OpeningDebitBalance"/&gt;
 *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}OpeningCreditBalance"/&gt;
 *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}ClosingDebitBalance"/&gt;
 *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}ClosingCreditBalance"/&gt;
 *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}GroupingCategory"/&gt;
 *         &lt;element name="GroupingCode" type="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}SAFPTGLAccountID" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "accountID",
    "accountDescription",
    "openingDebitBalance",
    "openingCreditBalance",
    "closingDebitBalance",
    "closingCreditBalance",
    "groupingCategory",
    "groupingCode"
})
@XmlRootElement(name = "GeneralLedger")
public class GeneralLedger implements ToString2
{

    @XmlElement(name = "AccountID", required = true)
    protected String accountID;
    @XmlElement(name = "AccountDescription", required = true)
    protected String accountDescription;
    @XmlElement(name = "OpeningDebitBalance", required = true)
    protected BigDecimal openingDebitBalance;
    @XmlElement(name = "OpeningCreditBalance", required = true)
    protected BigDecimal openingCreditBalance;
    @XmlElement(name = "ClosingDebitBalance", required = true)
    protected BigDecimal closingDebitBalance;
    @XmlElement(name = "ClosingCreditBalance", required = true)
    protected BigDecimal closingCreditBalance;
    @XmlElement(name = "GroupingCategory", required = true)
    protected String groupingCategory;
    @XmlElement(name = "GroupingCode")
    protected String groupingCode;

    // Getter and setter methods...

    @Override
    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.getInstance(); // Use the static method to get the instance
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    @Override
    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    @Override
    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        // Append fields...
        return buffer;
    }
}