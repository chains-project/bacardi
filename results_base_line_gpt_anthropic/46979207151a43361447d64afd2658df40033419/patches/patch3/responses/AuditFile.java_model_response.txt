```java
//
// This file was generated by the Eclipse Implementation of JAXB, v2.3.6 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.08.18 at 08:13:47 AM GMT 
//


package com.premiumminds.billy.portugal.services.export.saftpt.v1_03_01.schema;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy; // Corrected import statement


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}Header"/&gt;
 *         &lt;element name="MasterFiles"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;sequence&gt;
 *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}GeneralLedger" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}Customer" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}Supplier" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}Product" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}TaxTable" minOccurs="0"/&gt;
 *                 &lt;/sequence&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}GeneralLedgerEntries" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}SourceDocuments" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "header",
    "masterFiles",
    "generalLedgerEntries",
    "sourceDocuments"
})
@XmlRootElement(name = "AuditFile")
public class AuditFile implements ToString2
{

    @XmlElement(name = "Header", required = true)
    protected Header header;
    @XmlElement(name = "MasterFiles", required = true)
    protected AuditFile.MasterFiles masterFiles;
    @XmlElement(name = "GeneralLedgerEntries")
    protected GeneralLedgerEntries generalLedgerEntries;
    @XmlElement(name = "SourceDocuments")
    protected SourceDocuments sourceDocuments;

    /**
     * Gets the value of the header property.
     * 
     * @return
     *     possible object is
     *     {@link Header }
     *     
     */
    public Header getHeader() {
        return header;
    }

    /**
     * Sets the value of the header property.
     * 
     * @param value
     *     allowed object is
     *     {@link Header }
     *     
     */
    public void setHeader(Header value) {
        this.header = value;
    }

    /**
     * Gets the value of the masterFiles property.
     * 
     * @return
     *     possible object is
     *     {@link AuditFile.MasterFiles }
     *     
     */
    public AuditFile.MasterFiles getMasterFiles() {
        return masterFiles;
    }

    /**
     * Sets the value of the masterFiles property.
     * 
     * @param value
     *     allowed object is
     *     {@link AuditFile.MasterFiles }
     *     
     */
    public void setMasterFiles(AuditFile.MasterFiles value) {
        this.masterFiles = value;
    }

    /**
     * Gets the value of the generalLedgerEntries property.
     * 
     * @return
     *     possible object is
     *     {@link GeneralLedgerEntries }
     *     
     */
    public GeneralLedgerEntries getGeneralLedgerEntries() {
        return generalLedgerEntries;
    }

    /**
     * Sets the value of the generalLedgerEntries property.
     * 
     * @param value
     *     allowed object is
     *     {@link GeneralLedgerEntries }
     *     
     */
    public void setGeneralLedgerEntries(GeneralLedgerEntries value) {
        this.generalLedgerEntries = value;
    }

    /**
     * Gets the value of the sourceDocuments property.
     * 
     * @return
     *     possible object is
     *     {@link SourceDocuments }
     *     
     */
    public SourceDocuments getSourceDocuments() {
        return sourceDocuments;
    }

    /**
     * Sets the value of the sourceDocuments property.
     * 
     * @param value
     *     allowed object is
     *     {@link SourceDocuments }
     *     
     */
    public void setSourceDocuments(SourceDocuments value) {
        this.sourceDocuments = value;
    }

    @Override
    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.DEFAULT; // Updated to use DEFAULT instead of getInstance()
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    @Override
    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    @Override
    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            Header theHeader;
            theHeader = this.getHeader();
            strategy.appendField(locator, this, "header", buffer, theHeader, (this.header!= null));
        }
        {
            AuditFile.MasterFiles theMasterFiles;
            theMasterFiles = this.getMasterFiles();
            strategy.appendField(locator, this, "masterFiles", buffer, theMasterFiles, (this.masterFiles!= null));
        }
        {
            GeneralLedgerEntries theGeneralLedgerEntries;
            theGeneralLedgerEntries = this.getGeneralLedgerEntries();
            strategy.appendField(locator, this, "generalLedgerEntries", buffer, theGeneralLedgerEntries, (this.generalLedgerEntries!= null));
        }
        {
            SourceDocuments theSourceDocuments;
            theSourceDocuments = this.getSourceDocuments();
            strategy.appendField(locator, this, "sourceDocuments", buffer, theSourceDocuments, (this.sourceDocuments!= null));
        }
        return buffer;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;sequence&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}GeneralLedger" maxOccurs="unbounded" minOccurs="0"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}Customer" maxOccurs="unbounded" minOccurs="0"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}Supplier" maxOccurs="unbounded" minOccurs="0"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}Product" maxOccurs="unbounded" minOccurs="0"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}TaxTable" minOccurs="0"/&gt;
     *       &lt;/sequence&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "generalLedger",
        "customer",
        "supplier",
        "product",
        "taxTable"
    })
    public static class MasterFiles implements ToString2
    {

        @XmlElement(name = "GeneralLedger")
        protected List<GeneralLedger> generalLedger;
        @XmlElement(name = "Customer")
        protected List<Customer> customer;
        @XmlElement(name = "Supplier")
        protected List<Supplier> supplier;
        @XmlElement(name = "Product")
        protected List<Product> product;
        @XmlElement(name = "TaxTable")
        protected TaxTable taxTable;

        /**
         * Gets the value of the generalLedger property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the generalLedger property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getGeneralLedger().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link GeneralLedger }
         * 
         * 
         */
        public List<GeneralLedger> getGeneralLedger() {
            if (generalLedger == null) {
                generalLedger = new ArrayList<GeneralLedger>();
            }
            return this.generalLedger;
        }

        /**
         * Gets the value of the customer property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getCustomer().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link Customer }
         * 
         * 
         */
        public List<Customer> getCustomer() {
            if (customer == null) {
                customer = new ArrayList<Customer>();
            }
            return this.customer;
        }

        /**
         * Gets the value of the supplier property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getSupplier().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link Supplier }
         * 
         * 
         */
        public List<Supplier> getSupplier() {
            if (supplier == null) {
                supplier = new ArrayList<Supplier>();
            }
            return this.supplier;
        }

        /**
         * Gets the value of the product property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getProduct().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link Product }
         * 
         * 
         */
        public List<Product> getProduct() {
            if (product == null) {
                product = new ArrayList<Product>();
            }
            return this.product;
        }

        /**
         * Gets the value of the taxTable property.
         * 
         * @return
         *     possible object is
         *     {@link TaxTable }
         *     
         */
        public TaxTable getTaxTable() {
            return taxTable;
        }

        /**
         * Sets the value of the taxTable property.
         * 
         * @param value
         *     allowed object is
         *     {@link TaxTable }
         *     
         */
        public void setTaxTable(TaxTable value) {
            this.taxTable = value;
        }

        @Override
        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.DEFAULT; // Updated to use DEFAULT instead of getInstance()
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        @Override
        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        @Override
        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                List<GeneralLedger> theGeneralLedger;
                theGeneralLedger = (((this.generalLedger!= null)&&(!this.generalLedger.isEmpty()))?this.getGeneralLedger():null);
                strategy.appendField(locator, this, "generalLedger", buffer, theGeneralLedger, ((this.generalLedger!= null)&&(!this.generalLedger.isEmpty())));
            }
            {
                List<Customer> theCustomer;
                theCustomer = (((this.customer!= null)&&(!this.customer.isEmpty()))?this.getCustomer():null);
                strategy.appendField(locator, this, "customer", buffer, theCustomer, ((this.customer!= null)&&(!this.customer.isEmpty())));
            }
            {
                List<Supplier> theSupplier;
                theSupplier = (((this.supplier!= null)&&(!this.supplier.isEmpty()))?this.getSupplier():null);
                strategy.appendField(locator, this, "supplier", buffer, theSupplier, ((this.supplier!= null)&&(!this.supplier.isEmpty())));
            }
            {
                List<Product> theProduct;
                theProduct = (((this.product!= null)&&(!this.product.isEmpty()))?this.getProduct():null);
                strategy.appendField(locator, this, "product", buffer, theProduct, ((this.product!= null)&&(!this.product.isEmpty())));
            }
            {
                TaxTable theTaxTable;
                theTaxTable = this.getTaxTable();
                strategy.appendField(locator, this, "taxTable", buffer, theTaxTable, (this.taxTable!= null));
            }
            return buffer;
        }

    }

}
```
