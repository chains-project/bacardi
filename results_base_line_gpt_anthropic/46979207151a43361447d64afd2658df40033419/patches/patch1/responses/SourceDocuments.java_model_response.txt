```java
//
// This file was generated by the Eclipse Implementation of JAXB, v2.3.6 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.08.18 at 08:13:47 AM GMT 
//


package com.premiumminds.billy.portugal.services.export.saftpt.v1_02_01.schema;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="SalesInvoices" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;sequence&gt;
 *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}NumberOfEntries"/&gt;
 *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}TotalDebit"/&gt;
 *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}TotalCredit"/&gt;
 *                   &lt;element name="Invoice" maxOccurs="unbounded" minOccurs="0"&gt;
 *                     &lt;complexType&gt;
 *                       &lt;complexContent&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                           &lt;sequence&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}InvoiceNo"/&gt;
 *                             &lt;element name="DocumentStatus"&gt;
 *                               &lt;complexType&gt;
 *                                 &lt;complexContent&gt;
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                                     &lt;sequence&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}InvoiceStatus"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}InvoiceStatusDate"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Reason" minOccurs="0"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SourceID"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SourceBilling"/&gt;
 *                                     &lt;/sequence&gt;
 *                                   &lt;/restriction&gt;
 *                                 &lt;/complexContent&gt;
 *                               &lt;/complexType&gt;
 *                             &lt;/element&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Hash"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}HashControl" minOccurs="0"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Period" minOccurs="0"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}InvoiceDate"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}InvoiceType"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SelfBillingIndicator"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SourceID"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}EACCode" minOccurs="0"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SystemEntryDate"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}TransactionID" minOccurs="0"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}CustomerID"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}ShipTo" minOccurs="0"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}ShipFrom" minOccurs="0"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementEndTime" minOccurs="0"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementStartTime" minOccurs="0"/&gt;
 *                             &lt;element name="Line" maxOccurs="unbounded"&gt;
 *                               &lt;complexType&gt;
 *                                 &lt;complexContent&gt;
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                                     &lt;sequence&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}LineNumber"/&gt;
 *                                       &lt;element name="OrderReferences" type="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}OrderReferences" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}ProductCode"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}ProductDescription"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Quantity"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}UnitOfMeasure"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}UnitPrice"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}TaxPointDate"/&gt;
 *                                       &lt;element name="References" type="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}References" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Description"/&gt;
 *                                       &lt;choice&gt;
 *                                         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}DebitAmount"/&gt;
 *                                         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}CreditAmount"/&gt;
 *                                       &lt;/choice&gt;
 *                                       &lt;element name="Tax" type="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Tax"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}TaxExemptionReason" minOccurs="0"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SettlementAmount" minOccurs="0"/&gt;
 *                                     &lt;/sequence&gt;
 *                                   &lt;/restriction&gt;
 *                                 &lt;/complexContent&gt;
 *                               &lt;/complexType&gt;
 *                             &lt;/element&gt;
 *                             &lt;element name="DocumentTotals"&gt;
 *                               &lt;complexType&gt;
 *                                 &lt;complexContent&gt;
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                                     &lt;sequence&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}TaxPayable"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}NetTotal"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}GrossTotal"/&gt;
 *                                       &lt;element name="Currency" type="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Currency" minOccurs="0"/&gt;
 *                                       &lt;element name="Settlement" type="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Settlement" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                                       &lt;element name="Payment" type="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Payment" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                                     &lt;/sequence&gt;
 *                                   &lt;/restriction&gt;
 *                                 &lt;/complexContent&gt;
 *                               &lt;/complexType&gt;
 *                             &lt;/element&gt;
 *                             &lt;element name="WithholdingTax" type="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}WithholdingTax" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                           &lt;/sequence&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/complexContent&gt;
 *                     &lt;/complexType&gt;
 *                   &lt;/element&gt;
 *                 &lt;/sequence&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="MovementOfGoods" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;sequence&gt;
 *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}NumberOfMovementLines"/&gt;
 *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}TotalQuantityIssued"/&gt;
 *                   &lt;element name="StockMovement" maxOccurs="unbounded" minOccurs="0"&gt;
 *                     &lt;complexType&gt;
 *                       &lt;complexContent&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                           &lt;sequence&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}DocumentNumber"/&gt;
 *                             &lt;element name="DocumentStatus"&gt;
 *                               &lt;complexType&gt;
 *                                 &lt;complexContent&gt;
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                                     &lt;sequence&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementStatus"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementStatusDate"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Reason" minOccurs="0"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SourceID"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SourceBilling"/&gt;
 *                                     &lt;/sequence&gt;
 *                                   &lt;/restriction&gt;
 *                                 &lt;/complexContent&gt;
 *                               &lt;/complexType&gt;
 *                             &lt;/element&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Hash"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}HashControl" minOccurs="0"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Period" minOccurs="0"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementDate"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementType"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SystemEntryDate"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}TransactionID" minOccurs="0"/&gt;
 *                             &lt;choice&gt;
 *                               &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}CustomerID"/&gt;
 *                               &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SupplierID"/&gt;
 *                             &lt;/choice&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SourceID"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}EACCode" minOccurs="0"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementComments" minOccurs="0"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}ShipTo" minOccurs="0"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}ShipFrom" minOccurs="0"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementEndTime" minOccurs="0"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementStartTime"/&gt;
 *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}ATDocCodeID" minOccurs="0"/&gt;
 *                             &lt;element name="Line" maxOccurs="unbounded"&gt;
 *                               &lt;complexType&gt;
 *                                 &lt;complexContent&gt;
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                                     &lt;sequence&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}LineNumber"/&gt;
 *                                       &lt;element name="OrderReferences" type="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}OrderReferences" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}ProductCode"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}ProductDescription"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Quantity"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}UnitOfMeasure"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}UnitPrice"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Description"/&gt;
 *                                       &lt;choice&gt;
 *                                         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}DebitAmount"/&gt;
 *                                         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}CreditAmount"/&gt;
 *                                       &lt;/choice&gt;
 *                                       &lt;element name="Tax" type="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementTax" minOccurs="0"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}TaxExemptionReason" minOccurs="0"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SettlementAmount" minOccurs="0"/&gt;
 *                                     &lt;/sequence&gt;
 *                                   &lt;/restriction&gt;
 *                                 &lt;/complexContent&gt;
 *                               &lt;/complexType&gt;
 *                             &lt;/element&gt;
 *                             &lt;element name="DocumentTotals"&gt;
 *                               &lt;complexType&gt;
 *                                 &lt;complexContent&gt;
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                                     &lt;sequence&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}TaxPayable"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}NetTotal"/&gt;
 *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}GrossTotal"/&gt;
 *                                       &lt;element name="Currency" type="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Currency" minOccurs="0"/&gt;
 *                                     &lt;/sequence&gt;
 *                                   &lt;/restriction&gt;
 *                                 &lt;/complexContent&gt;
 *                               &lt;/complexType&gt;
 *                             &lt;/element&gt;
 *                           &lt;/sequence&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/complexContent&gt;
 *                     &lt;/complexType&gt;
 *                   &lt;/element&gt;
 *                 &lt;/sequence&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "salesInvoices",
    "movementOfGoods",
    "workingDocuments"
})
@XmlRootElement(name = "SourceDocuments")
public class SourceDocuments implements ToString2
{

    @XmlElement(name = "SalesInvoices")
    protected SourceDocuments.SalesInvoices salesInvoices;
    @XmlElement(name = "MovementOfGoods")
    protected SourceDocuments.MovementOfGoods movementOfGoods;
    @XmlElement(name = "WorkingDocuments")
    protected SourceDocuments.WorkingDocuments workingDocuments;

    /**
     * Gets the value of the salesInvoices property.
     * 
     * @return
     *     possible object is
     *     {@link SourceDocuments.SalesInvoices }
     *     
     */
    public SourceDocuments.SalesInvoices getSalesInvoices() {
        return salesInvoices;
    }

    /**
     * Sets the value of the salesInvoices property.
     * 
     * @param value
     *     allowed object is
     *     {@link SourceDocuments.SalesInvoices }
     *     
     */
    public void setSalesInvoices(SourceDocuments.SalesInvoices value) {
        this.salesInvoices = value;
    }

    /**
     * Gets the value of the movementOfGoods property.
     * 
     * @return
     *     possible object is
     *     {@link SourceDocuments.MovementOfGoods }
     *     
     */
    public SourceDocuments.MovementOfGoods getMovementOfGoods() {
        return movementOfGoods;
    }

    /**
     * Sets the value of the movementOfGoods property.
     * 
     * @param value
     *     allowed object is
     *     {@link SourceDocuments.MovementOfGoods }
     *     
     */
    public void setMovementOfGoods(SourceDocuments.MovementOfGoods value) {
        this.movementOfGoods = value;
    }

    /**
     * Gets the value of the workingDocuments property.
     * 
     * @return
     *     possible object is
     *     {@link SourceDocuments.WorkingDocuments }
     *     
     */
    public SourceDocuments.WorkingDocuments getWorkingDocuments() {
        return workingDocuments;
    }

    /**
     * Sets the value of the workingDocuments property.
     * 
     * @param value
     *     allowed object is
     *     {@link SourceDocuments.WorkingDocuments }
     *     
     */
    public void setWorkingDocuments(SourceDocuments.WorkingDocuments value) {
        this.workingDocuments = value;
    }

    public String toString() {
        final ToStringStrategy2 strategy = new JAXBToStringStrategy(); // Updated to use the class directly
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            SourceDocuments.SalesInvoices theSalesInvoices;
            theSalesInvoices = this.getSalesInvoices();
            strategy.appendField(locator, this, "salesInvoices", buffer, theSalesInvoices, (this.salesInvoices!= null));
        }
        {
            SourceDocuments.MovementOfGoods theMovementOfGoods;
            theMovementOfGoods = this.getMovementOfGoods();
            strategy.appendField(locator, this, "movementOfGoods", buffer, theMovementOfGoods, (this.movementOfGoods!= null));
        }
        {
            SourceDocuments.WorkingDocuments theWorkingDocuments;
            theWorkingDocuments = this.getWorkingDocuments();
            strategy.appendField(locator, this, "workingDocuments", buffer, theWorkingDocuments, (this.workingDocuments!= null));
        }
        return buffer;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;sequence&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}NumberOfMovementLines"/&gt;
     *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}TotalQuantityIssued"/&gt;
     *         &lt;element name="StockMovement" maxOccurs="unbounded" minOccurs="0"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;sequence&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}DocumentNumber"/&gt;
     *                   &lt;element name="DocumentStatus"&gt;
     *                     &lt;complexType&gt;
     *                       &lt;complexContent&gt;
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                           &lt;sequence&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementStatus"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementStatusDate"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Reason" minOccurs="0"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SourceID"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SourceBilling"/&gt;
     *                           &lt;/sequence&gt;
     *                         &lt;/restriction&gt;
     *                       &lt;/complexContent&gt;
     *                     &lt;/complexType&gt;
     *                   &lt;/element&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Hash"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}HashControl" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Period" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementDate"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementType"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SystemEntryDate"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}TransactionID" minOccurs="0"/&gt;
     *                   &lt;choice&gt;
     *                     &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}CustomerID"/&gt;
     *                     &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SupplierID"/&gt;
     *                   &lt;/choice&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SourceID"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}EACCode" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementComments" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}ShipTo" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}ShipFrom" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementEndTime" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementStartTime"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}ATDocCodeID" minOccurs="0"/&gt;
     *                   &lt;element name="Line" maxOccurs="unbounded"&gt;
     *                     &lt;complexType&gt;
     *                       &lt;complexContent&gt;
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                           &lt;sequence&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}LineNumber"/&gt;
     *                             &lt;element name="OrderReferences" type="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}OrderReferences" maxOccurs="unbounded" minOccurs="0"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}ProductCode"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}ProductDescription"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Quantity"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}UnitOfMeasure"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}UnitPrice"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Description"/&gt;
     *                             &lt;choice&gt;
     *                               &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}DebitAmount"/&gt;
     *                               &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}CreditAmount"/&gt;
     *                             &lt;/choice&gt;
     *                             &lt;element name="Tax" type="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementTax" minOccurs="0"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}TaxExemptionReason" minOccurs="0"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SettlementAmount" minOccurs="0"/&gt;
     *                           &lt;/sequence&gt;
     *                         &lt;/restriction&gt;
     *                       &lt;/complexContent&gt;
     *                     &lt;/complexType&gt;
     *                   &lt;/element&gt;
     *                   &lt;element name="DocumentTotals"&gt;
     *                     &lt;complexType&gt;
     *                       &lt;complexContent&gt;
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                           &lt;sequence&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}TaxPayable"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}NetTotal"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}GrossTotal"/&gt;
     *                             &lt;element name="Currency" type="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Currency" minOccurs="0"/&gt;
     *                             &lt;element name="Settlement" type="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Settlement" maxOccurs="unbounded" minOccurs="0"/&gt;
     *                             &lt;element name="Payment" type="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Payment" maxOccurs="unbounded" minOccurs="0"/&gt;
     *                           &lt;/sequence&gt;
     *                         &lt;/restriction&gt;
     *                       &lt;/complexContent&gt;
     *                     &lt;/complexType&gt;
     *                   &lt;/element&gt;
     *                 &lt;/sequence&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *         &lt;element name="WorkingDocuments" minOccurs="0"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;sequence&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}NumberOfEntries"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}TotalDebit"/&gt;
     *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}TotalCredit"/&gt;
     *                   &lt;element name="WorkDocument" maxOccurs="unbounded" minOccurs="0"&gt;
     *                     &lt;complexType&gt;
     *                       &lt;complexContent&gt;
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                           &lt;sequence&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}DocumentNumber"/&gt;
     *                             &lt;element name="DocumentStatus"&gt;
     *                               &lt;complexType&gt;
     *                                 &lt;complexContent&gt;
     *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                                     &lt;sequence&gt;
     *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}WorkStatus"/&gt;
     *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}WorkStatusDate"/&gt;
     *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Reason" minOccurs="0"/&gt;
     *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SourceID"/&gt;
     *                                     &lt;/sequence&gt;
     *                                   &lt;/restriction&gt;
     *                                 &lt;/complexContent&gt;
     *                               &lt;/complexType&gt;
     *                             &lt;/element&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Hash"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}HashControl" minOccurs="0"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Period" minOccurs="0"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}WorkDate"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}WorkType"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SourceID"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}EACCode" minOccurs="0"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SystemEntryDate"/&gt;
     *                             &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}CustomerID"/&gt;
     *                             &lt;element name="Line" maxOccurs="unbounded"&gt;
     *                               &lt;complexType&gt;
     *                                 &lt;complexContent&gt;
     *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                                     &lt;sequence&gt;
     *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}LineNumber"/&gt;
     *                                       &lt;element name="OrderReferences" type="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}OrderReferences" maxOccurs="unbounded" minOccurs="0"/&gt;
     *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}ProductCode"/&gt;
     *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}ProductDescription"/&gt;
     *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Quantity"/&gt;
     *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}UnitOfMeasure"/&gt;
     *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}UnitPrice"/&gt;
     *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Description"/&gt;
     *                                       &lt;choice&gt;
     *                                         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}DebitAmount"/&gt;
     *                                         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}CreditAmount"/&gt;
     *                                       &lt;/choice&gt;
     *                                       &lt;element name="Tax" type="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Tax" minOccurs="0"/&gt;
     *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}TaxExemptionReason" minOccurs="0"/&gt;
     *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SettlementAmount" minOccurs="0"/&gt;
     *                                     &lt;/sequence&gt;
     *                                   &lt;/restriction&gt;
     *                                 &lt;/complexContent&gt;
     *                               &lt;/complexType&gt;
     *                             &lt;/element&gt;
     *                             &lt;element name="DocumentTotals"&gt;
     *                               &lt;complexType&gt;
     *                                 &lt;complexContent&gt;
     *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                                     &lt;sequence&gt;
     *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}TaxPayable"/&gt;
     *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}NetTotal"/&gt;
     *                                       &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}GrossTotal"/&gt;
     *                                       &lt;element name="Currency" type="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Currency" minOccurs="0"/&gt;
     *                                     &lt;/sequence&gt;
     *                                   &lt;/restriction&gt;
     *                                 &lt;/complexContent&gt;
     *                               &lt;/complexType&gt;
     *                             &lt;/element&gt;
     *                           &lt;/sequence&gt;
     *                         &lt;/restriction&gt;
     *                       &lt;/complexContent&gt;
     *                     &lt;/complexType&gt;
     *                   &lt;/element&gt;
     *                 &lt;/sequence&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *       &lt;/sequence&gt;
     *     &lt;/restriction&gt;
     *   &lt;complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "numberOfMovementLines",
        "totalQuantityIssued",
        "stockMovement"
    })
    public static class MovementOfGoods implements ToString2
    {

        @XmlElement(name = "NumberOfMovementLines", required = true)
        @XmlSchemaType(name = "nonNegativeInteger")
        protected BigInteger numberOfMovementLines;
        @XmlElement(name = "TotalQuantityIssued", required = true)
        protected BigDecimal totalQuantityIssued;
        @XmlElement(name = "StockMovement")
        protected List<SourceDocuments.MovementOfGoods.StockMovement> stockMovement;

        /**
         * Gets the value of the numberOfMovementLines property.
         * 
         * @return
         *     possible object is
         *     {@link BigInteger }
         *     
         */
        public BigInteger getNumberOfMovementLines() {
            return numberOfMovementLines;
        }

        /**
         * Sets the value of the numberOfMovementLines property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigInteger }
         *     
         */
        public void setNumberOfMovementLines(BigInteger value) {
            this.numberOfMovementLines = value;
        }

        /**
         * Gets the value of the totalQuantityIssued property.
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getTotalQuantityIssued() {
            return totalQuantityIssued;
        }

        /**
         * Sets the value of the totalQuantityIssued property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         */
        public void setTotalQuantityIssued(BigDecimal value) {
            this.totalQuantityIssued = value;
        }

        /**
         * Gets the value of the stockMovement property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the stockMovement property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getStockMovement().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link SourceDocuments.MovementOfGoods.StockMovement }
         * 
         * 
         */
        public List<SourceDocuments.MovementOfGoods.StockMovement> getStockMovement() {
            if (stockMovement == null) {
                stockMovement = new ArrayList<SourceDocuments.MovementOfGoods.StockMovement>();
            }
            return this.stockMovement;
        }

        @Override
        public String toString() {
            final ToStringStrategy2 strategy = new JAXBToStringStrategy(); // Updated to instantiate the strategy directly
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        @Override
        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        @Override
        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                BigInteger theNumberOfMovementLines;
                theNumberOfMovementLines = this.getNumberOfMovementLines();
                strategy.appendField(locator, this, "numberOfMovementLines", buffer, theNumberOfMovementLines, (this.numberOfMovementLines!= null));
            }
            {
                BigDecimal theTotalQuantityIssued;
                theTotalQuantityIssued = this.getTotalQuantityIssued();
                strategy.appendField(locator, this, "totalQuantityIssued", buffer, theTotalQuantityIssued, (this.totalQuantityIssued!= null));
            }
            {
                List<SourceDocuments.MovementOfGoods.StockMovement> theStockMovement;
                theStockMovement = (((this.stockMovement!= null)&&(!this.stockMovement.isEmpty()))?this.getStockMovement():null);
                strategy.appendField(locator, this, "stockMovement", buffer, theStockMovement, ((this.stockMovement!= null)&&(!this.stockMovement.isEmpty())));
            }
            return buffer;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType&gt;
         *   &lt;complexContent&gt;
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *       &lt;sequence&gt;
         *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}DocumentNumber"/&gt;
         *         &lt;element name="DocumentStatus"&gt;
         *           &lt;complexType&gt;
         *             &lt;complexContent&gt;
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *                 &lt;sequence&gt;
         *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementStatus"/&gt;
         *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementStatusDate"/&gt;
         *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Reason" minOccurs="0"/&gt;
         *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SourceID"/&gt;
         *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SourceBilling"/&gt;
         *                 &lt;/sequence&gt;
         *               &lt;/restriction&gt;
         *             &lt;/complexContent&gt;
         *           &lt;/complexType&gt;
         *         &lt;/element&gt;
         *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Hash"/&gt;
         *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}HashControl" minOccurs="0"/&gt;
         *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Period" minOccurs="0"/&gt;
         *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementDate"/&gt;
         *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementType"/&gt;
         *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SystemEntryDate"/&gt;
         *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}TransactionID" minOccurs="0"/&gt;
         *         &lt;choice&gt;
         *           &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}CustomerID"/&gt;
         *           &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SupplierID"/&gt;
         *         &lt;/choice&gt;
         *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SourceID"/&gt;
         *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}EACCode" minOccurs="0"/&gt;
         *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementComments" minOccurs="0"/&gt;
         *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}ShipTo" minOccurs="0"/&gt;
         *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}ShipFrom" minOccurs="0"/&gt;
         *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementEndTime" minOccurs="0"/&gt;
         *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementStartTime"/&gt;
         *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}ATDocCodeID" minOccurs="0"/&gt;
         *         &lt;element name="Line" maxOccurs="unbounded"&gt;
         *           &lt;complexType&gt;
         *             &lt;complexContent&gt;
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *                 &lt;sequence&gt;
         *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}LineNumber"/&gt;
         *                   &lt;element name="OrderReferences" type="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}OrderReferences" maxOccurs="unbounded" minOccurs="0"/&gt;
         *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}ProductCode"/&gt;
         *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}ProductDescription"/&gt;
         *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Quantity"/&gt;
         *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}UnitOfMeasure"/&gt;
         *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}UnitPrice"/&gt;
         *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Description"/&gt;
         *                   &lt;choice&gt;
         *                     &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}DebitAmount"/&gt;
         *                     &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}CreditAmount"/&gt;
         *                   &lt;/choice&gt;
         *                   &lt;element name="Tax" type="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementTax" minOccurs="0"/&gt;
         *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}TaxExemptionReason" minOccurs="0"/&gt;
         *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SettlementAmount" minOccurs="0"/&gt;
         *                 &lt;/sequence&gt;
         *               &lt;/restriction&gt;
         *             &lt;/complexContent&gt;
         *           &lt;/complexType&gt;
         *         &lt;/element&gt;
         *         &lt;element name="DocumentTotals"&gt;
         *           &lt;complexType&gt;
         *             &lt;complexContent&gt;
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *                 &lt;sequence&gt;
         *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}TaxPayable"/&gt;
         *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}NetTotal"/&gt;
         *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}GrossTotal"/&gt;
         *                   &lt;element name="Currency" type="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Currency" minOccurs="0"/&gt;
         *                 &lt;/sequence&gt;
         *               &lt;/restriction&gt;
         *             &lt;/complexContent&gt;
         *           &lt;/complexType&gt;
         *         &lt;/element&gt;
         *       &lt;/sequence&gt;
         *     &lt;/restriction&gt;
         *   &lt;complexContent&gt;
         * &lt;/complexType&gt;
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "numberOfMovementLines",
            "totalQuantityIssued",
            "stockMovement"
        })
        public static class StockMovement implements ToString2
        {

            @XmlElement(name = "DocumentNumber", required = true)
            protected String documentNumber;
            @XmlElement(name = "DocumentStatus", required = true)
            protected SourceDocuments.MovementOfGoods.StockMovement.DocumentStatus documentStatus;
            @XmlElement(name = "Hash", required = true)
            protected String hash;
            @XmlElement(name = "HashControl")
            protected String hashControl;
            @XmlElement(name = "Period")
            protected Integer period;
            @XmlElement(name = "MovementDate", required = true)
            @XmlSchemaType(name = "date")
            protected XMLGregorianCalendar movementDate;
            @XmlElement(name = "MovementType", required = true)
            protected String movementType;
            @XmlElement(name = "SystemEntryDate", required = true)
            @XmlSchemaType(name = "dateTime")
            protected XMLGregorianCalendar systemEntryDate;
            @XmlElement(name = "TransactionID")
            protected String transactionID;
            @XmlElement(name = "CustomerID")
            protected String customerID;
            @XmlElement(name = "SupplierID")
            protected String supplierID;
            @XmlElement(name = "SourceID", required = true)
            protected String sourceID;
            @XmlElement(name = "EACCode")
            protected String eacCode;
            @XmlElement(name = "MovementComments")
            protected String movementComments;
            @XmlElement(name = "ShipTo")
            protected ShippingPointStructure shipTo;
            @XmlElement(name = "ShipFrom")
            protected ShippingPointStructure shipFrom;
            @XmlElement(name = "MovementEndTime")
            @XmlSchemaType(name = "dateTime")
            protected XMLGregorianCalendar movementEndTime;
            @XmlElement(name = "MovementStartTime", required = true)
            @XmlSchemaType(name = "dateTime")
            protected XMLGregorianCalendar movementStartTime;
            @XmlElement(name = "ATDocCodeID")
            protected String atDocCodeID;
            @XmlElement(name = "Line", required = true)
            protected List<SourceDocuments.MovementOfGoods.StockMovement.Line> line;
            @XmlElement(name = "DocumentTotals", required = true)
            protected SourceDocuments.MovementOfGoods.StockMovement.DocumentTotals documentTotals;

            // No changes made below this comment
            public String getDocumentNumber() {
                return documentNumber;
            }

            public void setDocumentNumber(String value) {
                this.documentNumber = value;
            }

            public SourceDocuments.MovementOfGoods.StockMovement.DocumentStatus getDocumentStatus() {
                return documentStatus;
            }

            public void setDocumentStatus(SourceDocuments.MovementOfGoods.StockMovement.DocumentStatus value) {
                this.documentStatus = value;
            }

            public String getHash() {
                return hash;
            }

            public void setHash(String value) {
                this.hash = value;
            }

            public String getHashControl() {
                return hashControl;
            }

            public void setHashControl(String value) {
                this.hashControl = value;
            }

            public Integer getPeriod() {
                return period;
            }

            public void setPeriod(Integer value) {
                this.period = value;
            }

            public XMLGregorianCalendar getMovementDate() {
                return movementDate;
            }

            public void setMovementDate(XMLGregorianCalendar value) {
                this.movementDate = value;
            }

            public String getMovementType() {
                return movementType;
            }

            public void setMovementType(String value) {
                this.movementType = value;
            }

            public XMLGregorianCalendar getSystemEntryDate() {
                return systemEntryDate;
            }

            public void setSystemEntryDate(XMLGregorianCalendar value) {
                this.systemEntryDate = value;
            }

            public String getTransactionID() {
                return transactionID;
            }

            public void setTransactionID(String value) {
                this.transactionID = value;
            }

            public String getCustomerID() {
                return customerID;
            }

            public void setCustomerID(String value) {
                this.customerID = value;
            }

            public String getSupplierID() {
                return supplierID;
            }

            public void setSupplierID(String value) {
                this.supplierID = value;
            }

            public String getSourceID() {
                return sourceID;
            }

            public void setSourceID(String value) {
                this.sourceID = value;
            }

            public String getEACCode() {
                return eacCode;
            }

            public void setEACCode(String value) {
                this.eacCode = value;
            }

            public String getMovementComments() {
                return movementComments;
            }

            public void setMovementComments(String value) {
                this.movementComments = value;
            }

            public ShippingPointStructure getShipTo() {
                return shipTo;
            }

            public void setShipTo(ShippingPointStructure value) {
                this.shipTo = value;
            }

            public ShippingPointStructure getShipFrom() {
                return shipFrom;
            }

            public void setShipFrom(ShippingPointStructure value) {
                this.shipFrom = value;
            }

            public XMLGregorianCalendar getMovementEndTime() {
                return movementEndTime;
            }

            public void setMovementEndTime(XMLGregorianCalendar value) {
                this.movementEndTime = value;
            }

            public XMLGregorianCalendar getMovementStartTime() {
                return movementStartTime;
            }

            public void setMovementStartTime(XMLGregorianCalendar value) {
                this.movementStartTime = value;
            }

            public String getATDocCodeID() {
                return atDocCodeID;
            }

            public void setATDocCodeID(String value) {
                this.atDocCodeID = value;
            }

            public List<SourceDocuments.MovementOfGoods.StockMovement.Line> getLine() {
                if (line == null) {
                    line = new ArrayList<SourceDocuments.MovementOfGoods.StockMovement.Line>();
                }
                return this.line;
            }

            public SourceDocuments.MovementOfGoods.StockMovement.DocumentTotals getDocumentTotals() {
                return documentTotals;
            }

            public void setDocumentTotals(SourceDocuments.MovementOfGoods.StockMovement.DocumentTotals value) {
                this.documentTotals = value;
            }

            @Override
            public String toString() {
                final ToStringStrategy2 strategy = new JAXBToStringStrategy(); // Updated to instantiate the strategy directly
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            @Override
            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            @Override
            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                {
                    String theDocumentNumber;
                    theDocumentNumber = this.getDocumentNumber();
                    strategy.appendField(locator, this, "documentNumber", buffer, theDocumentNumber, (this.documentNumber!= null));
                }
                {
                    SourceDocuments.MovementOfGoods.StockMovement.DocumentStatus theDocumentStatus;
                    theDocumentStatus = this.getDocumentStatus();
                    strategy.appendField(locator, this, "documentStatus", buffer, theDocumentStatus, (this.documentStatus!= null));
                }
                {
                    String theHash;
                    theHash = this.getHash();
                    strategy.appendField(locator, this, "hash", buffer, theHash, (this.hash!= null));
                }
                {
                    String theHashControl;
                    theHashControl = this.getHashControl();
                    strategy.appendField(locator, this, "hashControl", buffer, theHashControl, (this.hashControl!= null));
                }
                {
                    Integer thePeriod;
                    thePeriod = this.getPeriod();
                    strategy.appendField(locator, this, "period", buffer, thePeriod, (this.period!= null));
                }
                {
                    XMLGregorianCalendar theMovementDate;
                    theMovementDate = this.getMovementDate();
                    strategy.appendField(locator, this, "movementDate", buffer, theMovementDate, (this.movementDate!= null));
                }
                {
                    String theMovementType;
                    theMovementType = this.getMovementType();
                    strategy.appendField(locator, this, "movementType", buffer, theMovementType, (this.movementType!= null));
                }
                {
                    XMLGregorianCalendar theSystemEntryDate;
                    theSystemEntryDate = this.getSystemEntryDate();
                    strategy.appendField(locator, this, "systemEntryDate", buffer, theSystemEntryDate, (this.systemEntryDate!= null));
                }
                {
                    String theTransactionID;
                    theTransactionID = this.getTransactionID();
                    strategy.appendField(locator, this, "transactionID", buffer, theTransactionID, (this.transactionID!= null));
                }
                {
                    String theCustomerID;
                    theCustomerID = this.getCustomerID();
                    strategy.appendField(locator, this, "customerID", buffer, theCustomerID, (this.customerID!= null));
                }
                {
                    String theSupplierID;
                    theSupplierID = this.getSupplierID();
                    strategy.appendField(locator, this, "supplierID", buffer, theSupplierID, (this.supplierID!= null));
                }
                {
                    String theSourceID;
                    theSourceID = this.getSourceID();
                    strategy.appendField(locator, this, "sourceID", buffer, theSourceID, (this.sourceID!= null));
                }
                {
                    String theEACCode;
                    theEACCode = this.getEACCode();
                    strategy.appendField(locator, this, "eacCode", buffer, theEACCode, (this.eacCode!= null));
                }
                {
                    String theMovementComments;
                    theMovementComments = this.getMovementComments();
                    strategy.appendField(locator, this, "movementComments", buffer, theMovementComments, (this.movementComments!= null));
                }
                {
                    ShippingPointStructure theShipTo;
                    theShipTo = this.getShipTo();
                    strategy.appendField(locator, this, "shipTo", buffer, theShipTo, (this.shipTo!= null));
                }
                {
                    ShippingPointStructure theShipFrom;
                    theShipFrom = this.getShipFrom();
                    strategy.appendField(locator, this, "shipFrom", buffer, theShipFrom, (this.shipFrom!= null));
                }
                {
                    XMLGregorianCalendar theMovementEndTime;
                    theMovementEndTime = this.getMovementEndTime();
                    strategy.appendField(locator, this, "movementEndTime", buffer, theMovementEndTime, (this.movementEndTime!= null));
                }
                {
                    XMLGregorianCalendar theMovementStartTime;
                    theMovementStartTime = this.getMovementStartTime();
                    strategy.appendField(locator, this, "movementStartTime", buffer, theMovementStartTime, (this.movementStartTime!= null));
                }
                {
                    String theATDocCodeID;
                    theATDocCodeID = this.getATDocCodeID();
                    strategy.appendField(locator, this, "atDocCodeID", buffer, theATDocCodeID, (this.atDocCodeID!= null));
                }
                {
                    List<SourceDocuments.MovementOfGoods.StockMovement.Line> theLine;
                    theLine = (((this.line!= null)&&(!this.line.isEmpty()))?this.getLine():null);
                    strategy.appendField(locator, this, "line", buffer, theLine, ((this.line!= null)&&(!this.line.isEmpty())));
                }
                {
                    SourceDocuments.MovementOfGoods.StockMovement.DocumentTotals theDocumentTotals;
                    theDocumentTotals = this.getDocumentTotals();
                    strategy.appendField(locator, this, "documentTotals", buffer, theDocumentTotals, (this.documentTotals!= null));
                }
                return buffer;
            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType&gt;
             *   &lt;complexContent&gt;
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
             *       &lt;sequence&gt;
             *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementStatus"/&gt;
             *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}MovementStatusDate"/&gt;
             *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}Reason" minOccurs="0"/&gt;
             *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.02_01}SourceID"/&gt;
             *       &lt;/sequence&gt;
             *     &lt;/restriction&gt;
             *   &lt;/complexContent&gt;
             * &lt;/complexType&gt;
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "movementStatus",
                "movementStatusDate",
                "reason",
                "sourceID"
            })
            public static class DocumentStatus implements ToString2
            {

                @XmlElement(name = "MovementStatus", required = true)
                protected String movementStatus;
                @XmlElement(name = "MovementStatusDate", required = true)
                @XmlSchemaType(name = "dateTime")
                protected XMLGregorianCalendar movementStatusDate;
                @XmlElement(name = "Reason")
                protected String reason;
                @XmlElement(name = "SourceID", required = true)
                protected String sourceID;

                /**
                 * Gets the value of the movementStatus property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getMovementStatus() {
                    return movementStatus;
                }

                /**
                 * Sets the value of the movementStatus property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setMovementStatus(String value) {
                    this.movementStatus = value;
                }

                /**
                 * Gets the value of the movementStatusDate property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link XMLGregorianCalendar }
                 *     
                 */
                public XMLGregorianCalendar getMovementStatusDate() {
                    return movementStatusDate;
                }

                /**
                 * Sets the value of the movementStatusDate property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link XMLGregorianCalendar }
                 *     
                 */
                public void setMovementStatusDate(XMLGregorianCalendar value) {
                    this.movementStatusDate = value;
                }

                /**
                 * Gets the value of the reason property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getReason() {
                    return reason;
                }

                /**
                 * Sets the value of the reason property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setReason(String value) {
                    this.reason = value;
                }

                /**
                 * Gets the value of the sourceID property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getSourceID() {
                    return sourceID;
                }

                /**
                 * Sets the value of the sourceID property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setSourceID(String value) {
                    this.sourceID = value;
                }

                @Override
                public String toString() {
                    final ToStringStrategy2 strategy = new JAXBToStringStrategy(); // Updated to instantiate the strategy directly
                    final StringBuilder buffer = new StringBuilder();
                    append(null, buffer, strategy);
                    return buffer.toString();
                }

                @Override
                public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                    strategy.appendStart(locator, this, buffer);
                    appendFields(locator, buffer, strategy);
                    strategy.appendEnd(locator, this, buffer);
                    return buffer;
                }

                @Override
                public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
                    {
                        String theMovementStatus;
                        theMovementStatus = this.getMovementStatus();
                        strategy.appendField(locator, this, "movementStatus", buffer, theMovementStatus, (this.movementStatus!= null));
                    }
                    {
                        XMLGregorianCalendar theMovementStatusDate;
                        theMovementStatusDate = this.getMovementStatusDate();
                        strategy.appendField(locator, this, "movementStatusDate", buffer, theMovementStatusDate, (this.movementStatusDate!= null));
                    }
                    {
                        String theReason;
                        theReason = this.getReason();
                        strategy.appendField(locator, this, "reason", buffer, theReason, (this.reason!= null));
                    }
                    {
                        String theSourceID;
                        theSourceID = this.getSourceID();
                        strategy.appendField(locator
