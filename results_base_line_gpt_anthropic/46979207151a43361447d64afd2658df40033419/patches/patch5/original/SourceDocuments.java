//
// This file was generated by the Eclipse Implementation of JAXB, v2.3.6 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.08.18 at 08:13:47 AM GMT 
//

package com.premiumminds.billy.portugal.services.export.saftpt.v1_02_01.schema;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy; // Ensure the correct import

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "salesInvoices",
    "movementOfGoods",
    "workingDocuments"
})
@XmlRootElement(name = "SourceDocuments")
public class SourceDocuments implements ToString2 {

    @XmlElement(name = "SalesInvoices")
    protected SourceDocuments.SalesInvoices salesInvoices;
    @XmlElement(name = "MovementOfGoods")
    protected SourceDocuments.MovementOfGoods movementOfGoods;
    @XmlElement(name = "WorkingDocuments")
    protected SourceDocuments.WorkingDocuments workingDocuments;

    public SourceDocuments.SalesInvoices getSalesInvoices() {
        return salesInvoices;
    }

    public void setSalesInvoices(SourceDocuments.SalesInvoices value) {
        this.salesInvoices = value;
    }

    public SourceDocuments.MovementOfGoods getMovementOfGoods() {
        return movementOfGoods;
    }

    public void setMovementOfGoods(SourceDocuments.MovementOfGoods value) {
        this.movementOfGoods = value;
    }

    public SourceDocuments.WorkingDocuments getWorkingDocuments() {
        return workingDocuments;
    }

    public void setWorkingDocuments(SourceDocuments.WorkingDocuments value) {
        this.workingDocuments = value;
    }

    @Override
    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.DEFAULT; // Updated to use DEFAULT
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    @Override
    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    @Override
    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            SourceDocuments.SalesInvoices theSalesInvoices;
            theSalesInvoices = this.getSalesInvoices();
            strategy.appendField(locator, this, "salesInvoices", buffer, theSalesInvoices, (this.salesInvoices != null));
        }
        {
            SourceDocuments.MovementOfGoods theMovementOfGoods;
            theMovementOfGoods = this.getMovementOfGoods();
            strategy.appendField(locator, this, "movementOfGoods", buffer, theMovementOfGoods, (this.movementOfGoods != null));
        }
        {
            SourceDocuments.WorkingDocuments theWorkingDocuments;
            theWorkingDocuments = this.getWorkingDocuments();
            strategy.appendField(locator, this, "workingDocuments", buffer, theWorkingDocuments, (this.workingDocuments != null));
        }
        return buffer;
    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "numberOfMovementLines",
        "totalQuantityIssued",
        "stockMovement"
    })
    public static class MovementOfGoods implements ToString2 {

        @XmlElement(name = "NumberOfMovementLines", required = true)
        @XmlSchemaType(name = "nonNegativeInteger")
        protected BigInteger numberOfMovementLines;
        @XmlElement(name = "TotalQuantityIssued", required = true)
        protected BigDecimal totalQuantityIssued;
        @XmlElement(name = "StockMovement")
        protected List<SourceDocuments.MovementOfGoods.StockMovement> stockMovement;

        public BigInteger getNumberOfMovementLines() {
            return numberOfMovementLines;
        }

        public void setNumberOfMovementLines(BigInteger value) {
            this.numberOfMovementLines = value;
        }

        public BigDecimal getTotalQuantityIssued() {
            return totalQuantityIssued;
        }

        public void setTotalQuantityIssued(BigDecimal value) {
            this.totalQuantityIssued = value;
        }

        public List<SourceDocuments.MovementOfGoods.StockMovement> getStockMovement() {
            if (stockMovement == null) {
                stockMovement = new ArrayList<SourceDocuments.MovementOfGoods.StockMovement>();
            }
            return this.stockMovement;
        }

        @Override
        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.DEFAULT; // Updated to use DEFAULT
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        @Override
        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        @Override
        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                BigInteger theNumberOfMovementLines;
                theNumberOfMovementLines = this.getNumberOfMovementLines();
                strategy.appendField(locator, this, "numberOfMovementLines", buffer, theNumberOfMovementLines, (this.numberOfMovementLines != null));
            }
            {
                BigDecimal theTotalQuantityIssued;
                theTotalQuantityIssued = this.getTotalQuantityIssued();
                strategy.appendField(locator, this, "totalQuantityIssued", buffer, theTotalQuantityIssued, (this.totalQuantityIssued != null));
            }
            {
                List<SourceDocuments.MovementOfGoods.StockMovement> theStockMovement;
                theStockMovement = (((this.stockMovement != null) && (!this.stockMovement.isEmpty())) ? this.getStockMovement() : null);
                strategy.appendField(locator, this, "stockMovement", buffer, theStockMovement, ((this.stockMovement != null) && (!this.stockMovement.isEmpty())));
            }
            return buffer;
        }

        // The rest of the MovementOfGoods class remains unchanged...

    }

    // The rest of the SourceDocuments class remains unchanged...

}