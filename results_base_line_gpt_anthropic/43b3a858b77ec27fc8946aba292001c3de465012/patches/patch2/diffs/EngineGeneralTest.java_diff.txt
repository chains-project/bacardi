20,23d19
< import com.feedzai.commons.sql.abstraction.ddl.AlterColumn;
< import com.feedzai.commons.sql.abstraction.ddl.DbColumn;
< import com.feedzai.commons.sql.abstraction.ddl.DbColumnConstraint;
< import com.feedzai.commons.sql.abstraction.ddl.DbColumnType;
25,38d20
< import com.feedzai.commons.sql.abstraction.ddl.Rename;
< import com.feedzai.commons.sql.abstraction.dml.Expression;
< import com.feedzai.commons.sql.abstraction.dml.K;
< import com.feedzai.commons.sql.abstraction.dml.Query;
< import com.feedzai.commons.sql.abstraction.dml.Truncate;
< import com.feedzai.commons.sql.abstraction.dml.Update;
< import com.feedzai.commons.sql.abstraction.dml.Values;
< import com.feedzai.commons.sql.abstraction.dml.With;
< import com.feedzai.commons.sql.abstraction.dml.dialect.Dialect;
< import com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder;
< import com.feedzai.commons.sql.abstraction.dml.result.ResultColumn;
< import com.feedzai.commons.sql.abstraction.dml.result.ResultIterator;
< import com.feedzai.commons.sql.abstraction.engine.AbstractDatabaseEngine;
< import com.feedzai.commons.sql.abstraction.engine.ConnectionResetException;
41,42d22
< import com.feedzai.commons.sql.abstraction.engine.DatabaseEngineRuntimeException;
< import com.feedzai.commons.sql.abstraction.exceptions.DatabaseEngineUniqueConstraintViolationException;
45,49d24
< import com.feedzai.commons.sql.abstraction.engine.MappedEntity;
< import com.feedzai.commons.sql.abstraction.engine.NameAlreadyExistsException;
< import com.feedzai.commons.sql.abstraction.engine.OperationNotSupportedRuntimeException;
< import com.feedzai.commons.sql.abstraction.engine.impl.cockroach.SkipTestCockroachDB;
< import com.feedzai.commons.sql.abstraction.engine.testconfig.BlobTest;
52,59d26
< import com.feedzai.commons.sql.abstraction.entry.EntityEntry;
< import com.google.common.collect.ImmutableSet;
< import java.sql.SQLException;
< import mockit.Expectations;
< import mockit.Invocation;
< import mockit.Mock;
< import mockit.MockUp;
< import mockit.Verifications;
69,72d35
< import java.io.ByteArrayOutputStream;
< import java.io.ObjectOutputStream;
< import java.sql.Connection;
< import java.util.Arrays;
74,77d36
< import java.util.HashMap;
< import java.util.LinkedHashMap;
< import java.util.List;
< import java.util.Map;
79,84d37
< import java.util.UUID;
< import java.util.concurrent.CountDownLatch;
< import java.util.concurrent.ThreadLocalRandom;
< import java.util.concurrent.atomic.AtomicReference;
< import java.util.stream.Collectors;
< import java.util.stream.IntStream;
86,87d38
< import static com.feedzai.commons.sql.abstraction.ddl.DbColumnConstraint.NOT_NULL;
< import static com.feedzai.commons.sql.abstraction.ddl.DbColumnType.BLOB;
89d39
< import static com.feedzai.commons.sql.abstraction.ddl.DbColumnType.CLOB;
94,138d43
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.L;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.all;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.avg;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.between;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.caseWhen;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.cast;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.ceiling;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.coalesce;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.column;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.concat;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.count;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.createView;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.dbColumn;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.dbEntity;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.dbFk;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.delete;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.div;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.dropPK;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.entry;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.eq;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.f;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.floor;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.in;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.k;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.like;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.lit;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.lower;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.max;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.min;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.mod;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.neq;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.notBetween;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.notIn;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.or;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.select;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.stddev;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.sum;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.table;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.udf;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.union;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.update;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.upper;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.values;
< import static com.feedzai.commons.sql.abstraction.dml.dialect.SqlBuilder.with;
< import static com.feedzai.commons.sql.abstraction.engine.EngineTestUtils.buildEntity;
142d46
< import static com.feedzai.commons.sql.abstraction.engine.configuration.PdbProperties.SCHEMA_POLICY;
144,155c48,49
< import static com.feedzai.commons.sql.abstraction.util.StringUtils.quotize;
< import static org.assertj.core.api.Assertions.assertThat;
< import static org.assertj.core.api.Assertions.assertThatCode;
< import static org.junit.Assert.assertArrayEquals;
< import static org.junit.Assert.assertEquals;
< import static org.junit.Assert.assertFalse;
< import static org.junit.Assert.assertNotNull;
< import static org.junit.Assert.assertNull;
< import static org.junit.Assert.assertTrue;
< import static org.junit.Assert.fail;
< import static org.junit.Assume.assumeFalse;
< import static org.junit.Assume.assumeTrue;
---
> 
> import java.util.Properties;
164,165d57
<     private static final double DELTA = 1e-7;
< 
190d81
<                 setProperty(SCHEMA_POLICY, "drop-create");
