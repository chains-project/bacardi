26c26
< import org.apache.thrift.transport.TTransportFramed; // Changed import for the updated library
---
> import org.apache.thrift.transport.TTransport;  // Updated import for the updated library (removing TTransportFramed)
46d45
< 
54d52
< 
64,65c62,63
<   // The framed transport.
<   private final TTransportFramed framedTransport; // Updated type
---
>   // The transport.
>   private final TTransport transport; // Updated type
81,82c79
<     this.framedTransport = new TTransportFramed(new TIOStreamTransport(this
<         .byteOffsetInputStream), maxMessageSize); // Updated instantiation
---
>     this.transport = new TIOStreamTransport(this.byteOffsetInputStream); // Updated instantiation
84c81
<     this.protocol = protocolFactory.get(this.framedTransport);
---
>     this.protocol = protocolFactory.get(this.transport);
95,96c92,93
<     // If frame buffer is empty and we are at EOF of underlying input stream, return null.
<     if (framedTransport.getBytesRemainingInBuffer() == 0 && byteOffsetInputStream.isEOF()) {
---
>     // If buffer is empty and we are at EOF of underlying input stream, return null.
>     if (transport.getBytesRemainingInBuffer() == 0 && byteOffsetInputStream.isEOF()) {
111,112c108,109
<         byteOffsetInputStream.getByteOffset() >= framedTransport.getBytesRemainingInBuffer());
<     return byteOffsetInputStream.getByteOffset() - framedTransport.getBytesRemainingInBuffer();
---
>         byteOffsetInputStream.getByteOffset() >= transport.getBytesRemainingInBuffer());
>     return byteOffsetInputStream.getByteOffset() - transport.getBytesRemainingInBuffer();
128c125,126
<     framedTransport.consumeBuffer(framedTransport.getBytesRemainingInBuffer());
---
>     // Assuming consumeBuffer is a method applicable to the updated transport
>     transport.consumeBuffer(transport.getBytesRemainingInBuffer());
140c138
<     framedTransport.close();
---
>     transport.close();
