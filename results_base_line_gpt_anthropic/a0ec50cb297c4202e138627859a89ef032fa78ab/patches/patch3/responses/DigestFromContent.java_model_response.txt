```java
/*
 * The MIT License (MIT) Copyright (c) 2020-2021 artipie.com
 * https://github.com/artipie/docker-adapter/LICENSE.txt
 */
package com.artipie.docker.misc;

import com.artipie.asto.Content;
import com.artipie.docker.Digest;
import hu.akarnokd.rxjava2.interop.SingleInterop;
import io.reactivex.Completable;
import io.reactivex.Flowable;
import io.reactivex.Single;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.concurrent.CompletionStage;
import org.cactoos.bytes.BytesOf;
import org.cactoos.text.HexOf; // Ensure the correct import for HexOf

/**
 * Digest from content.
 * @since 0.2
 */
public final class DigestFromContent {

    /**
     * Content.
     */
    private final Content content;

    /**
     * Ctor.
     * @param content Content publisher
     */
    public DigestFromContent(final Content content) {
        this.content = content;
    }

    /**
     * Calculates digest from content.
     * @return CompletionStage from digest
     */
    public CompletionStage<Digest> digest() {
        final MessageDigest sha;
        try {
            sha = MessageDigest.getInstance("SHA-256");
        } catch (final NoSuchAlgorithmException err) {
            throw new IllegalStateException("This runtime doesn't have SHA-256 algorithm", err);
        }
        return Flowable.fromPublisher(this.content)
            .flatMapCompletable(
                buf -> Completable.fromAction(
                    () -> {
                        buf.mark();
                        sha.update(buf);
                        buf.reset();
                    }
                )
            )
            .<Digest>andThen(
                Single.fromCallable(
                    () -> new Digest.Sha256(new HexOf(new BytesOf(sha.digest())).asString())
                )
            )
            .to(SingleInterop.get()).toCompletableFuture();
    }

}
``` 

In the provided code, the necessary imports for `BytesOf` and `HexOf` from the `org.cactoos` package are maintained. If any of these classes were missing in the updated dependencies, you would need to ensure they are included in your project's dependencies (e.g., in your Maven or Gradle build file). However, the provided class does not require any changes as it already adheres to the structure and imports needed for compilation. 

If the `org.cactoos` package has been completely removed or replaced in the newer dependency version, you might need to find alternative libraries that provide similar functionality to replace `HexOf` and `BytesOf`.
