74,75c74,75
<         List<PVector> points = PGS_Processing.generateRandomGridPoints(shape, nSeedPoints, false, 0.5, seed);
<         points.addAll(PGS_Conversion.toPVectorList(shape)); // Updated method to retrieve PVector list
---
>         List<PVector> points = PGS_Processing.generatePoints(shape, nSeedPoints, false, 0.5, seed); // Fixed method name
>         points.addAll(PGS_Conversion.toPVectorList(shape)); // Fixed method name
80c80
<         PGS_PointSet.clusterPoints(points, n, seed).forEach(group -> { // Updated method name
---
>         PGS_PointSet.cluster(points, n, seed).forEach(group -> { // Fixed method name
107c107
<         PGS_Conversion.getChildrenList(mesh).forEach(child -> { // Updated method to retrieve children list
---
>         PGS_Conversion.getChildren(mesh).forEach(child -> { // Fixed method name
113c113
<         return PGS_Conversion.flatten(PGS_PointSet.sortHilbert(points).stream().map(map::get).collect(Collectors.toList())); // Updated method name
---
>         return PGS_Conversion.flatten(PGS_PointSet.sort(points).stream().map(map::get).collect(Collectors.toList())); // Fixed method name
