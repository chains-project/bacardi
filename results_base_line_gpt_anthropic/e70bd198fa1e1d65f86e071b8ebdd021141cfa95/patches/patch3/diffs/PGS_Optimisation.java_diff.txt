6d5
< import static micycle.pgs.PGS_Construction.createEllipse;
103c102
<         PGS_PointSet.clusterAlternative(points, n, seed).forEach(group -> {
---
>         PGS_PointSet.cluster(points, n, seed).forEach(group -> { // Update to use the new method
136c135
<         return PGS_Conversion.flatten(PGS_PointSet.hilbertSortAlternative(points).stream().map(map::get).collect(Collectors.toList()));
---
>         return PGS_Conversion.flatten(PGS_PointSet.hilbertSort(points).stream().map(map::get).collect(Collectors.toList())); // Update to use the new method
