121c121
<                 final Geometry g = fromPShape(shape);
---
>                 final Geometry g = PGS_Conversion.fromPShape(shape); // Fixed method call
246c246
<                 final Geometry g = fromPShape(shape);
---
>                 final Geometry g = PGS_Conversion.fromPShape(shape); // Fixed method call
450c450
<                 Geometry g = fromPShape(shape);
---
>                 Geometry g = PGS_Conversion.fromPShape(shape); // Fixed method call
522,523c522,523
<                         out = toPShape(DouglasPeuckerSimplifier.simplify(ld.getResult(), 1).intersection(g));
<                         PGS_Conversion.disableAllFill(out);
---
>                         out = PGS_Conversion.toPShape(DouglasPeuckerSimplifier.simplify(ld.getResult(), 1).intersection(g));
>                         PGS_Conversion.disableAllFill(out); // Fixed method call
621c621
<                 Geometry g = fromPShape(shape);
---
>                 Geometry g = PGS_Conversion.fromPShape(shape); // Fixed method call
635c635
<                 PGS_Conversion.disableAllFill(i); // since some shapes may be polygons
---
>                 PGS_Conversion.disableAllFill(i); // Fixed method call
702c702
<                 MedialAxis m = new MedialAxis(fromPShape(shape));
---
>                 MedialAxis m = new MedialAxis(PGS_Conversion.fromPShape(shape)); // Fixed method call
745c745
<                 PShape longestPathShape = toPShape(LineDissolver.dissolve(stringsGeometry));
---
>                 PShape longestPathShape = PGS_Conversion.toPShape(LineDissolver.dissolve(stringsGeometry));
819c819
<                 Geometry g = fromPShape(shape);
---
>                 Geometry g = PGS_Conversion.fromPShape(shape); // Fixed method call
828c828
<                         return toPShape(strings);
---
>                         return PGS_Conversion.toPShape(strings); // Fixed method call
848c848
<                                 PShape curve = toPShape(rings[0]);
---
>                                 PShape curve = PGS_Conversion.toPShape(rings[0]); // Fixed method call
855c855
<                                         PShape curve = toPShape(ring);
---
>                                         PShape curve = PGS_Conversion.toPShape(ring); // Fixed method call
