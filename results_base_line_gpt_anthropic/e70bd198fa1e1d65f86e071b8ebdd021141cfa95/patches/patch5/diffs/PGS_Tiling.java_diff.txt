134a135
>         // Updated method calls to match the new PGS_Conversion methods
175,184d175
<                 // A closed-form solution for a single p, q (now deprecated).
<                 /*
<                  * double start = 0; // starting circle n double sr, ang, cr;
<                  * 
<                  * for (int i = 0; i < nCircles; i++) { sr = Math.exp((start + i) * 0.06101); //
<                  * spiral radius ang = (start + i) * 0.656; // spiral angle cr = 0.3215 *
<                  * Math.exp((start + i) * 0.06101); // circle radius circles.add(new
<                  * PVector((float) (sr * Math.cos(ang) + centerX), (float) (sr * Math.sin(ang) +
<                  * centerY), (float) cr)); }
<                  */
244d234
<                 // adapted from https://openprocessing.org/sketch/320133
249c239
<                                 for (int i = 0; i <= vector.length; i++) {
---
>                 for (int i = 0; i < vector.length; i++) {
