```java
package io.github.wesleyosantos91.api.v1.mapper;

import io.github.wesleyosantos91.api.v1.request.PersonRequest;
import io.github.wesleyosantos91.api.v1.response.PersonResponse;
import io.github.wesleyosantos91.core.domain.PersonDomain;
import java.util.ArrayList;
import java.util.List;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

// Ensure that the correct version of MapStruct is being used
@Mapper(componentModel = "spring") // Added componentModel to ensure compatibility with Spring
public interface PersonHttpMapper {

    PersonHttpMapper INSTANCE = Mappers.getMapper(PersonHttpMapper.class);
    PersonDomain toDomain(PersonRequest request);
    PersonRequest toRequest(PersonDomain domain);

    PersonDomain toDomain(PersonResponse response);
    PersonResponse toResponse(PersonDomain domain);

    default List<PersonResponse> toListResponse(List<PersonDomain> domains){
        List<PersonResponse> list = new ArrayList<>();
        domains.forEach(d -> list.add(toResponse(d)));
        return list;
    }
}
``` 

In this case, the original code appears to be correct, and the error message indicates an issue with the `@Mapper` annotation retrieval, which may be due to a dependency update. If the MapStruct version has changed, ensure that the correct version is included in your build configuration (e.g., Maven or Gradle). 

If the error persists, consider checking the following:
- Ensure that the MapStruct library is correctly included in your project dependencies.
- Verify that the annotation processor is configured correctly in your build tool.
- If using Maven, ensure that the `mapstruct-processor` dependency is included in the `annotationProcessor` scope.

If the issue is related to the version of MapStruct, you may need to update your build configuration to match the new version's requirements.
