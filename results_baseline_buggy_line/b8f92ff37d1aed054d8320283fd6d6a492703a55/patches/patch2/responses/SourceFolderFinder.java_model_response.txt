```java
package fr.spoonlabs.flacoco.core.test.strategies.classloader.finder.classes.impl;

import fr.spoonlabs.flacoco.core.test.strategies.classloader.finder.classes.ClassFinder;
import org.apache.maven.plugin.surefire.util.DirectoryScanner;
import org.apache.maven.surefire.api.testset.TestListResolver;

import java.io.File;
import java.util.List;

public class SourceFolderFinder implements ClassFinder {

    private String srcFolder;

    public SourceFolderFinder(String srcFolder) {
        this.srcFolder = srcFolder;
    }

    @Override
    public String[] getClasses() {
        return getClassesLoc(new File(srcFolder)).toArray(new String[0]);
    }

    static List<String> getClassesLoc(File testSrcFolder) {
        DirectoryScanner directoryScanner = new DirectoryScanner();
        directoryScanner.setBasedir(testSrcFolder);
        directoryScanner.setIncludes(new String[]{TestListResolver.getWildcard()});
        directoryScanner.scan();
        return List.of(directoryScanner.getIncludedFiles());
    }
}
``` 

### Explanation of Changes:
1. **DirectoryScanner Initialization**: The `DirectoryScanner` constructor was incorrectly used with a `File` parameter. Instead, I initialized it without parameters and set the base directory using `setBasedir()`.
2. **Setting Includes**: The includes for the scanner are now set using `setIncludes()`, passing the wildcard obtained from `TestListResolver.getWildcard()`.
3. **Return Value**: The return value is now obtained from `getIncludedFiles()` instead of `getClasses()`, which aligns with the updated API of `DirectoryScanner`. 

These changes ensure compatibility with the updated dependencies while maintaining the original functionality of the class.
