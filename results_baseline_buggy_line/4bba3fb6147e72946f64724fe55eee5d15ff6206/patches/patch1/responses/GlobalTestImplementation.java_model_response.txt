```java
package de.hilling.junit.cdi.annotations;

import jakarta.annotation.Priority; // Updated import to use jakarta.annotation
import de.hilling.junit.cdi.scope.TestScoped;
import org.immutables.value.Value;

import jakarta.enterprise.inject.Alternative; // Updated import to use jakarta.enterprise.inject
import jakarta.enterprise.inject.Stereotype; // Updated import to use jakarta.enterprise.inject
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * Use this annotation to mark Alternatives that should globally replace
 * production implementations.
 * <p>
 *     These services cannot be disabled or enabled on a per test basis
 *     because the container is only started once.
 * </p>
 */
@Alternative
@TestScoped
@Stereotype
@Target({ElementType.TYPE, ElementType.FIELD, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Priority(100)
@Value.Immutable
public @interface GlobalTestImplementation {
}
``` 

In this patch, I have updated the imports for `Priority`, `Alternative`, and `Stereotype` to use the `jakarta` namespace, which is the new package structure following the transition from Java EE to Jakarta EE. This change addresses the compilation errors caused by the missing `javax.annotation` package.
