```java
package de.hilling.junit.cdi.annotations;

import de.hilling.junit.cdi.scope.TestScoped;
import org.immutables.value.Value;

import jakarta.annotation.Priority; // Updated import
import jakarta.enterprise.inject.Alternative; // Updated import
import jakarta.enterprise.inject.Stereotype; // Updated import
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * Use this annotation to mark Alternatives that should globally replace
 * production implementations.
 * <p>
 *     These services cannot be disabled or enabled on a per test basis
 *     because the container is only started once.
 * </p>
 */
@Alternative
@TestScoped
@Stereotype
@Target({ElementType.TYPE, ElementType.FIELD, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Priority(100)
@Value.Immutable
public @interface GlobalTestImplementation {
}
``` 

In this patch, I have updated the import statements to use the `jakarta` namespace instead of `javax`, which resolves the compilation errors related to the missing classes `Alternative` and `Stereotype`. This change is necessary due to the breaking changes introduced in the newer versions of the Jakarta EE specifications. The rest of the code remains unchanged, adhering to the provided guidelines.
