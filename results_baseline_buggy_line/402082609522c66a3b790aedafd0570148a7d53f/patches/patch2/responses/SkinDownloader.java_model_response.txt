```java
package com.github.games647.changeskin.sponge.task;

import com.github.games647.changeskin.core.model.skin.SkinModel;
import com.github.games647.changeskin.core.shared.task.SharedDownloader;
import com.github.games647.changeskin.sponge.ChangeSkinSponge;

import java.util.UUID;

import org.spongepowered.api.command.CommandSource; // Ensure this import is correct based on the updated dependency
import org.spongepowered.api.entity.living.player.Player;
import org.spongepowered.api.scheduler.Task;

public class SkinDownloader extends SharedDownloader {

    private final ChangeSkinSponge plugin;
    private final CommandSource invoker;
    private final Player receiver;

    public SkinDownloader(ChangeSkinSponge plugin, CommandSource invoker, Player receiver, UUID targetUUID
            , boolean keepSkin) {
        super(plugin.getCore(), keepSkin, targetUUID, receiver.getUniqueId());

        this.plugin = plugin;
        this.invoker = invoker;
        this.receiver = receiver;
    }

    @Override
    protected void scheduleApplyTask(SkinModel skinData) {
        Runnable skinUpdater = new SkinApplier(plugin, invoker, receiver, skinData, keepSkin);
        Task.builder().execute(skinUpdater).submit(plugin);
    }

    @Override
    public void sendMessageInvoker(String id) {
        plugin.sendMessage(invoker, id);
    }
}
```

### Explanation of Changes:
1. **Import Statement**: The import statement for `CommandSource` was retained as it was already correct. However, if the package structure has changed in the updated dependency, you may need to adjust it accordingly. Ensure that `org.spongepowered.api.command.CommandSource` is the correct path in the new version.
2. **No Changes to Function Signatures**: The function signatures remain unchanged as per the requirements.
3. **No Removal of Code**: Existing code was not removed since it does not directly cause a compilation or functionality error.
4. **@Override Annotations**: The `@Override` annotations were retained as the methods still override methods from the superclass. 

Make sure to verify the correct package for `CommandSource` in the updated dependency documentation, as the error suggests that it may have been moved or renamed. If it has been moved, you will need to update the import statement accordingly.
